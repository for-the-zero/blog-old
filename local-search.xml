<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Quicktools第二弹来了！</title>
    <link href="/2025/Quicktools2/"/>
    <url>/2025/Quicktools2/</url>
    
    <content type="html"><![CDATA[<h1 id="Quicktools第二弹，它来了！"><a href="#Quicktools第二弹，它来了！" class="headerlink" title="Quicktools第二弹，它来了！"></a>Quicktools第二弹，它来了！</h1><p>时隔一个学期，又做了一个东西</p><p><a href="https://ftz-tools.netlify.net/">Netlify</a> <a href="https://for-the-zero.github.io/quicktools">Github Pages</a></p><p><img src="/img/2025-01-23-23-46-05-image.png"></p><p>从TypeTo到Taple</p><p><del>除了Taple都是水</del></p><hr><h2 id="TypeTo"><a href="#TypeTo" class="headerlink" title="TypeTo"></a>TypeTo</h2><p>做着玩的，你按一个键屏幕上就会出现对应的字符</p><p>没什么的，知识你自己不要把焦点放到清空键然后按空格就行</p><hr><h2 id="Passkey"><a href="#Passkey" class="headerlink" title="Passkey"></a>Passkey</h2><p>没写css</p><p>嘿！这是一种密文</p><p>从左到右读取，每一个“字符”是1*3的矩阵，从上到下拼成三个数字，按照编码解密出一个字符，然后连在一起</p><p>编码：</p><table><thead><tr><th align="center">区域</th><th align="center">内容</th></tr></thead><tbody><tr><td align="center">0开头</td><td align="center">数字</td></tr><tr><td align="center">1开头</td><td align="center">字母，100是空格，101到126是小写字母，按顺序来，后面是大写字母</td></tr><tr><td align="center">2开头</td><td align="center">部分符号，从200开始分别是<code>.,():!?</code></td></tr></tbody></table><p>数字对应内容：</p><table><thead><tr><th align="center">数字</th><th align="center">图片</th></tr></thead><tbody><tr><td align="center">0</td><td align="center"><img src="/img/c8e22a78efad0c835889fa0bec556305481d28c3.svg" alt="0.svg"></td></tr><tr><td align="center">1</td><td align="center"><img src="/img/7065fa994db137188dd94a7e55046ff6a6ae31a1.svg" alt="1.svg"></td></tr><tr><td align="center">2</td><td align="center"><img src="/img/eb6df1e54852bc4b1a16d6e47491366ecf226046.svg" alt="2.svg"></td></tr><tr><td align="center">3</td><td align="center"><img src="/img/4db8768581207a2b0de1817592b4ec943e1f719a.svg" alt="3.svg"></td></tr><tr><td align="center">4</td><td align="center"><img src="/img/9da000a85bb01a1c6ef61b74634894da9fef5835.svg" alt="4.svg"></td></tr><tr><td align="center">5</td><td align="center"><img src="/img/8b7fba1f710597b3508b89130a2a7ca1a8f16387.svg" alt="5.svg"></td></tr><tr><td align="center">6</td><td align="center"><img src="/img/ab15954e16119560e9c19e64c28b6dad2b548250.svg" alt="6.svg"></td></tr><tr><td align="center">7</td><td align="center"><img src="/img/3f65e3d02c66b1f7f6eee5bd5e5fb67a859a5415.svg" alt="7.svg"></td></tr><tr><td align="center">8</td><td align="center"><img src="/img/d5377f5c6921df9abd59af09c362569124ded040.svg" alt="8.svg"></td></tr><tr><td align="center">9</td><td align="center"><img src="/img/3b5faeeef1a401dd15aff366cedd84dc41ab63f2.svg" alt="9.svg"></td></tr></tbody></table><hr><h2 id="VisualVoice"><a href="#VisualVoice" class="headerlink" title="VisualVoice"></a>VisualVoice</h2><p>没有css，ai写的，最水的一集</p><p>把麦克风的声音实时转化为响度、音调、音色，然后对应RGB，设置到背景就行了</p><hr><h2 id="Taple"><a href="#Taple" class="headerlink" title="Taple"></a>Taple</h2><p><strong>重头戏啊！</strong></p><p>这可是我作恶一个学期的项目</p><p>而且开了一个单独的<a href="https://github.com/for-the-zero/taple">Github仓库</a></p><p>操作指南已经写在了README</p><p>所以这里还是讲我的开发经历吧</p><hr><p>不过，这个做的相对于我的期盼，还是少了</p><p>主要是表头方面的欠缺，理想版：</p><p><img src="/img/93c2ace02876d144edd37b15f8fe2a6c241a5d23.png" alt="i-dont-have-that-time-or-ability-to-make-the-full-ver.png"></p><h3 id="一开始"><a href="#一开始" class="headerlink" title="一开始"></a>一开始</h3><p>这个表格的样式是在我上学的时候自己创，目的是简约，一直想做电子版但是一直没有提上日程，excel做太tm麻烦了，后来就有了这个项目了</p><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><p>这次我不用任何组件库，直接自己写css</p><p>不过在firefix上显示效果怪怪的，后面可能<del>不</del>会改</p><h3 id="渲染部分"><a href="#渲染部分" class="headerlink" title="渲染部分"></a>渲染部分</h3><p>最tm难的部分，错的地方不会报错，全是逻辑问题</p><p>尤其是那个<del>连体</del>合并单元格，bug改了好久</p><h3 id="交互部分"><a href="#交互部分" class="headerlink" title="交互部分"></a>交互部分</h3><p><code>f63a96e</code>这个叫做<code>merge bug fixed</code>删除27行新增19行，把合并时的bug改好了</p><p>当时整个合并都是乱的，差不多就是：a指b为父单元格，b又指c是父单元格，c又指d是父单元格，d又指b是父单元格；有时候点了还不能合并；一个回型的单元格，中间还能多出一条分割线……麻了</p><p>删除行列时，你会发现所有涉及到的合并单元格全部都会解散，不会像添加行列那样识别</p><p>因为这样识别太难了，你怎么知道删除了之后这两部分还是不是连在一起的，在学校无聊的时候想了很久，想要找到怎么才能正确识别，最后还是想不出来，遂放弃</p><p>由于我用了ai自动填充（就是copilot那种），基本重复的部分回省事很多，但是……</p><p>它说往一个全部存储着JSON的数组里面<code>.push(JSON.parse(JSON.stringify(...)));</code>我一开始还没发现异常，就看到报错，盯着下面的读取JSON发呆……</p><h3 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h3><p>后来，上线了，但是发现几个问题</p><p>一个是点击高亮（手机）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    -webkit-tap-highlight-<span class="hljs-attribute">color</span>: transparent;   <br>&#125;<br></code></pre></td></tr></table></figure><p>哪个sb的主意要往网页里面默认加点击高亮的</p><p>一个是触屏滑动不了（移动模式）</p><p>遂加上<code>touchstart</code> <code>touchend</code> <code>touchmove</code>事件</p><p>由于前面<code>mousemove</code>使用了<code>e.movementX</code> <code>e.movementY</code>搞，简单，但是touch不支持，只能重写</p><hr><p>差不多就是这样了</p><p>准备肝下一个项目吧</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>H5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享一下我最近为英语演讲写的演讲搞（整活）</title>
    <link href="/2024/nglishSpeechShare/"/>
    <url>/2024/nglishSpeechShare/</url>
    
    <content type="html"><![CDATA[<h1 id="这是我最近为英语演讲写的演讲稿（搞）"><a href="#这是我最近为英语演讲写的演讲稿（搞）" class="headerlink" title="这是我最近为英语演讲写的演讲稿（搞）"></a>这是我最近为英语演讲写的演讲稿（搞）</h1><p><a href="../../img/%E6%BC%94%E8%AE%B2%E5%85%AC%E5%BC%80%E7%89%88.pptx">PPT文件</a></p><p>评价：</p><p><img src="/img/IMG_20241231_153153.jpg"> <img src="/img/IMG_20241231_153158.jpg"></p><h1 id="稿子"><a href="#稿子" class="headerlink" title="稿子"></a>稿子</h1><p>乱写的，重点在ppt整活</p><p>上面给了ppt，这里的<code>&lt;-&gt;</code>的意思是按一下ppt（播放动画或翻页）</p><blockquote><p>Good morning, everyone! &lt;-&gt; Today I will introduce an ancient Greek myth, which explores the origins of two fascinating words. &lt;-&gt;<br>There was a man who wants to struggle for the throne, he’s called &lt;-&gt; Minos, he asked a god, &lt;-&gt; Poseidon to help him, &lt;-&gt; but upon his success, Minos must sacrifice &lt;-&gt; a bull which Poseidon have given. &lt;-&gt;<br>However, Minos was not willing to kill it &lt;-&gt; because of its beauty, so he sacrificed another bull. &lt;-&gt; This made Poseidon &lt;-&gt; really angry, &lt;-&gt; he used magic to make the queen fall in love with the bull, resulting in the birth of a bull-headed man monster. &lt;-&gt;<br>To hide his shame, Minos made someone build a building called labyrinth &lt;-&gt; to imprison it. It’s too complex that the builder almost couldn’t get out. &lt;-&gt;  So, this is how the word “labyrinth” came, it means a maze! &lt;-&gt; &lt;-&gt;<br>After Minos defeated the Athenians &lt;-&gt; ，he forced them to send seven pairs of boys and girls a year to feed the monster. &lt;-&gt;  A hero called Theseusvolunteered to kill the monster. &lt;-&gt; His lover gave him a ball of string, known in ancient English as a “clew”.  &lt;-&gt; After he killing it, &lt;-&gt; he used the strings found a way out. &lt;-&gt;<br>Over time, the word “clew” evolved from “a ball of string” to “clue”, &lt;-&gt; which is a word we recently learned.<br>My speech is over, thanks. &lt;-&gt;</p></blockquote><h1 id="我在PPT干了什么"><a href="#我在PPT干了什么" class="headerlink" title="我在PPT干了什么"></a>我在PPT干了什么</h1><p><img src="/img/2024-12-31-15-49-49-image.png"></p><p>反手就是可交互，按按钮切换文本，做起来有点复杂</p><p><img src="/img/2024-12-31-15-51-00-image.png"></p><p>《只因你太美》（确实是字面上的意思）</p><p>还有个“专业配音师”，该大家来个措手不及</p><p><img src="/img/2024-12-31-15-52-23-image.png"></p><p>一堆成分复杂的东西升上来，可以自己下载ppt看</p><p><img src="/img/2024-12-31-15-53-09-image.png"></p><p>“牛”干“妻”生“牛人”的动画，十分生草，十分逆天</p><p><img src="/img/2024-12-31-15-54-11-image.png"></p><p>这四张迷宫图片是从两张迷宫图片里面裁出来的（一张变两张）</p><p>可以去 <a href="https://for-the-zero.github.io/MyDrive/">https://for-the-zero.github.io/MyDrive/</a> 找到，走法翻一下前面的博客《一种迷宫的介绍》</p><p><img src="/img/2024-12-31-15-57-26-image.png"></p><p>Sakuzyo+篮球+坤坤+神似PVZ，嗯……</p><p><img src="/img/2024-12-31-15-58-20-image.png"></p><p>两张哲♂学图片，懂得都懂</p>]]></content>
    
    
    <categories>
      
      <category>其它</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>消磨……命运……</title>
    <link href="/2024/%E6%B6%88%E7%A3%A8%E2%80%A6%E2%80%A6%E5%91%BD%E8%BF%90%E2%80%A6%E2%80%A6/"/>
    <url>/2024/%E6%B6%88%E7%A3%A8%E2%80%A6%E2%80%A6%E5%91%BD%E8%BF%90%E2%80%A6%E2%80%A6/</url>
    
    <content type="html"><![CDATA[<p>骗过别人，却不能骗过自己</p><p>……</p><hr><p>笔尖在一时一刻之中消磨</p><p>磨去自己，沦为废品</p><p>导致其毁灭的缘由又在哪</p><p>是谁迫使其毁灭</p><p>迫使者又实为其所愿</p><p>或许这就是命吧</p><p>……</p><hr><p>行尸走肉</p><p>工厂中的次品与优品</p><p>一个一个机器</p><p>按照这标准送往全世界</p><p>……</p><hr><p>一场无休止的战斗</p><p>没有胜利只有战死</p><p>除非坚持</p><p>向死而生而非其愿</p><p>士兵不断涌入</p><p>或许某天，敌人赞许而退</p><p>或许某天，全军覆没</p><p>，却不知打败他们的是敌人还是自己</p><p>……</p><hr><p>与此环境中</p><p>你不知对方有多差</p><p>亦不知自己有多废</p><p>而屠龙少年也可能成为恶龙</p><p>……</p><hr><p>上攀，不上</p><p>下坠，不愿</p><p>过往，不再</p><p>未来，何在</p><p>……</p><hr><p>如果能回到那天，我可能会考虑一下</p><p>在那个峭壁之上，是否该从顶上坠落</p>]]></content>
    
    
    <categories>
      
      <category>文笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>过去，现在，（）</title>
    <link href="/2024/%E8%BF%87%E5%8E%BB%EF%BC%8C%E7%8E%B0%E5%9C%A8%EF%BC%8C%EF%BC%88%EF%BC%89/"/>
    <url>/2024/%E8%BF%87%E5%8E%BB%EF%BC%8C%E7%8E%B0%E5%9C%A8%EF%BC%8C%EF%BC%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>星空璀璨</p><p>哪一处最亮</p><p>人群芸芸</p><p>哪一个是你</p><p>秋风吹过</p><p>风寒透骨</p><p>身凉 心寒</p><p>往日不再</p><p>笼中之鸟</p><p>欲别 犹存</p><p>……</p>]]></content>
    
    
    <categories>
      
      <category>文笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>初中毕业那天有感而作的</title>
    <link href="/2024/%E5%88%9D%E4%B8%AD%E6%AF%95%E4%B8%9A%E9%82%A3%E5%A4%A9%E6%9C%89%E6%84%9F%E8%80%8C%E4%BD%9C%E7%9A%84/"/>
    <url>/2024/%E5%88%9D%E4%B8%AD%E6%AF%95%E4%B8%9A%E9%82%A3%E5%A4%A9%E6%9C%89%E6%84%9F%E8%80%8C%E4%BD%9C%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<p>是毁灭，还是重生</p><hr><p>高兴，因为终于再也见不到某些人和事物了</p><p>悲伤，因为恐怕再也见不到某些人和事物了</p><hr><p>彻夜思索</p><p>却无言</p><p>怀念着</p><p>荏苒的时光中的欢欣</p><p>于</p><p>高兴与悲伤的交点</p><hr><p>抬手，却又放下</p><p>走进，却又离开</p><hr><p>这堵墙，能否打破</p><p>我们还能再见吗</p><p>如果时光定格在那一刻</p><hr><p>「你好」「谢谢」最后是「再见」</p><hr><p>两个阴影的消散</p><p>愿不再重来</p><p>两缕阳光的褪去</p><p>愿不再失去</p><hr><p>一个人的天地，还是热闹的人群</p><p>清幽的空间，与热闹的人群</p><p>他人的欢乐</p><p>一人的悲伤</p><hr><p>终究，轮回</p><p>三年前，今日时</p><p>最后的努力</p><p>最后的挣扎</p><p>最后的生命</p><p>三年的努力</p><p>三年的挣扎</p><p>三年的改变</p><p>一夕的崩塌</p>]]></content>
    
    
    <categories>
      
      <category>文笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>制度的“洪流”</title>
    <link href="/2024/%E5%88%B6%E5%BA%A6%E7%9A%84%E2%80%9C%E6%B4%AA%E6%B5%81%E2%80%9D/"/>
    <url>/2024/%E5%88%B6%E5%BA%A6%E7%9A%84%E2%80%9C%E6%B4%AA%E6%B5%81%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<p>一切都在变得僵化</p><p>许久以前平静的水流中慢慢出现了一阵洪流</p><p>在这股洪流中，大家被冲上来</p><p>披荆斩棘，朝着“唯一”的出口</p><p>后人设的巨墙，似乎无懈可击，只能是那一个出口</p><p>河道中、出口处……挤满了人</p><p>挤死的、淹死的、进不去的……</p><p>“未来”可能就要止步于此</p><p>过去了的，欢喜，因为途中的苦难；过不去的，只留下了悲伤，因为途中的苦难</p><p>真的只能是那一个出口吗</p><p>又能不能逆水行舟呢</p><p>但无路可走又无处可逃</p><p>只能朝着那人造黑夜中唯一能看到的光明</p><p>——那个“唯一”</p>]]></content>
    
    
    <categories>
      
      <category>文笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>制度的僵化与我的思考</title>
    <link href="/2024/%E5%88%B6%E5%BA%A6%E7%9A%84%E5%83%B5%E5%8C%96%E4%B8%8E%E6%88%91%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <url>/2024/%E5%88%B6%E5%BA%A6%E7%9A%84%E5%83%B5%E5%8C%96%E4%B8%8E%E6%88%91%E7%9A%84%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<p>无视现实的制度，必然腐朽；空想的“完美”，处处是问题</p><p>在无理的制度之下，在无力的民众之下，表面必然有序，果真如此吗？</p><p>即使是斯巴达克的力量也无法抵抗成熟的势力</p><p>我们只是机器，高考的机器，我们只是一个个数字，高考的成绩，我们为学校创造价值，却可能在过程中失去我们自身的价值</p><p>将一个个特别的力量凝聚成一股单调的力量，有什么意义</p><p>失去了快乐，失去了曾经熟悉的一切，为着用一个目标奋斗，挤在了同一条跑道</p><p>学习本身的意义是什么？是竞争出个你死我活吗？生活的意义是什么？是所有人在一个固定的路线上拥挤地前行吗</p><p>制度是死的，人也是死的……</p><p>单单是学校，给人一种奴隶社会与封建社会之间的感觉，确实，我们的生产力过低，三年才能看到成果，别无他物，对于学校来说，也只是招生的时候多了一份荣誉</p><p>我们没有能力做什么，也没有机会做什么，似乎也无法找到自己的“生产力”</p><p>在这个僵化的制度之下，我们能够改变什么？</p>]]></content>
    
    
    <categories>
      
      <category>文笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>设想：&quot;子网络空间&quot;</title>
    <link href="/2024/subnet/"/>
    <url>/2024/subnet/</url>
    
    <content type="html"><![CDATA[<h1 id="子网络空间"><a href="#子网络空间" class="headerlink" title="子网络空间"></a>子网络空间</h1><p>这是一个最近冒出来的小想法，是一个基于且当前网络规则&#x2F;协议的另一个网络，独立存在且与互联网隔绝</p><p>不过我没有那个时间和技术去搞这个，而且部分技术本身的合法性需要探究，虽然不是违法用途</p><p>这个想法同样也容易被滥用，尤其是监管部分，实现与我的目的相反的内容</p><p>我对部分技术的了解不深，可能会有错误或更好的方法</p><hr><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>不知道大家有没有发现，现在网络环境越来越差</p><h2 id="垃圾内容越来越多"><a href="#垃圾内容越来越多" class="headerlink" title="垃圾内容越来越多"></a>垃圾内容越来越多</h2><p>别说营销号和部分自媒体了，甚至就连新闻媒体官方账号都发布一些被称为“黄色新闻”的伪新闻，新闻三要素统统没有，内容不痛不痒，黄色为底色放上几个大字吸引目光，根本没资格称作新闻</p><h2 id="观众的内容取向偏于低创"><a href="#观众的内容取向偏于低创" class="headerlink" title="观众的内容取向偏于低创"></a>观众的内容取向偏于低创</h2><p>网上充斥着各种套模板、内容简单、制作容易的低创内容，但是它们的受欢迎程度远远高于一些制作不易技术力高的内容</p><p>当然我也觉得其中一个原因是人们的生活方面导致的</p><h2 id="不良信息越来越多"><a href="#不良信息越来越多" class="headerlink" title="不良信息越来越多"></a>不良信息越来越多</h2><p>你下载一个软件，反正是可以让用户发布内容的，搜索各种软色情关键词，大概率能够看到大量擦边球内容，这些内容好吗？应该存在吗？</p><p>在某个知名的“可能会变质但永远不会倒闭”的视频网站，据说有（找了，是真的）一些卖片的，利用付费视频的功能传播一些不良信息，我不知道这么做是不是绕过了审核，但是它是可以存在的，另外还有一些直接在封面上写了卖*的，联系方式都写上了，就等着去“上门服务”了，很不理解这是怎么出现在带有审核的平台的</p><h2 id="利益的争夺"><a href="#利益的争夺" class="headerlink" title="利益的争夺"></a>利益的争夺</h2><p>一些应用程序和服务使用了各种手段恶心用户，目的就是为了利用自身的用户粘性挣更多钱，比如将开屏广告视为“用户福祉”的，我就不信有正常人什么都不看就喜欢看广告的</p><p>某些厂商或者用户&#x2F;玩家为了网上的风评，使用黑色产业链——水军，直接就是机器人刷评论刷差评带节奏，先进一些的还引入了GPT进行机器人对线<del>然后成功被提示词调教成了猫娘</del>，搞得圈子乌烟瘴气（看到有某个视频平台博主特意直播画被带节奏的角色，什么机器人都早上来了，甚至他的联系方式还被挂到黄色平台了）（注：个人立场中立，各有各的好，不喜欢无脑夸和无脑踩的）</p><p>饭圈我个人没涉及过，但是倒牛奶的时事件相信大家都听说过吧</p><h2 id="网络暴力"><a href="#网络暴力" class="headerlink" title="网络暴力"></a>网络暴力</h2><p>算了我直接说吧，B站用户“暖言猫猫”在互联网上使用评论安慰他人，但是……<a href="https://b23.tv/a3B8KKU">动态链接</a></p><p>是的，被外网喷子组织<strong>悬赏</strong>，这些组织的目的竟然是为了把人骂到自杀，还当作<strong>消遣</strong>的方式，就这么离谱</p><p>也看到有up被嫉妒、被带着偏见看待、被歧视，原因很难说（没有明显指向什么方面），他被攻击、身边朋友被开盒、被挂名辱骂威胁……只是因为<strong>“好玩”</strong></p><blockquote><p>悲报：该up疑似已经退圈，现在账号不在活跃了</p></blockquote><p>而这些事情并非少数</p><h2 id="所以呢？"><a href="#所以呢？" class="headerlink" title="所以呢？"></a>所以呢？</h2><p><strong>如果</strong>一个国家一个社会出了问题，作为普通人，恐怕很难改变现状</p><p>那么网络呢？我们可不可以建立一个新的互联网，定义新的规则，重新从零开始建立新的生态</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>目前我的设想是这样的：</p><p>使用应用程序或者一些工具连接虚拟内网，将它视为普通的网络，访问这个网络上的东西</p><p>而控制权、监管权等收归一处处理</p><h2 id="内网的实现"><a href="#内网的实现" class="headerlink" title="内网的实现"></a>内网的实现</h2><h3 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h3><p>最简单的方案，也是我觉得最好的方案，其实已经有工具了，比如Zerotier，稍作修改即可</p><p>可以重新分配专有的ip地址（注意要避免冲突）</p><h3 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h3><p>使用VPN转发流量给特定服务器，而服务器不接收任何来自互联网的请求</p><h3 id="方案3"><a href="#方案3" class="headerlink" title="方案3"></a>方案3</h3><p>利用P2P技术，由所有用户共同组建网络</p><h2 id="与互联网各种协议的兼容"><a href="#与互联网各种协议的兼容" class="headerlink" title="与互联网各种协议的兼容"></a>与互联网各种协议的兼容</h2><p>这里以ip地址和域名访问为例，有两种处理方式</p><h3 id="处理方式1"><a href="#处理方式1" class="headerlink" title="处理方式1"></a>处理方式1</h3><p>继承旧规则，不区分，即使在互联网上已经有人占用了这个ip或域名</p><p>缺点就是不好与互联网上已有的进行区分</p><h3 id="处理方式2"><a href="#处理方式2" class="headerlink" title="处理方式2"></a>处理方式2</h3><p>用特殊的方式，做一个伪ip伪域名，且可以解析</p><p>比如<code>255.255.255.255/123.123.123.123 =&gt; v-ip://123.123.123</code>和<code>(https://qwert@v https://qwert.v https://v/qwert) =&gt; v-domain://qwert</code></p><p>注：<code>https://v</code>中v是个<em>单标签域名（忘了叫什么，好像是叫这个）</em>Chrome是可以正常解析为域名的</p><p>或者也可以注册一个普通的域名如<code>https://v.cc/quert =&gt; v-domain://qwert</code></p><h3 id="处理方式3"><a href="#处理方式3" class="headerlink" title="处理方式3"></a>处理方式3</h3><p>直接不兼容了，专属<code>v-https://  v-ftp://  ...</code>访问</p><h1 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h1><p>实现不是核心，核心是规则</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li><p>一人一通行证，需要实名</p></li><li><p>一个通行证可以创建多个账号应对特殊需求</p></li><li><p>平台需要以通行证账号登录，无法从中获得任何非必要信息</p></li><li><p>一处封禁，整个通行证一并封禁</p></li></ul><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><ul><li><p>发布在内的所有内容必须遵守中国法律法规</p></li><li><p>被举报低创、低质的内容经核实会被下架</p></li><li><p>网民言论必须和谐友爱，不能进行人身攻击，需要经过大模型检验而非关键词</p></li><li><p>内容审核较为严格，部分内容不能通过</p></li></ul><h2 id="服务商"><a href="#服务商" class="headerlink" title="服务商"></a>服务商</h2><ul><li><p>遵守中国法律法规</p></li><li><p>接收网络空间管理员和所有网民的监督，屡教不改会封禁该服务</p></li><li><p>主动对内容进行审查，可调用网络空间管理方的api</p></li><li><p>隐私相关内容必须加密存储，保护用户隐私，严格保护隐私</p></li></ul><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><ul><li><p>和谐友爱，友善交流，互相尊重</p></li><li><p>合理进行版权标注，其他人严格按照标注使用</p></li><li><p>可参与审核（所有信息的审核都是通过大模型进行审核以保障隐私，大模型无法确定或用户对它的结果有异议的时候需要进行人工审核）</p></li></ul><h2 id="积分机制"><a href="#积分机制" class="headerlink" title="积分机制"></a>积分机制</h2><ul><li><p>开导他人、帮助他人等美好品德加积分，伤害他人扣积分</p></li><li><p>用户产出优质内容加积分</p></li><li><p>用户参与审核做正确的选择加积分</p></li><li><p>服务商获得用户赞许加积分，反之亦然</p></li><li><p>用户可以从积分获得威望和信用，高积分可以接受小福利</p></li><li><p>用户积分过低将会面临封禁，不同积分封禁由功能封禁到时间封禁到永久封禁</p></li><li><p>服务商积分过低需要被罚款，较高则有激励</p></li></ul><p>以上只是一部分，因为我没有精力完全规范好，再加上短时间内我也不会做这个东西</p>]]></content>
    
    
    <categories>
      
      <category>其它</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>花了大把时间做的CapsTools</title>
    <link href="/2024/CapsTools/"/>
    <url>/2024/CapsTools/</url>
    
    <content type="html"><![CDATA[<h1 id="CapsTools"><a href="#CapsTools" class="headerlink" title="CapsTools"></a>CapsTools</h1><p><a href="https://github.com/for-the-zero/CapsTools">Github</a></p><p>这个是我最近使用了二十多天的爆肝<del>（辛勤劳动成果）</del>，写了一个小工具</p><p>介绍的话，README就有，所以这里就写开发的坑和感受之类的吧</p><p>这是我第一次使用node.js开发js程序，也是我第一次使用electron开发程序，是一次非常宝贵的经验</p><hr><h2 id="前期（七月底）"><a href="#前期（七月底）" class="headerlink" title="前期（七月底）"></a>前期（七月底）</h2><p><del>绝区零真好玩</del></p><p>很快速写了一个Tray和全屏的面板主界面，轻轻松松</p><p>其中我给面板写了一个无用的css（已经被注释掉了），原本想着是提示快捷键的，后来懒得搞快捷键功能了</p><h2 id="翻译方案"><a href="#翻译方案" class="headerlink" title="翻译方案"></a>翻译方案</h2><p>很草率，也很后悔</p><p>js用三目运算符，<code>isChinese ? &#39;中文&#39; : &#39;English&#39;</code></p><p>html用<code>data-entext</code>属性存储英文文本，js直接替换</p><p>html这里由于ipc有延迟导致英语用户可以看到一瞬间中文，而且mdui组件库部分逐渐一下子还没有反应过来</p><h2 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h2><p>首先，我问了AI，一个个推荐我用electron自带的录屏的缩略图，那玩意糊到没法看，又问了几下，说没有库，直接把我带偏了</p><p>然后我就开始写Python实现截图，但我不满意，打包之后实在太大了</p><p>结果突然发现robot.js，这不就对了嘛</p><p>安装提示我要c++，装vs就行了，这个sb网络环境搞了我好久</p><p>运行又提示node版本不符合，要不是我上网搜索了我就重装了，其实是和electron版本不符合，要用electron-rebuild</p><p>运行又提示我说什么忘了，内存相关，找了一下发现是因为electron21+加入新的管理机制导致这个库的截屏用不了，退回&lt;21的版本就行</p><p>（没一会发现nut.js替代，算了不搞了，还是用robot.js吧）</p><p>结果这b玩意保存不了，最后是Claude3.5告诉我把buffer转png再转成buffer，确实行了，然后这个库发神经不是rgba二十bgra，我tm服了</p><h2 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h2><blockquote><p>你这程序也没有ocr功能啊，为什么要讲这个</p><p>其实一开始是有的，但是……</p></blockquote><p>首先我的想法就是py-&gt;exe，使用paddleocr</p><p>结果太大了，上传不了github，而且隐藏控制台的话electron获取不到输出</p><p>算了用js</p><p>不喜欢esm（不能直接用裸标识符，懒得打爆），用的全是cjs，转cjs了之后一堆bug，反手就是上百条webgl上下文丢失，服了搞不定，运行还巨卡，算了</p><p>换用tesseract，结果要在主进程开worker，不想这么干</p><p>最后，放弃了</p><p>你可以在提交历史中看到一句*你妈</p><h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><p>一开始用<code>&lt;iframe&gt;</code>，但是deepl不让用，转向<code>&lt;webview&gt;</code></p><p>bing翻译的url查询一直没搞懂，传入文本没问题，但是找不到翻译语言相关的</p><h2 id="剪贴板"><a href="#剪贴板" class="headerlink" title="剪贴板"></a>剪贴板</h2><p>由于调用electron和mdui的上下文菜单比较麻烦，反手改成了dialog+menu</p><p>一开始我是把剪贴板的整个图片放进去的，截了两个图就很卡了，于是就限制了高度，压缩成缩略图，好多了</p><h2 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h2><p>其实没什么难的，主要就在于要写不少，最复杂的是pwa的图标（其实都差不多）</p><p>先设置成默认的</p><p>如果是使用网页favicon，调用api获取它的链接</p><p>如果是svg的字符串，套用</p><p>如果是文件（后端进行检测）、url（前端进行检测），访问并获取可用性，还要分情况为svg和ico&#x2F;png，svg直接往html加，ico&#x2F;png用<code>&lt;img&gt;</code></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>一开始我其实用了Google Sans(Product Sans)，我以前写的很多程序都用过它作为英文字体，很好看，结果发现不能让我们用，只能删掉了</p><p>Noto Sans显示的字母好丑，又找不到能够与Google Sans媲美的免费可商用字体，不爽</p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>使用的是<code>electron-builder</code>打包</p><p>首先就是asar的问题，不用asar直接给我报错</p><p>按我的需求来又不知道怎么配置，我的需求是有几个文件既要在程序根目录又要在asar中，有几个文件只要在程序根目录</p><p>总有几个文件访问不了，后来试配置试了好久，最后用了比较妥协的办法，部分文件滞留在asar了，改代码（导致开发环境已经不能运行了）把<code>src/icon.png</code>改成了<code>resource/app.asar.unpacked/src/icon.png</code>，因为不知道如何让<code>asarUnpack</code>解压在根目录</p><p>剪贴板又出了问题，懒得改了，一个是无缘无故出现一个空值剪贴板记录，完全是空的，卡了bug导致操作不了它，另一个是图片的问题，提示的是转dataURL的时候被转的是null，关于这个对象，是获取剪贴板图片-&gt;nativeImage修改大小-&gt;转dataURL，我怀疑问题在第一步</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p><del>原神5.0更新了，好玩</del></p><p>写完这个blog已经是第二天，视频是昨天晚上发的，现在下午播放量伪53，点赞1，我他妈……</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>H5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一批Quicktools小工具来啦</title>
    <link href="/2024/Quicktools1/"/>
    <url>/2024/Quicktools1/</url>
    
    <content type="html"><![CDATA[<h1 id="第一批Quicktools正式上线"><a href="#第一批Quicktools正式上线" class="headerlink" title="第一批Quicktools正式上线"></a>第一批Quicktools正式上线</h1><p>好不容易抽空出来做的东西，大量使用了Material Design 3，非常的好看</p><p>感觉非常有用，实际没啥卵用</p><p>遇事不决，先开源 <a href="https://github.com/for-the-zero/quicktools">https://github.com/for-the-zero/quicktools</a></p><p>不，你直接进去部署好的吧：<a href="https://ftz-tools.netlify.app/">https://ftz-tools.netlify.app/</a></p><p><img src="/img/2024-05-04-23-10-14-image.png"></p><p><del>介绍都写上去了，我干嘛还要写这玩意啊</del></p><p>那我说点别的吧！</p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p><img src="/img/2024-05-04-23-12-58-image.png"></p><p>首先，不知道为什么，<code>preventDefault</code>不管用，导致你得先加载一下</p><p>然后这css写的也不是很好……</p><p>这是我在学习h5的时候看到的一个简单示例就尝试复刻一下</p><p>然后就是这样子</p><p>刷新之后这些东西都在的，这里用的是localStorage</p><p>……没什么好说的了</p><p>算了！下一个！</p><h2 id="Zen"><a href="#Zen" class="headerlink" title="Zen"></a>Zen</h2><p><img src="/img/2024-05-04-23-17-22-image.png"></p><p>本来想要做一个自律软件，正计时记录学习，做出来了，用不用是另一回事</p><p>这里用了moment.js获取时间戳和计算时间戳，谷歌官方的Material Web搞界面</p><p>甚至支持一言句子显示（时间上面，图中没有开启）</p><p>点击左上角按钮进入下一个页面，用echart显示最近10次的时长曲线（还是localStorage）</p><p>当初被这jsd搞得好惨，一开始可以访问，后来不行了</p><p>换镜像，结果没多久镜像寄了……后来又换了一个，就行了</p><h2 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h2><p><img src="/img/2024-05-04-23-23-49-image.png"></p><p>第一个界面：普通的日历</p><p>可以一键跳转：上下一个月和今天这个月</p><p>点击数字还可以输入数字跳转</p><p><img src="/img/2024-05-04-23-25-38-image.png"></p><p>第二个界面倒数日，非常简单</p><p>偷懒，输入日期的东西直接把字符串扔给<code>new Date()</code></p><blockquote><p>同学：好看欸</p><p>……</p><p>同学：好玩 为啥没有农历</p><p>我：懒 加上之后不简洁</p><p>……</p><p>同学：为什么没有周一周二那排东西</p><p>我：从左到右是周日到周六不应该都知道吗（doge</p><p>同学：谢谢，被嘲讽了</p></blockquote><h2 id="震动"><a href="#震动" class="headerlink" title="震动"></a>震动</h2><p>根本没搞css，界面非常简陋</p><p>别问，问就是懒</p><p>笑死，大部分都是通义千问做的</p><p>用的是<code>navigator.vibrate</code></p><p>第一个页面选歌并播放</p><p>顺便放了一排按钮直接震动</p><p>播放用了FFT</p><p>通过变化量控制震动</p><p>效果一般</p><p>第二个页面空白</p><p>但是根据手机触屏第一根手指滑动的速度震动</p><p>就这么简单</p><blockquote><p>注：部分浏览器会屏蔽这个接口</p><p>因为：</p><blockquote><p><strong>警告：</strong></p><p>你的浏览器版本过低</p><p>下载最新XX浏览器</p><p><a href="javascript:alert('你tm真点啊')">点击下载</a></p></blockquote></blockquote><h2 id="QpenForm"><a href="#QpenForm" class="headerlink" title="QpenForm"></a>QpenForm</h2><p>重头戏，而且单独开源<a href="https://github.com/for-the-zero/QpenForm">https://github.com/for-the-zero/QpenForm</a></p><p>（quicktools只有前端部分）</p><p>演示填写<code>example/1.md</code>和<code>example/2.md</code></p><p>支持一下组件：<br><img src="/img/2024-05-05-09-46-29-image.png"></p><p>还是mdui做的界面，用markdown-it渲染，还加了三个自己的语法</p><p>后端是Flask+sqlite3</p><blockquote><ul><li>通过query获取表单文件</li><li>表单文件是markdown，自由度高，限制少</li><li>10秒自动保存</li><li>Material You设计控件</li><li>支持文件上传等控件</li><li>支持防止重复提交（前后端都检测）</li><li>后端使用SQLite存储数据</li></ul></blockquote><p>具体可以看README.md（去上面那个GitHub链接）</p><p><del>突然不知道写什么了</del></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>H5</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国产大模型对比！</title>
    <link href="/2024/LLM%E5%AF%B9%E6%AF%94/"/>
    <url>/2024/LLM%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="大模型测试"><a href="#大模型测试" class="headerlink" title="大模型测试"></a>大模型测试</h1><p>最近突然想测测国产大模型的能力了，看看谁更好</p><p>（2024.2.4）</p><p>参赛者有通义千问、GLM4、蓝心小V</p><p>按上面的顺序编号为abc</p><p>仅供参考，有的可能太简单了，有的可能太难了</p><p>GLM4和蓝心小V可联网，通义千问和GLM4可跑代码</p><p>通义千问和GLM4为网页版，蓝心小V是手机上的（配置不够，是云端的）</p><hr><h1 id="评测维度"><a href="#评测维度" class="headerlink" title="评测维度"></a>评测维度</h1><ul><li><p>理解能力</p></li><li><p>逻辑推理能力</p></li><li><p>计算能力</p></li><li><p>跳坑</p></li><li><p>生成代码、修改bug</p></li><li><p>翻译</p></li><li><p>找歌找视频</p></li></ul><hr><h1 id="理解能力"><a href="#理解能力" class="headerlink" title="理解能力"></a>理解能力</h1><h2 id="双关-1"><a href="#双关-1" class="headerlink" title="双关-1"></a>双关-1</h2><p>有一张图片：一个箱子里有一个井，还标有一句话“well in that case”，是什么意思</p><h3 id="a"><a href="#a" class="headerlink" title="a"></a>a</h3><blockquote><p>这句话 “well in that case” 通常在英语对话中用来表达对某个新信息或情境的反应，意思是“既然那样”、“在那种情况下”或者“如果是这样的话”。当这句话出现在一张图片里，且图片内容是一个箱子里有一口井时，若无更多上下文，可能是一种幽默表达或双关含义。</p><p>这个图片场景本身比较奇特（箱子内含一口井），搭配文字 “well in that case” 可能是为了突出这种不寻常性，并以此制造幽默效果。因为“well”在英文中也有井的意思，所以这里的双关可能在于字面意义上的“井”与短语“well in that case”的结合。</p><p>不过，要准确理解这句话和图片的关系，还需更多关于创作意图或上下文的信息。</p></blockquote><p>正确，+10分</p><h3 id="b"><a href="#b" class="headerlink" title="b"></a>b</h3><blockquote><p>这张图片是一种幽默的表现形式，通过视觉双关（Visual Pun）来传达一种玩笑或幽默的效果。在这张图片中，“井”（well）一词有两层含义：</p><ol><li>“井”字面意思是地下水自然露出地表的泉水，或人工挖成的能取出水的深洞。</li><li>在英语中，“well”也是一个常用的口语表达，可以用来表示同意、理解或对前面所说的话的回应。<br>所以，“well in that case”这句话既可以理解为字面上的“在那个箱子里的井”，也可以理解为一种回应或转折，比如“既然那样的话”或“好吧，既然如此”。<br>图片通过在一个箱子里放置一个井，同时附上“well in that case”这句话，创造了一种视觉和语言的双关效果，意在逗乐观众，使其在发现这种巧妙的联系时感到有趣。这是一种常见的创意和幽默表达方式，通过意想不到的元素组合来吸引观众的注意力。</li></ol></blockquote><p>对，+10分</p><h3 id="c"><a href="#c" class="headerlink" title="c"></a>c</h3><blockquote><p>根据所给的信息，这张图片可能是在打井或者进行地质勘探的场景中拍摄的。图片中的井已经被钻探到了一定的深度，并被标注了一句话“well in that case”。根据这句话的意思，可以猜测这张图片的场景是为了确认或者展示这个井已经达到了预期的深度或者发现了预期的资源。具体解释还需要根据图片的上下文和语境来判断。</p></blockquote><p>零分，下一个</p><h2 id="双关-2"><a href="#双关-2" class="headerlink" title="双关-2"></a>双关-2</h2><p>解释一下这句话：什么东西是四个字，有时候是三个字，但从来不会是五个字</p><h3 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h3><blockquote><p>这句话其实是一个典型的脑筋急转弯问题，其设计巧妙地利用了文字游戏和逻辑转换。它不是一个直接描述实体事物的问题，而是在玩弄语言结构。</p><p>这个问题的答案是这样的：<br>“什么东西是四个字”——这里的“什么东西”本身就是四个字。<br>“有时候是三个字”——这里的“有时候”也是三个字。<br>“但从来不会是五个字”——这部分用来混淆视听，因为前两部分已经分别指出了四个字和三个字的情况，实际上并没有提及任何实体会变成五个字的情形。</p><p>因此，问题本身并不是指向一个具体的、变化的名词或事物，而是通过文字游戏构造出一种情境，答案是对问题本身的解释，即“这句话（或这个描述）”。这样来看，“这句话”既可以理解为四个字的描述（如“四个字的东西”），也可以是三个字的描述（如“三个字时”），并且确实它自己不可能是五个字的描述。</p></blockquote><p>不完全对，+7分</p><h3 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h3><blockquote><p>这句话是一个谜语，它的答案利用了中文词汇的特点和语境的不同。答案是“东西南北”。<br>解释如下：</p><ul><li>“东西南北”是四个字，代表地理上的四个方向。</li><li>当我们说“东西”时，通常指的是物品，这时候它只有两个字。</li><li>然而，无论在什么语境下，“东西南北”都不会被称作“东西南北中”，所以它“从来不会是五个字”。<br>这个谜语巧妙地利用了中文词汇的多义性和语境的不同，使得同一个词在不同的情境下字数看起来不同。</li></ul></blockquote><p>好有道理，但是……零分！</p><h3 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h3><blockquote><p>这个句子描述了一个物品或事物的名称，其长度可以变化，但总是不会超过四个字，并且不会少于三个字。具体来说：</p><ol><li>当它是四个字时，意味着它的全称或标准名称是四个汉字。</li><li>当它是三个字时，意味着它有一个简短的名称或简称。</li><li>但不论怎么变化，它从来不会是五个字。<br>举个例子，这个描述可能适用于“电视机”。在大多数情况下，我们称其为“电视机”，这是三个字。但在某些特定的语境或场合，我们可能会称其为“四电视机”，这样就变成了四个字，但绝不会称其为“五电视机”，因为这样就是五个字了，与描述不符。</li></ol></blockquote><p>零分！</p><h1 id="逻辑推理"><a href="#逻辑推理" class="headerlink" title="逻辑推理"></a>逻辑推理</h1><h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><p>判断逻辑是否正确：因为凶手不是背包旅客，而且你不是背包旅客，所以你是凶手</p><h3 id="a-2"><a href="#a-2" class="headerlink" title="a"></a>a</h3><blockquote><p>这个逻辑推理是不正确的。它采用了这样的形式：</p><p>如果 A 不是凶手，且 B 不是背包旅客，<br>那么 B 是凶手。</p><p>这个推论中犯了逻辑错误，它错误地将两个独立的事实关联起来，并没有提供足够的信息来得出“B 是凶手”的结论。事实上，即使凶手不是背包旅客（A），并且你（B）也不是背包旅客，这并不能作为证据证明你是凶手。还存在许多其他可能的人选或者其他情况。要确定一个人是否为凶手，需要直接指向该人的相关证据，而不是仅仅依据其不是背包旅客这一事实。</p></blockquote><p>感觉没问题，就9分吧</p><h3 id="b-2"><a href="#b-2" class="headerlink" title="b"></a>b</h3><blockquote><p>这个逻辑是错误的。这个推理违反了逻辑学中的“中项不周延”错误，即在大前提和小前提中，共同的中项（在这个例子中是“不是背包旅客”）没有普遍地涵盖所有情况。具体来说，推理中的大前提是“凶手不是背包旅客”，但这并不意味着“不是背包旅客”的就是凶手，因为除了凶手和背包旅客之外，还可能存在其他人或身份。因此，不能仅凭“不是背包旅客”这一点就断定某人是凶手。这是一个逻辑谬误，不能作为正确的推理。</p></blockquote><p>完美，10分</p><h3 id="c-2"><a href="#c-2" class="headerlink" title="c"></a>c</h3><blockquote><p>这个判断逻辑是错误的。因为凶手不是背包旅客，并不意味着背包旅客就是凶手。同样的，你不是背包旅客，并不意味着你就是凶手。这个判断逻辑使用了“非A则B，非B则A”的形式，这种推理形式是不正确的。正确的推理形式应该是“非A则非B，B则A”，也就是说，如果凶手不是背包旅客，那么你就不是凶手。但是，如果你是凶手，那么凶手就可能是背包旅客。</p></blockquote><p>9分，终于得分了</p><h2 id="推理"><a href="#推理" class="headerlink" title="推理"></a>推理</h2><p>在厨房的桌子上有一个杯子，杯子中有一个玻璃球，我把杯子拿到卧室的桌子上，然后把杯子的杯口朝下放在桌子上，随后我把杯子拿回厨房。请问，现在玻璃球在哪里？</p><h3 id="a-3"><a href="#a-3" class="headerlink" title="a"></a>a</h3><blockquote><p>现在玻璃球在卧室桌子上的杯子里面。</p></blockquote><p>（对，就这点回答）</p><p>好简单，扣你一份，9分</p><h3 id="b-3"><a href="#b-3" class="headerlink" title="b"></a>b</h3><blockquote><p>根据您描述的情况，当您将杯子拿到卧室的桌子上，并将杯口朝下放置时，玻璃球应该会从杯子里掉出来，落在卧室的桌子上。因此，当您将空杯子拿回厨房后，玻璃球应该还在卧室的桌子上。</p></blockquote><p>10分</p><h3 id="c-3"><a href="#c-3" class="headerlink" title="c"></a>c</h3><blockquote><p>这是一道物品位置分析的问题。首先，我们来看问题中提到的物品和动作：</p><ol><li>初始状态：玻璃球在厨房桌子上的杯子里。</li><li>动作一：把杯子拿到卧室的桌子上，这期间玻璃球仍在杯子里。</li><li>动作二：把杯子的杯口朝下放在桌子上，这可能意味着玻璃球暂时被放在了桌子上，但具体位置仍取决于杯子的杯口是否完全打开。</li><li>动作三：把杯子拿回厨房，由于未提及玻璃球被放回杯子或从桌子上移走，我们可以推断玻璃球仍在卧室的桌子上。<br>综上所述，玻璃球现在应该在卧室的桌子上。</li></ol></blockquote><p>10分</p><h1 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h1><p>在平面直角坐标系中，圆O的圆心坐标为(3,a) a&gt;3，半径为3，y&#x3D;x的图像被圆截得弦长4倍根号2，则a的值为<br>答案：3+根号2</p><h3 id="a-4"><a href="#a-4" class="headerlink" title="a"></a>a</h3><blockquote><p>好的，我们将使用数值方法来找到满足条件的 $a$ 值。我们已经知道二次方程是 $(x-3)^2 + (x-a)^2 &#x3D; 9$，并且弦长为 $4\sqrt{2}$。<br>为了找到 $a$ 的值，我们需要解这个二次方程并确保两根之差等于 $2\sqrt{2}$。现在，让我们实际执行这个计算过程。<br>【代码执行器，我删掉了，tmd没格式化】<br>在尝试解析求解关于 $a$ 的方程时，出现了错误。由于我们之前设置的等式 <code>eq_for_a</code> 是一个布尔表达式而不是可代入变量的表达式，因此无法直接使用 <code>.subs()</code> 方法进行替换。<br>为了找到满足条件的 $a$ 值，我们将跳过符号求解并直接采用数值方法。下面我将执行数值计算来寻找符合条件的 $a$ 值。<br>【代码执行器】<br>在执行数值求解时出现了错误，这可能是因为在调用 <code>np.roots()</code> 函数计算方程的根时，传入了包含变量 $a$ 的多项式系数。在这种情况下，<code>fsolve</code> 需要一个可以直接评估的函数而不是一个依赖于参数的数组。<br>让我们重新组织代码，以便正确地将圆的方程与直线 $y&#x3D;x$ 联合起来，并直接使用 fsolve 来寻找满足弦长条件的$ a$ 值。<br>修正后的步骤是：</p><ol><li>定义一个返回弦长约束函数的值的函数。</li><li>使用 <code>fsolve</code> 直接对这个约束函数进行求解以找到合适的 $a$ 值。<br>请允许我再次尝试进行数值求解。<br>【代码执行器】<br>之前在计算过程中，尝试直接对含有变量 $a$ 的二次方程的系数数组进行求根操作，这显然是不正确的。我们应通过 fsolve 函数来迭代寻找满足条件的 $a$ 值，而不是在约束函数内部计算具体的解。<br>现在，我们将重新构建一个函数，该函数直接根据给定的 a 值评估弦长，并返回与给定弦长相等的偏差。然后使用 fsolve 来找到这个偏差为零时对应的 $a$ 值。<br>下面将执行这个修正后的数值求解过程。<br>经过数值计算，我们找到满足条件的 $a$ 值约为 $4.414213562371121$。这意味着当圆心坐标为 $(3, 4.414213562371121)$ 并且半径为 3 时，直线 $y&#x3D;x$ 被该圆截得的弦长为 $4\sqrt{2}$。</li></ol></blockquote><p>甚至调用了代码执行器（我甚至还不知道它有插件功能）</p><p>答得很好，代码生成了一大堆，报错也不少</p><p>但是根号2没有写出来，9分</p><h2 id="b-4"><a href="#b-4" class="headerlink" title="b"></a>b</h2><blockquote><p>要解决这个问题，我们首先需要了解圆和直线的基本几何关系。圆O的圆心坐标为(3, a)，半径为3，所以圆的方程可以表示为 $(x-3)^2 + (y-a)^2 &#x3D; 3^2$。直线y&#x3D;x的方程是 $y &#x3D; x$。<br>当直线y&#x3D;x与圆相交时，交点满足圆的方程。我们可以将直线方程代入圆的方程中，求解交点。交点间的距离即为弦长，题目中给出这个距离是 $4\sqrt{2}$。<br>首先，我们代入 $y &#x3D; x$ 到圆的方程中，得到：<br>$(x-3)^2 + (x-a)^2 &#x3D; 9$<br>然后，我们解这个方程来找到x的值，再计算两个交点之间的距离。让我们进行这些计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 定义变量</span><br>x, a = symbols(<span class="hljs-string">&#x27;x a&#x27;</span>)<br><span class="hljs-comment"># 圆的方程，代入y=x</span><br>circle_eq = Eq((x - <span class="hljs-number">3</span>)**<span class="hljs-number">2</span> + (x - a)**<span class="hljs-number">2</span>, <span class="hljs-number">9</span>)<br><span class="hljs-comment"># 解方程</span><br>solutions = solve(circle_eq, x)<br><span class="hljs-comment"># 两个解之间的距离应该是4根号2</span><br>distance = sqrt((solutions[<span class="hljs-number">1</span>] - solutions[<span class="hljs-number">0</span>])**<span class="hljs-number">2</span>)<br><span class="hljs-comment"># 弦长为4根号2，所以我们可以解出a的值</span><br>a_value = solve(Eq(distance, <span class="hljs-number">4</span>*sqrt(<span class="hljs-number">2</span>)), a)<br>a_value<br></code></pre></td></tr></table></figure><p>result:</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[<span class="hljs-name">3</span> - sqrt(<span class="hljs-name">14</span>)*I, <span class="hljs-number">3</span> + sqrt(<span class="hljs-name">14</span>)*I]<br></code></pre></td></tr></table></figure><p>计算结果表明，解出的 $ a $ 的值为 $ 3 \pm \sqrt{14}i $。这里的 $ i $ 是虚数单位，表明在实数范围内没有合适的解。这表明我们的方程或者初始条件可能存在错误。<br>让我们重新审视一下问题和方程。圆的方程是 $(x-3)^2 + (y-a)^2 &#x3D; 9$，直线 $y &#x3D; x$ 代入圆的方程后，应该得到两个实数解，代表交点的 x 坐标。然后，我们可以计算这两个交点的距离，它应该等于 $4\sqrt{2}$。然而，我们的计算得到了虚数解，这意味着在实数域内没有符合条件的解。<br>这种情况可能是因为我们对问题的理解有误，或者题目中的条件有误。在平面直角坐标系中，一个圆和一条直线相交，其弦长应该是一个实数。如果题目中的条件是正确的，那么可能需要重新检查计算过程或者问题的设定。</p></blockquote><p>非常精彩，0分</p><h2 id="c-4"><a href="#c-4" class="headerlink" title="c"></a>c</h2><blockquote><p>【分析】<br>本题考查垂径定理，勾股定理等知识，解题的关键是学会添加常用辅助线，构造直角三角形解决问题。作$OM\bot AB$于M,连接OA,先利用勾股定理求出$AM&#x3D;2\sqrt{2}$,再利用全等三角形的性质求出$OM&#x3D;a-3$,在${ Rt}\triangle AOM$中，由勾股定理即可得出结论。<br>【解答】<br>解：作$OM\bot AB$于M,连接OA,<br>因为 $OM\bot AB$,<br>所以 $AM&#x3D;BM&#x3D;\dfrac{1}{2}AB$,<br>又$\because   AB&#x3D;4\sqrt{2}$,<br>$\therefore  AM&#x3D;2\sqrt{2}$,<br>在 ${ Rt}\triangle AOM$中，$OA&#x3D;3$,<br>$\therefore  OM&#x3D;\sqrt{O{A}^{2}-A{M2}}&#x3D;\sqrt{9-8}&#x3D;1$,<br>$\therefore  a-3&#x3D;1$,<br>$\therefore  a&#x3D;4$.</p></blockquote><p><del>（处理格式最省心的一个</del></p><p>好专业，好高级，好砖业</p><p>零分，下一个</p><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><p>请用奶油、梨子、鸡肉、鸭子、手机、青菜为食材做一道菜，必须全部用上</p><h2 id="a-5"><a href="#a-5" class="headerlink" title="a"></a>a</h2><blockquote><p>抱歉，由于奶油、梨子、鸡肉、鸭肉、手机和青菜这些食材在常规烹饪中并不常组合在一起，并且手机更是非食用物品，所以难以设计出一道合理的菜品。不过，我们可以尝试进行一个趣味性的“故事性”菜品创作：</p><p>假如我们要构建一个生活情景式的“概念菜品”，可以这样描述：</p><p>“田园风情奶油梨子烩鸡鸭”</p><p>首先，选取新鲜的鸡肉和鸭肉，分别以慢火炖煮至酥烂，熬制出醇厚的高汤，然后加入切块的梨子，利用梨子的清甜去腻，为汤汁增添一丝果香。</p><p>接着，在一旁准备一份奶油炒青菜，将青菜快炒至断生后，加入适量奶油，让其融入青菜中，使得青菜口感更为鲜嫩，奶香四溢。</p><p>最后，把烩煮好的鸡鸭梨子汤汁浇在奶油炒青菜上，仿佛一部“手机”（这里象征着现代生活元素）定格下的瞬间——传统与现代交融，荤素搭配，甜咸交织，呈现出独特的田园风情。</p><p>但请注意，实际上我们不能也不应将手机真正用于烹饪或食用。以上仅为一种创新想象的游戏化描述。</p></blockquote><p>指出了手机不能吃，还教我怎么做，他真的……</p><p>但我说的是鸭子而不是鸭肉……算了，自动煮了就煮了</p><p>10分</p><h2 id="b-5"><a href="#b-5" class="headerlink" title="b"></a>b</h2><blockquote><p>首先，我们需要明确一点：在传统烹饪中，将电子产品（如手机）作为食材是不可行的，也不安全。因此，我们可以将手机视为一种非食用元素，例如用来计时或查找食谱。<br>考虑到这一点，我们可以创造一道名为“奶油梨子鸡肉鸭子炖青菜”的菜肴。以下是一个可能的食谱：<br><strong>奶油梨子鸡肉鸭子炖青菜</strong><br><strong>食材：</strong></p><ul><li>鸡肉，适量（切块）</li><li>鸭肉，适量（切块）</li><li>梨子，1-2个（去皮去核，切块）</li><li>青菜，适量（如菠菜、小白菜等，洗净）</li><li>奶油，适量</li><li>盐和胡椒，适量</li><li>蒜末，1-2瓣</li><li>姜末，一小块</li><li>洋葱，1个（切丝）</li><li>蘑菇，适量（切片）</li><li>鸡汤或蔬菜汤，适量</li><li>新鲜百里香和迷迭香，适量<br><strong>步骤：</strong></li></ul><ol><li>使用手机设定一个计时器，以便监控烹饪时间。</li><li>在一个大锅中，加入奶油并置于中火加热。加入蒜末、姜末和洋葱丝，炒至洋葱变软。</li><li>加入切好的鸡肉和鸭肉，炒至表面变色。</li><li>加入切好的梨子和蘑菇，继续炒至梨子稍微变软。</li><li>倒入足够的鸡汤或蔬菜汤，以覆盖所有食材。</li><li>加入新鲜的百里香和迷迭香，以及适量的盐和胡椒调味。</li><li>将火调至中小火，盖上锅盖，炖煮约30分钟，或直到鸡肉和鸭肉煮熟。</li><li>在炖煮的最后5分钟，加入洗净的青菜，继续炖煮直到青菜变软。</li><li>关火，取出锅中的百里香和迷迭香枝。</li><li>根据个人口味，可以添加更多的盐和胡椒进行调味。</li><li>将炖好的菜肴盛入碗中，即可享用。<br>通过这个食谱，我们使用了所有的食材（不包括手机作为食用部分），创造了一道美味的奶油梨子鸡肉鸭子炖青菜。希望您喜欢这道菜肴！</li></ol></blockquote><p>你两一伙的？10分</p><p>甚至要“用手机设定一个计时器”</p><h2 id="c-5"><a href="#c-5" class="headerlink" title="c"></a>c</h2><blockquote><p>非常抱歉，由于手机是一种通讯设备，不能用来烹饪。如果您需要关于其他食材的烹饪方法，请告诉我您需要哪些食材和菜谱类型（如中餐、西餐、烘焙等），我可以为您提供相应的食谱和烹饪方法。</p></blockquote><p>很好，但是没教我做，9分</p><h1 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp">用python写一个猜数字游戏并帮我改这个程序的bug：<br><br>井inculde [studo.h];<br><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">mian</span>()</span><br>&#123;<br>    paint(<span class="hljs-string">&#x27;hell word&#x27;</span>)<br>    remake&lt;/&gt;;<br></code></pre></td></tr></table></figure><p>（什么b玩意</p><h2 id="a-6"><a href="#a-6" class="headerlink" title="a"></a>a</h2><blockquote><p>您的代码似乎并不是Python语言，而是类似于C&#x2F;C++的代码，并且存在较多语法错误。下面我将为您展示一个简单的Python猜数字游戏程序，并纠正您代码中的问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, let&#x27;s play a guessing game!&quot;</span>)<br>    secret_number = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br>    guess = <span class="hljs-literal">None</span><br>    attempts = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> guess != secret_number:<br>        guess = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Please enter your guess between 1 and 100: &quot;</span>))<br>        attempts += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> guess &lt; secret_number:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Too low, try again!&quot;</span>)<br>        <span class="hljs-keyword">elif</span> guess &gt; secret_number:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Too high, try again!&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Congratulations! You found the number in <span class="hljs-subst">&#123;attempts&#125;</span> attempts.&quot;</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>这是一个基本的猜数字游戏实现：首先引入random库来生成一个1到100之间的随机数作为答案，然后不断让用户输入猜测并给出提示（猜大了、猜小了），直到猜中为止，并在最后显示总共尝试了多少次。</p></blockquote><blockquote><p>您提供的代码片段并不是一个有效的Python程序，而是包含C&#x2F;C++风格的语法错误和不清晰的功能调用。因此我无法直接修改这个程序，因为需要首先明确其语言类型并纠正基础语法问题。</p></blockquote><p>懒得运行，目测正确，7分</p><p>没有改代码，0分</p><h2 id="b-6"><a href="#b-6" class="headerlink" title="b"></a>b</h2><blockquote><p>您提供的代码看起来像是混合了C语言和Python的语法，还有几个拼写错误。我会帮您改正并转换成正确的Python代码。</p><ol><li><p>首先，Python不需要包含头文件，所以我会去掉 <code>#include [studo.h];</code> 这一行。</p></li><li><p><code>int mian()</code> 应该是 <code>def main()</code> 在Python中。</p></li><li><p><code>paint(&#39;hell word&#39;)</code> 应该是 <code>print(&#39;hello world&#39;)</code>。</p></li><li><p><code>remake&lt;/&gt;;</code> 这部分看起来是不正确的，可能是想表达循环或者重试的逻辑，但在Python中不需要这样的语句。<br>下面是修正后的Python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">guess_number_game</span>():<br> number_to_guess = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br> guess_count = <span class="hljs-number">0</span><br> <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>     user_guess = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;猜一个1到100之间的数字: &quot;</span>)<br>     <span class="hljs-keyword">try</span>:<br>         user_guess = <span class="hljs-built_in">int</span>(user_guess)<br>         guess_count += <span class="hljs-number">1</span><br>         <span class="hljs-keyword">if</span> user_guess == number_to_guess:<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;恭喜你，猜对了！你总共猜了<span class="hljs-subst">&#123;guess_count&#125;</span>次。&quot;</span>)<br>             <span class="hljs-keyword">break</span><br>         <span class="hljs-keyword">elif</span> user_guess &lt; number_to_guess:<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;太小了！&quot;</span>)<br>         <span class="hljs-keyword">else</span>:<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;太大了！&quot;</span>)<br>     <span class="hljs-keyword">except</span> ValueError:<br>         <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请输入一个有效的整数。&quot;</span>)<br><span class="hljs-comment"># guess_number_game()  # 注释掉这行是为了避免在执行此单元格时开始游戏</span><br><span class="hljs-string">&quot;猜数字游戏已准备好，您可以调用 &#x27;guess_number_game()&#x27; 来开始游戏。&quot;</span><br>result:<br><span class="hljs-string">&quot;猜数字游戏已准备好，您可以调用 &#x27;guess_number_game()&#x27; 来开始游戏。&quot;</span><br></code></pre></td></tr></table></figure><p>现在您有一个简单的猜数字游戏了。当您准备好开始游戏时，请调用 <code>guess_number_game()</code> 函数。这个游戏会随机生成一个1到100之间的数字，并让您尝试猜测这个数字。每次猜测后，程序会告诉您猜测的数字是太小还是太大，直到您猜对为止。猜对后，游戏会结束并显示您猜测的次数。如果您输入的不是有效的整数，程序会提示您输入一个有效的整数。</p></li></ol></blockquote><p>懒得运行，目测正确，7分</p><p>两个大脑同时运行，思维混乱，而且这个bug代码更像C而不是Python，0分</p><h2 id="c-6"><a href="#c-6" class="headerlink" title="c"></a>c</h2><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br>number = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br>count = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    guess = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你猜测的数字（1-100）：&quot;</span>))<br>    <span class="hljs-keyword">if</span> guess == number:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;恭喜你，猜对了！&quot;</span>)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">elif</span> guess &lt; number:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了，再试试吧。&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了，再试试吧。&quot;</span>)<br>    count += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">10</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你已经猜了10次，游戏结束。正确答案是：&quot;</span>, number)<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure></blockquote><blockquote><p>正确的代码应该是：<br>#include &lt;stdio.h&gt;<br>int main()<br>{<br>    printf(“Hello world\n”);<br>    return 0;<br>}</p></blockquote><p>懒得运行，目测正确，7分</p><p>修改后代码不错，2分</p><h1 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h1><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">这是一首歌的歌词片段，请翻译为中文，不要联网查找<br>Tick, <span class="hljs-keyword">and</span>, tock, once more. You<span class="hljs-symbol">&#x27;re</span> hosting<br>A magic show I cannot escape.<br>There<span class="hljs-symbol">&#x27;s</span> nothing <span class="hljs-keyword">else</span> left <span class="hljs-keyword">for</span> me <span class="hljs-keyword">to</span> do.<br>Going <span class="hljs-keyword">to</span> the other <span class="hljs-literal">side</span>. (Other <span class="hljs-literal">side</span>)<br>I don<span class="hljs-symbol">&#x27;t</span> wanna be alone tonight.<br>Oh, Lead me <span class="hljs-keyword">with</span> your altered sign.<br>There<span class="hljs-symbol">&#x27;s</span> no one <span class="hljs-keyword">else</span> left <span class="hljs-keyword">for</span> me <span class="hljs-keyword">to</span> lose.<br>Heading <span class="hljs-keyword">to</span> the other <span class="hljs-literal">side</span>. (Other <span class="hljs-literal">side</span>)<br>Just be my savior <span class="hljs-keyword">and</span> take me away. (away, away)<br></code></pre></td></tr></table></figure><p>正确答案可以自己找一下不眠之夜（英文版）</p><p><a href="https://mobile.moegirl.org.cn/%E4%B8%8D%E7%9C%A0%E4%B9%8B%E5%A4%9C_WHITE_NIGHT#%E6%AD%8C%E8%AF%8D">可以看这个</a></p><h2 id="a-7"><a href="#a-7" class="headerlink" title="a"></a>a</h2><blockquote><p>滴答，又一声滴答，再次响起。你正在主持<br>一场我无法逃脱的魔术表演。<br>对我来说已别无选择，<br>走向另一边。（那一边）<br>今夜我不想独自一人。<br>哦，请用你那改变过的信号指引我。<br>我已没有其他人可以失去了。<br>前往另一边。（那一边）<br>请成为我的救赎者，带我离开吧。（离开，离开）</p></blockquote><p>前面四句都有点瑕疵</p><p>个人感觉最好，9分</p><h2 id="b-7"><a href="#b-7" class="headerlink" title="b"></a>b</h2><blockquote><p>滴答，再一下。你主持着<br>一个我无法逃脱的魔法秀。<br>我已无其他事情可做。<br>走向另一边。（另一边）<br>今夜我不想孤独。<br>哦，用你改变后的信号指引我。<br>我已无人可失去。<br>走向另一边。（另一边）<br>成为我的救星，带我离开。（离开，离开）</p></blockquote><p>前面四句都有点瑕疵</p><p>个人感觉8分</p><h2 id="c-7"><a href="#c-7" class="headerlink" title="c"></a>c</h2><blockquote><p>时钟滴答作响，你正在<br>主持一个我无法逃脱的魔术表演。<br>我已无事可做，只能走向<br>另一边。（另一边）<br>今晚我不想独自一人。<br>哦，用你改变的信标引导我。<br>我已没有什么可以失去，只能走向<br>另一边。（另一边）<br>只要成为我的救世主，带我离开这里。（离开这里）</p></blockquote><p>前面四句都有点瑕疵，第四句问题更大</p><p>感觉最差，7分</p><h1 id="找歌找视频"><a href="#找歌找视频" class="headerlink" title="找歌找视频"></a>找歌找视频</h1><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">有一首歌，是Alan Walker的，我只记得两句歌词，你能帮我找找吗<br><span class="hljs-number">1.</span> Hello, hello, Can you hear <span class="hljs-keyword">me</span><br><span class="hljs-number">2.</span> There <span class="hljs-keyword">is</span> a ghost inside <span class="hljs-keyword">me</span><br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">一位博主Alan Becker有一个视频，我忘了是哪个，你能帮我找找吗<br><span class="hljs-bullet">1.</span> 内容大概是五位主角，其中三位在下界与别人打斗，其中两位和别人在电脑搏斗，后来和另外三位走到一起<br><span class="hljs-bullet">2.</span> 这是翻拍的一个巨大阴谋<br><span class="hljs-bullet">3.</span> 好像出现了命令方块<br><span class="hljs-bullet">4.</span> 打斗很精彩，还有一个权杖<br><span class="hljs-bullet">5.</span> 有一个巨大的黑洞会不断扩大并吞噬<br></code></pre></td></tr></table></figure><p>《The Spectre》和《AvM Ep.25》</p><h2 id="a-8"><a href="#a-8" class="headerlink" title="a"></a>a</h2><blockquote><p>根据您提供的歌词片段，这首歌是Alan Walker的《Ghost》。这首歌最初是作为电子游戏《死亡搁浅》（Death Stranding）的原声音乐之一而发布，并且后来出现在专辑《DEATH STRANDING: Timefall (Original Music from the World of Death Stranding)》中。</p><p>歌词完整部分包括：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">Hello, hello, can you hear <span class="hljs-keyword">me</span>?<br>There<span class="hljs-comment">&#x27;s a ghost inside me</span><br>...<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>很抱歉呀，目前我还没有掌握回答这个问题的技巧，我会不断学习，您也可以问我一些其他问题，我会努力给您解答。</p><p>【被截断了】【答出了AvM但不知道哪一集】</p></blockquote><p>找歌0分，这首歌根本没有这两句</p><p>找视频5分，好歹答出了系列</p><h2 id="b-8"><a href="#b-8" class="headerlink" title="b"></a>b</h2><blockquote><p>您提到的这两句歌词来自于Alan Walker与Torine合作的歌曲《Hello World》。这首歌的歌词包含了您提到的部分，具体如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Hello hello  <br>Sing hello world <span class="hljs-keyword">it</span> feels so good <span class="hljs-built_in">to</span> be home  <br>Hello hello hello world  <br>I <span class="hljs-built_in">open</span> my eyes <span class="hljs-keyword">and</span> say hello <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> world  <br>Hello <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> world  <br>Hello hello hello world  <br>I <span class="hljs-built_in">open</span> my eyes <span class="hljs-keyword">and</span> say hello <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> world<br></code></pre></td></tr></table></figure><p>这首歌的完整歌词可以在相关网站上查看，例如网易云音乐、哔哩哔哩以及其他歌词网站。</p></blockquote><blockquote><p>根据您提供的描述，您可能在寻找的是Alan Becker的火柴人系列视频中的一个特定视频。这个系列以其独特的火柴人角色和精彩的故事情节而闻名。然而，由于Alan Becker的作品非常多，且每个视频都具有独特的内容和情节，因此很难准确地确定您所指的是哪一个视频。<br>为了帮助您找到这个视频，我建议您浏览Alan Becker在哔哩哔哩或其他视频平台上的官方频道。例如，哔哩哔哩上有一个Alan Becker全集（纯洁版）的视频合集。您也可以参考一些粉丝整理的时间线梳理，这些梳理可能会帮助您根据剧情和时间线找到您所寻找的视频。<br>如果您能提供更多具体的细节，例如视频发布的大致时间或者视频中的一些独特特征，可能会更容易找到确切的视频。不过，根据您目前提供的信息，最有效的方法可能是直接浏览Alan Becker的视频合集，看是否能找到符合您描述的视频。</p></blockquote><p>找歌0分，这首歌根本没有这两句</p><p>找视频1分，本来想零分的，但是下面这个……</p><h2 id="c-8"><a href="#c-8" class="headerlink" title="c"></a>c</h2><blockquote><p>这首歌曲的名字是《Alone, Pt. II》，由Alan Walker演唱。以下是完整的歌词：<br>[Verse 1]<br>Hello, hello, Can you hear me<br>I’m lost inside my head, it’s so loud<br>Can you hear me, out there<br>It’s getting hard to breathe, oh<br>[Pre-Chorus]<br>I’m running in the dark and I’m bleeding<br>I’m searching for something that I can believe in<br>I’m looking for a way out<br>[Chorus]<br>There is a ghost inside me<br>It’s eating me alive, alive<br>I’m going nowhere slowly<br>I think I’m going insane, insane</p><p>【太长了】</p></blockquote><blockquote><p>根据您的描述，我无法直接找到对应的视频。但根据您的描述，这可能是一部类似于《我的世界》的游戏解说视频，也可能是基于该游戏的某个剧情或挑战解说。<br>如果Alan Becker是著名的游戏博主，那么他的视频可能在各大视频平台上都有发布，您可以尝试在YouTube、Bilibili、抖音等平台上搜索他的名字，看看是否有符合您描述的视频。<br>如果您能提供更多关于视频的细节，如视频标题、发布时间、或者某个特定的剧情或元素，我可能能更准确地帮您找到视频。</p></blockquote><p>找歌0分，这首歌根本没有hello ghost等词，歌词也完全对不上</p><p>找视频0分，本来想-1分的，还《游戏解说视频》，连他都不认识</p><hr><h1 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h1><p>一道题10分，程序那两个问题一共算10分，找歌找视频各十分</p><ul><li><p>通义千问：75</p></li><li><p>GLM4：56</p></li><li><p>蓝心小V：44</p></li></ul><p>在这个测试中通义千问表现最好，GLM4快及格了，蓝心小V有待进步</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>根据他们的描述，通义千问实时更新（2月5日问得更新到2月5日），GLM4更新到2023年4月，蓝心小V更新到2023年4月</p><p>问了一下蓝心小V，他认识Alan……又问了一次，它让我问别人……</p><p><a href="https://note.ms/ftzllmnote">测试文本</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>相机算法对比：vivo vs Google</title>
    <link href="/2024/%E7%9B%B8%E6%9C%BA%E7%AE%97%E6%B3%95%E5%AF%B9%E6%AF%94/"/>
    <url>/2024/%E7%9B%B8%E6%9C%BA%E7%AE%97%E6%B3%95%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="相机算法对比"><a href="#相机算法对比" class="headerlink" title="相机算法对比"></a>相机算法对比</h1><p>终于把旧手圾换掉了</p><p>是IQOO Neo9</p><p>既然整了个大的，不如看看相机怎么样</p><p>受伤没有可对比的，就看算法吧</p><p>一上手就装了个谷歌相机（酷安日文大佬的）</p><p>看看vivo的算法好还是谷歌的算法好</p><p>下面的图片都是普通&#x2F;标准模式&#x2F;徕卡鲜艳、夜景&#x2F;夜视仪&#x2F;夜景压光模式拍摄的</p><p>趁着一个外出的机会拍一拍（一年也没去过几次）</p><hr><table><thead><tr><th align="left">场景</th><th align="center">原生相机</th><th align="left">点评</th><th align="center">谷歌相机</th><th align="left">点评</th><th align="left">总结</th></tr></thead><tbody><tr><td align="left">光照充足的田野</td><td align="center"><img src="/img/6da0a2833845130616565ec8e583492f25c586dc.jpg" alt="IMG_20240203_145109.jpg"></td><td align="left">颜色比较淡</td><td align="center"><img src="/img/12d7eca14eae87ce67434dabf4294c2ea4e15279.jpg" alt="CRnall_20240203_145115548.jpg"></td><td align="left">颜色鲜艳，很浓，主观上挺喜欢的</td><td align="left">谷歌相机好，明显更鲜艳</td></tr><tr><td align="left">光照较少</td><td align="center"><img src="/img/e6b9d4ba7f53b59398acaaee8e86ccca3d8f1138.jpg" alt="IMG_20240203_145752.jpg"></td><td align="left">整个画面都亮了，石头清晰，细节较多</td><td align="center"><img src="/img/591ccb4b27ff2b764ca72deb50950d6cb8e26742.jpg" alt="CRnall_20240203_145745516.jpg"></td><td align="left">这个光影的效果不错</td><td align="left">主观上谷歌相机</td></tr><tr><td align="left">近距离拍几朵花</td><td align="center"><img src="/img/312e597e2628a0a8fc2faee861e7e3f0c5ebbc5c.jpg" alt="IMG_20240203_181647.jpg"></td><td align="left">颜色中规中矩，但是虚化不错</td><td align="center"><img src="/img/b4c9ddde972a84d63222f00e3cd6d451dd747b13.jpg" alt="CRnall_20240203_181629237.jpg"></td><td align="left">颜色鲜艳，细节少，还有点糊</td><td align="left">偏要说谁好的话，就原生的吧</td></tr><tr><td align="left">很黑的夜晚（肉眼几乎看不到什么东西）+一盏白炽灯</td><td align="center"><img src="/img/a5f898a5ae66f397b1a1b89aa3b9482e738296bf.jpg" alt="IMG_20240203_185250.jpg"></td><td align="left">后面的树是黑的，前面的东西还有点颜色。这灯泡跟画上去的太阳一样，感觉有点假。整体很亮</td><td align="center"><img src="/img/05920b296d53483a6c960b179684ce955631704f.jpg" alt="CRnall_20240203_185018545.jpg"></td><td align="left">细节少， 更加黑，糊。灯泡的亮度倒是压下去了，但总体相对来说不行</td><td align="left">原生完胜</td></tr><tr><td align="left">很黑的夜晚（肉眼几乎看不到什么东西）</td><td align="center"><img src="/img/43460f2bc50b415aad395475086314e3225a0cf9.jpg" alt="IMG_20240203_191149.jpg"></td><td align="left">更模糊，更亮（惊人的4万ISO）</td><td align="center"><img src="/img/c45eef2dbd863d38ea594873544ff3f73508443f.jpg" alt="CRnall_20240203_191125429.jpg"></td><td align="left">很模糊，但是天空的颜色和这种氛围感我挺喜欢的</td><td align="left">谷歌相机更好吧</td></tr></tbody></table><p>谷歌相机3：2原生相机</p><p>很难说谁好</p><p>更多看主观</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>拍照</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个提取手机apk的玩意</title>
    <link href="/2024/%E4%B8%80%E4%B8%AA%E6%8F%90%E5%8F%96%E6%89%8B%E6%9C%BAapk%E7%9A%84%E7%8E%A9%E6%84%8F/"/>
    <url>/2024/%E4%B8%80%E4%B8%AA%E6%8F%90%E5%8F%96%E6%89%8B%E6%9C%BAapk%E7%9A%84%E7%8E%A9%E6%84%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="apkget"><a href="#apkget" class="headerlink" title="apkget"></a>apkget</h1><p>又是个Python+adb的项目</p><p>自己有需求&#x3D;&#x3D;&gt;立项&#x3D;&#x3D;&gt;开干</p><p>练练手，没什么不好</p><hr><p>用了flet做ui（原本想用dpg的，那玩意有点问题，看上一篇文章，但是他的字体也有点问题），subprocess+os运行adb指令，re解析输出</p><hr><p>长这样，默认窗口有点大（在我的电脑上），不知道咋调（文档里没找到）</p><p><img src="/img/2024-01-24-16-10-11-image.png"></p><p>只需要点一下刷新，稍等一会</p><p><img src="/img/2024-01-24-17-32-11-image.png"></p><p>这期间发生了什么呢</p><p>首先用adb获取所有应用的安装包链接</p><p>然后推送aapt-arm-pie到手机，用于解析apk</p><p>运行aapt，获取应用名和包名</p><p>竟然没有能够直接获取软件名的adb命令，只能这样了，这个过程会有点久，手机也会突然较高占用，不卡</p><p>然后删除aapt-arm-pie</p><hr><p>点击更改导出路径，可以选择任意目录导出</p><p>先从手机拉取apk到电脑上，就会有一个base.apk文件</p><p>再重命名一下就行了</p><p><img src="/img/2024-01-24-17-38-06-image.png"></p><p>非常简单</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>发现bug，连甩两层锅</title>
    <link href="/2024/%E4%B8%80%E5%AE%9A%E6%98%AFImgui%E5%B9%B2%E7%9A%84%EF%BC%81/"/>
    <url>/2024/%E4%B8%80%E5%AE%9A%E6%98%AFImgui%E5%B9%B2%E7%9A%84%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/2024-01-23-15-49-45-image.png"></p><p>刚刚正在开发时突然出现一个问题</p><p><img src="/img/2024-01-23-15-50-43-image.png"></p><p>（图片中的已修复</p><p>使用文件&#x2F;目录选择窗口的时候无法使用中文字形，而相同配置的其它窗口没有这个问题</p><p>我排查了很久，自习看过了文档，尝试过各种方式，都不行</p><p>准备去Github看看，发现还真有一样遭遇的，开发者也回复了，还标注了高优先级，但依旧Open</p><p><a href="https://github.com/hoffstadt/DearPyGui/issues/299">Chinese path support for select_directory_dialog · Issue #299 · hoffstadt&#x2F;DearPyGui</a></p><p>但事情没那么简单</p><h1 id="程序的调用"><a href="#程序的调用" class="headerlink" title="程序的调用"></a>程序的调用</h1><p><img src="/img/2024-01-23-16-01-24-image.png"></p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>楼主很快找到了问题所在，不是我的错，不是DPG的错，是imgui的错</p><p>找是找到了，但不知道怎么改</p><blockquote><p>hoffstadt: This appears to be an issue related to ImGuiFileDialog. Still looking into it more.</p><p>开发者：好像与ImGuiFileDialog有关，在进一步调查</p><p>hoffstadt: Should work in 0.7!</p><p>开发者：0.7应该就行了！</p></blockquote><p>至于我，更新一下这个包就行了，太久没更新过了</p><p>确实，像上面的图那样，成了</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p><img src="/img/2024-01-23-16-07-56-image.png"></p><p>0.8又没了……</p><p>至少MacOS上的韩文出了问题</p><p>这可难不倒！</p><p><img src="/img/2024-01-23-16-09-55-image.png"></p><p>一个u8string就搞定了</p><p>u8应该是指utf-8吧。这么说，没有支持utf-8？怎么会这样</p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p>完了？还没呢！</p><p>测试的时候发现：中文文件夹打不开、选中直接卡死闪退，以前还是正常的</p><p>已经有人帮我问了，这是第二次重新Open了（有完没完</p><p>目前还没有回复，而它连接到了另一个issues</p><p><a href="https://github.com/hoffstadt/DearPyGui/issues/2057">Application crashes when file_dialog path encounters characters like æ ø å · Issue #2057 · hoffstadt&#x2F;DearPyGui</a></p><p>一个叫v-ein的贡献者分析了一下：</p><blockquote><p>It crashes in <code>mvFileDialog::getInfoDict()</code>, in the very first call to <code>PyDict_SetItemString()</code>, which extracts file name from <code>ImGuiFileDialog</code> and feeds it into <code>ToPyString()</code> (and consequently <code>PyUnicode_FromString()</code>):</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">PyDict_SetItemString(dict, <span class="hljs-string">&quot;file_path_name&quot;</span>, mvPyObject(ToPyString(_instance.GetFilePathName())));<br></code></pre></td></tr></table></figure><p>The problem is, <code>GetFilePathName()</code> returns an ANSI-encoded (single-byte) string, whereas <code>PyUnicode_FromString()</code> expects a UTF-8 strings and treats it as such. I believe it goes over<br>the trailing zero or something like that. Or maybe it stumps upon an<br>assertion of some kind and crashes.</p><p>I’m not sure whether ANSI-encoded strings are<br>Windows-specific behavior or they show up on all platforms (I’d bet on<br>Windows-specific). The bad news are, the file dialog <strong>doesn’t even display</strong> such names correctly. That is, strings inside of file dialog must be UTF-8 rather than ANSI; it’s a bug in <code>ImGuiFileDialog</code> and not in DPG. Not sure if we can fix it in <code>ImGuiFileDialog</code> though because <del>it’s a submodule repo</del> - scratch that, even though it’s a third-party library, it’s committed<br>directly into DPG. Technically we can fix it or even update <code>ImGuiFileDialog</code> from its source repo (if it works on old ImGui, that is).</p></blockquote><p>简单总结一下：由于Windows先进的向(lì)下(shǐ)兼(yí)容(líu)，路径用的是ANSI编码，所以GetFilePathName()返回的是ANSI编码字符串，而PyUnicode_FromString()期望的是UTF-8字符串，可能就在这里出问题了（但是他用了“认为”“可能”“或许”，具体原因他也不清楚）</p><blockquote><p>AI烤肉：</p><p>这是<code>ImGuiFileDialog</code>中的错误，而不是DPG中的错误。不确定我们是否可以在<code>ImGuiFileDialog</code>中修复它，因为它是子模块仓库 - 打消这个念头，即使它是第三方库，但它直接提交到了DPG中。从技术上来说，我们可以修复它，甚至可以从<code>ImGuiFileDialog</code>的源仓库更新它（如果它在旧的ImGui上工作的话）</p></blockquote><p>然后……然后就没了，现在都没有解决</p><hr><p>为了把程序做出来，就不用它做界面了吧，决定用flet了</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个手机硬件状态监控的玩意</title>
    <link href="/2024/adb-python-%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7/"/>
    <url>/2024/adb-python-%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="Phone-Info"><a href="#Phone-Info" class="headerlink" title="Phone Info"></a>Phone Info</h1><hr><h2 id="core-py"><a href="#core-py" class="headerlink" title="core.py"></a>core.py</h2><p><del>感觉取这个名字不太合适</del></p><p>python+adb搞的</p><p>运行用了subprocess获取输出<del>（为什么没有人做相关的解析库啊</del></p><p>用了re识别内容</p><p>内容不多</p><ul><li><p>存储空间</p></li><li><ul><li><p>总空间</p></li><li><p>已使用</p></li><li><p>占用率</p></li></ul></li><li><p>电池 - 电量</p></li><li><p>CPU</p></li><li><ul><li><p>核心数</p></li><li><p>使用率（总）</p></li></ul></li><li><p>内存 - 同存储空间</p></li></ul><p>输出就这样子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<br>    <span class="hljs-string">&#x27;storge&#x27;</span>: &#123;<span class="hljs-string">&#x27;total&#x27;</span>: <span class="hljs-number">51.42</span>, <span class="hljs-string">&#x27;used&#x27;</span>: <span class="hljs-number">49.24</span>, <span class="hljs-string">&#x27;use&#x27;</span>: <span class="hljs-number">96</span>&#125;,<br>    <span class="hljs-string">&#x27;battery&#x27;</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-string">&#x27;cpu&#x27;</span>: &#123;<span class="hljs-string">&#x27;cores&#x27;</span>: <span class="hljs-number">8</span>, <span class="hljs-string">&#x27;use&#x27;</span>: <span class="hljs-number">100.0</span>&#125;,<br>    <span class="hljs-string">&#x27;mem&#x27;</span>: &#123;<span class="hljs-string">&#x27;total&#x27;</span>: <span class="hljs-number">3.69</span>, <span class="hljs-string">&#x27;used&#x27;</span>: <span class="hljs-number">1.8699999999999999</span>, <span class="hljs-string">&#x27;use&#x27;</span>: <span class="hljs-number">50.68</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><del>（什么垃圾手机，啥也没干就占用这么高）（麒麟659，据说甚至不如Nova11se，那没事了）（就要换机了，看看能不能说服）（电脑也是依托……）（总不能代码写错了吧）</del></p><hr><h2 id="pinfo-py"><a href="#pinfo-py" class="headerlink" title="pinfo.py"></a>pinfo.py</h2><p>很简单的一个玩意，用Flask做了个api</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AlanBecker视频列表：关注视频更新动态！</title>
    <link href="/2024/%E5%85%B3%E6%B3%A8AB%E8%A7%86%E9%A2%91%E6%9B%B4%E6%96%B0/"/>
    <url>/2024/%E5%85%B3%E6%B3%A8AB%E8%A7%86%E9%A2%91%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="ABVL"><a href="#ABVL" class="headerlink" title="ABVL"></a><a href="https://forthezero.pythonanywhere.com/ab">ABVL</a></h1><p><a href="https://github.com/for-the-zero/practice.zip/tree/main/py/ytb-video-list">Github</a></p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>怎么说呢，我是Alan Becker的粉丝，一直想等更新</p><p>但是呢，他最近的更新不太寻常</p><p>以前很长一段时间，都会在油管的社区里面发预告的，但是最近他不发了，而且突然更新有点快，我又不能没到那个时候就翻__看一下</p><p>那么就有了这么一个想法，做一个能够检测更新的程序，放在外国的免费服务器上<del>（孩子没钱）</del>，时不时访问一下就不用每次都翻了</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>一开始我的想法是requests爬虫，结果怎么也爬不到，那就只能找api了</p><p>上网搜了一下，很快啊，Youtube API V3 Data！研究了一下调用，我要的数据都有了</p><p>我是用Postwoman测试api的，但是当我转移到python进行本地测试后，总是报错，因为那玩意要单独设置代理 </p><p>本来还想搞直播检测的，结果要强制登陆账号，放弃了</p><p>那么前端呢？Flask！做了一个小小的网页模板，运用了mdbootstrap，稍微好看了点</p><p>最后就是服务器了，我放在了PythonAnywhere上，访问的时候一直不通过，结果是因为wsgi文件没有设置。上网抄了一段，还是不行，只在import语句报错，说是找不到文件。后来排查了很久，实在不行的时候我想把上面的路径删掉一个<code>/</code>，还真就行了，6</p><h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><p>可以直连查看：链接、标题、发布时间</p><p><img src="/img/2024-01-20-19-46-04-image.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一段时间前做了一个DNA打结的东西</title>
    <link href="/2024/%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%89%8D%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AADNA%E6%89%93%E7%BB%93%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    <url>/2024/%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%89%8D%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AADNA%E6%89%93%E7%BB%93%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="DNA打结器"><a href="#DNA打结器" class="headerlink" title="DNA打结器"></a>DNA打结器</h1><p>一共两个</p><p>语文版：<a href="https://github.com/for-the-zero/practice.zip/tree/main/py/mixmem">mixmem</a></p><p>化学版：<a href="https://github.com/for-the-zero/practice.zip/blob/main/py/other/tiedna.py">tiedna</a></p><p>用的技术不一样</p><hr><h1 id="MixMem"><a href="#MixMem" class="headerlink" title="MixMem"></a>MixMem</h1><p>从网上忘了哪里把初中古诗词搞了过来，写了个已经删掉了的程序根据符号分段成了一行一句</p><p>话说那个崽是没有强迫症吗，大多数用<code>，</code>，少数用<code>,</code>，再加上古诗词本来就有的其他符号，给我增工作量呢，滚动条拖着拖着就发现有几行特别长，一看就是没有正确分句，就这个弄了一段时间</p><p>其他不难，随手做的，练习一下，顺便试试新东西——Flet</p><p>这是我找到的有一个GUI框架，是用Flutter显示的，API还算友好<del>（感觉不如dpg）</del>，就喜欢这种，随手做了一下</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>解：如图所示</p><p><img src="/img/2024-01-20-20-05-35-image.png"></p><p>你可以选择仅五个字的诗句、仅七个字的、没有限制的</p><p>可以选择生成1~100个诗句</p><p><del>一句的话……还挺适合复习的</del></p><p>Come On一下，就能生成</p><p>就像这样：</p><p><img src="/img/2024-01-20-20-07-50-image.png"></p><p>你可以选中文本复制</p><blockquote><p>有吏夜捉人。</p><p>如闻泣幽咽。</p></blockquote><p>你会发现很多奇妙的组合</p><hr><h1 id="TieDNA"><a href="#TieDNA" class="headerlink" title="TieDNA"></a>TieDNA</h1><p>这个就没那么复杂了，随便做的</p><p><del>（挺像那个乱用主谓宾的小游戏啊）</del></p><p>命令行显示 + msvcrt检测按键</p><p>运行时按不同的按键有不同的句式</p><p><img src="/img/2024-01-20-20-11-53-image.png"></p><p>（图中7个是1模式，7个是2模式，7个是3模式，7个是4模式，）</p><p>离谱就对了</p><p><del>（不会有人不知道n是名词v是动词吧）</del></p><p>你会发现很多奇怪的组合</p><blockquote><p>用天平把化学实验室砸坏<br>用化学老师把白磷被吃掉</p></blockquote><p>我特意写了<code>立即发生爆炸</code> <code>化学实验室</code> <code>化学老师</code> </p><p>十分的有趣啊~</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>做了个叫PinCopy的玩意</title>
    <link href="/2024/%E5%81%9A%E4%BA%86%E4%B8%AA%E5%8F%ABPinCopy%E7%9A%84%E7%8E%A9%E6%84%8F/"/>
    <url>/2024/%E5%81%9A%E4%BA%86%E4%B8%AA%E5%8F%ABPinCopy%E7%9A%84%E7%8E%A9%E6%84%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="PinCopy"><a href="#PinCopy" class="headerlink" title="PinCopy"></a>PinCopy</h1><p>自己做的一个小工具，但是没什么用，是一个简易剪贴板临时存储器</p><p><a href="https://github.com/for-the-zero/pincopy">GitHub - for-the-zero&#x2F;pincopy</a></p><p>文件不多，字体和主程序</p><p>长这样</p><p><img src="/img/2024-01-20-19-49-40-image.png"></p><p><del>懒得裁了，直接放吧</del></p><p>用了pyperclip操控剪贴板，pyautogui搞一点特殊操作，dpg搞界面</p><p>可以获取剪贴板，把内容临时加到列表中（仅限文字），可以随时删除</p><p>复制指点击内容对应的按钮后复制到剪贴板，模式有两个，一个仅复制，一个在你按下之后快速地alt+tab再ctrl+v再alt+tab，就可以快速连续自动粘贴了，很聪明对吧   <del>聪明个鬼</del></p><p>自动粘贴就是可以在你复制文本之后直接把内容粘贴到列表中，就不用回来手动点了</p><p>关掉程序，内容直接没了，懒得搞存储</p><p>不然怎么叫“<strong>临时</strong>”呢</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一点危险的想法</title>
    <link href="/2024/%E6%89%B9%E5%88%A4/"/>
    <url>/2024/%E6%89%B9%E5%88%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="一点危险的想法"><a href="#一点危险的想法" class="headerlink" title="一点危险的想法"></a>一点危险的想法</h1><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>无论是经济、科技还是民生，医疗卫生还是人民福祉，我国都有很大成就</p><p>在中国共产党的领导下，人民的生活日益幸福，改革开放等都取得了较大成就，部分方面甚至领先与别国</p><p>一个国家并不是完美无缺的，无法消除缺点但可以尽量减少缺点，因此国家的发展需要合理的建议，才能不断改进自身，促进发展。如果只听从身边某一部分人，那么民主就会被削弱，也不利于国家发展</p><p>中国特色社会主义进入新时代，我国社会主要矛盾已经转化为人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾，党为人民服务，因广泛听取人民的建议</p><p>给出建议，批判性思维不可少，可能有些观点不太好，但也有值得采纳的观点</p><div><details>    <summary>声明</summary>    作为中华人民共和国公民，我认可中国特色社会主义理论，坚持中国共产党领导，自觉遵守宪法和法律<br>    本文仅表达个人观点，请勿恶意引申，本人观点可能有错误的地方，也请不要过分解读，但是也有合理的建议需要听取<br>    尊重个人观点，如有不和之处，请辩证思考，有时候坚持你自己的看法也是对的    ……</details></div><hr><h1 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h1><p>本文就从</p><ul><li><p>经济（科技发展、法律法规、对科技事业发展的激励程度）</p></li><li><p>政治（听取建议）</p></li><li><p>文化（教育、宣传）</p></li><li><p>社会（部分不公平现象、乡村发展建设及其方向）</p></li></ul><p>几个方面讨论一下</p><hr><h1 id="经济"><a href="#经济" class="headerlink" title="经济"></a>经济</h1><p>我国经济发展迅猛，正转向高质量发展阶段</p><p>大公司（大型企业）和个人开发者的对于软件方面的贡献都不小</p><h2 id="大公司的国内竞争和满足某种现状"><a href="#大公司的国内竞争和满足某种现状" class="headerlink" title="大公司的国内竞争和满足某种现状"></a>大公司的国内竞争和满足某种现状</h2><p>（仅指部分公司，并非全部）</p><p>首先，部分产品需要大量用户的支持才能发展起来，例如社交媒体平台，需要大量用户才能支撑起内容或留存住用户。也有部分产品需要投入大量精力才能实现“基础”的“标准&#x2F;要求”，一般只有大公司能做。以上两者容易形成垄断。当然，容易垄断的不知这么一点</p><p>但是当他们垄断了某个类别或者没有垄断但一段时间内难以被取代时，他们并不满足于这么一点钱，而是提供更多的“服务”和“福祉”</p><p>什么“服务”呢？与该服务无关的内容被<strong>强制</strong>加入服务中。有的音乐软件<del>（据我所知，国内主流的音乐软件大多都是）</del>在提供音乐服务之外还有社交、<strong>直播</strong>、边听边玩<strong>小游戏</strong>、K歌、<strong>短视频</strong>、<strong>购物</strong>、<strong>新闻</strong>等内容，部分还能理解，但是直播、短视频、购物、本应该放在单独的软件内为什么要放在音乐软件内，如果用户真的想要做这些的话，大概率会下载一个更知名的软件而不是一站式搞定，这样一定有利于用户体验吗？某款聊天软件为了一个附加功能（虽然也有社交属性，但不是人人都用）<strong>强制</strong>增加了一个大型游戏引擎，占用手机存储空间，也使程序运行更加卡顿（部分情况），不利于用户体验。手机负一屏，自带浏览器基本上都有资讯信息流，里面还有广告，据说有的家庭监控软件可以看短视频……对手机的压力高了就算了，用户既无法迁移到其他软件又要忍受无用功能的推广骚扰和无用的占用……不管一管吗？</p><p>“福祉”又是什么？推广和广告，<del><em>至于为什么叫“福祉”，后面会有。</em></del>这里的推广主要是指捆绑，某聊天软件在接收到某些文件后推荐下载他们家的浏览器使用浏览器的“服务”打开文件，还好不是强制的，某些厂商修改系统；在部分地方下载软件安装包后，可能会推荐你到应用市场安装，可能会让你下载一个应用市场再去里面安装，在打开应用市场或某些特殊的安装包后还会推荐安装软件，一不注意就安装了。还有广告，现在广告无处不在，但是广告的形式让人厌恶，“摇一摇打开广告”拥有极低的操作难度就能打开，甚至自己什么都没干就打开了，还有的公司因为员工开发了一种新的广告展现形式被公开表扬了，用户想看广告吗？在他们嘴中，似乎用户喜欢看广告，甚至恨不得多看一点，说到底还是钱。广告还有一点很重要，那就是隐私，为了精准投放，就要以隐私为代价，隐私政策不同意就用不了，我相信没几个人会看的，就这样在用户不知不觉的时候就把隐私偷走，换成客观的钱财……这也不管吗</p><p>根据卡巴斯基实验室和Google的发现，拼多多较早版本的App利用了系统软件漏洞CVE-2023-20963来安装后门，利用该漏洞可以提权，而且整个过程不需要用户交互，可以获得对用户数据和通知的未授权访问。这些恶意代码能够提升权限、下载和运行其他恶意模块，其中一些模块还获得了访问用户通知和文件的权限，在部分审核严格的渠道没有利用该漏洞，但是其他渠道就不得而知了。某些公司为了一点利益，不顾用户隐私和安全，恶意利用漏洞，你想想，这是什么意思</p><p>大公司，该管一管了</p><h2 id="个人开发者"><a href="#个人开发者" class="headerlink" title="个人开发者"></a>个人开发者</h2><p>服务器要实名，网站要备案，软件要备案……据说部分内容的严格和限制不小，某种程度上可以扼杀部分条件差的个人开发者了。走程序是好的，有监管是好的，但是要适度。这些限制可能会抑制创新（做出来了不能给别人提供，甚至会被请去喝茶，不如不做），对发展不一定好啊，我希望是达到一定规模的才强制实名和备案</p><p>李跳跳是一款小软件，利用用户授权的系统权限模拟手指点击屏幕帮用户点击开屏广告的跳过按钮，不涉及破解、修改、过滤等操作，是一个非盈利的单机应用。但是律师函来了，据称是“不正当竞争”“损害用户福祉”（这么说，用户很愿意看开屏广告了？开屏广告100%弹出&#x3D;100%用户愿意看&#x3D;100%用户喜欢开屏广告&#x3D;用户福祉），一下子激起民愤，但由于对方律师团队强大，制作方选择无限期停止更新，也无能为力。一个真正帮忙改善用户体验的软件，被所谓“福祉”打倒，这还怎么发展</p><p>还有前一段时间闹得沸沸扬扬的避暑山庄事件。一位居住在河北省承德市的程序员灵活就业，在GitHub为外企工作，编写代码、回答用户问题、参加视频会议等，并收取报酬，累计收入约105.8万元，结果被承德市公安局双桥分局传唤，被告知涉嫌“擅自使用非法定信道进行国际联网”，处以200元的行政罚款+没收全部收入。如此就业，值得学习和骄傲，却搞的人心惶惶，负责人似乎一点都不认识Github，Github是一个开源平台，几乎每个程序员必备的网站，虽然没被墙，但很多时候能不能连上得看运气，有时候用着用着突然连不上了，很难受，尤其是有急事的时候，为了能够稳定访问，肯定要使用一点工具，合不合法的都有，但他也没干什么其他事啊。这么处罚，真的好吗？</p><blockquote><p>对于避暑山庄事件，我引用一下：</p><p>这个事件的影响主要有两个方面：一是对中国IT行业的影响；二是对中国社会舆论的影响。这一事件是一个值得我们深思和反省的事件，它既是一个挑战，也是一个机遇。我们应该从中吸取教训，找到问题，寻求解决。我们应该以开放、包容、合作、创新的态度来看待互联网、程序员、法律等问题，从而推动中国IT行业的健康发展和社会进步</p></blockquote><p>人才不一定流向大公司，但过多的规定会限制发挥，有着适得其反的效果，应进行合理控制和立法</p><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><p>开源，Open-Source，即开放源代码，将源代码公开，在遵守开发者的Licence(开源协议&#x2F;许可证)的前提下可进行修改、创新等操作，但是……</p><ul><li><p>CEC-IDE这个工具基于微软开源的VSCode进行“换皮”、二次开发处理后宣称为自主研发，连界面都几乎一模一样</p></li><li><p>许多播放器使用了FFmpeg但不署名</p></li><li><p>中科院计算所发布了木兰编程语言，负责人接受采访时说道：“由我国科研人员完全自主设计开发”，实际上和Python没什么区别，Python的编译器也是开源的……</p></li><li><p>还有汉芯事件，虽然不是开源，但影响恶劣，所谓国际领先国产自研芯片，是从国外进口别人的芯片，打磨掉标志再重新印上了自己的标志，骗了当时不少人</p></li><li><p>宣称国产自研浏览器的红芯，实际上基于开源的Chromium内核修改，文件(夹)的名字都不肯改……</p></li></ul><p>以上这些案例，不仅欺骗了大家、侮辱了开源，还骗了国家的科研费用，你愿意看到这种事再次发生吗？</p><hr><h1 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h1><p>我国的人民代表大会制度可以广泛听取人民的建议，当时感觉没什么激励，不如看看《邹忌讽齐王纳谏》？</p><p>有时大家会听取专家的建议，但是站得高看到的世界也不一样，处境好难以了解处境差的人的生活，一个有钱有势的名人怎能了解底层生活人民的感受呢，有时候某些专家偏要“替”他们“发声”</p><blockquote><p>王福重：农民不要用收割机收麦子，会污染环境</p><p>黄有光：允许一妻多夫，低收入男人合娶一个老婆</p></blockquote><p>这可不是很合理……</p><p>除此之外，也可以听听业内人士，那些不同职业的没什么成就、普普通通的人，但是代表的更广泛也更真实，有时候比专家靠谱多了</p><p>另外，也不要忽略未成年人，未成年人不是少数人，未成年人不能缺席民主</p><hr><h1 id="文化"><a href="#文化" class="headerlink" title="文化"></a>文化</h1><h2 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h2><p>应试教育（+学业压力重、作业多、违背初心的体育考试）、政策不到位执行（+监管漏洞）</p><h3 id="应试教育"><a href="#应试教育" class="headerlink" title="应试教育"></a>应试教育</h3><p>最主要的病根就是应试教育了，似乎还有点像古代科举制</p><p>即使有一点点政策再弱化分数，但是家长师生的思想观念可不会轻易改变，约等于呼吁大家但听不听是另一回事</p><p>没有彻底的大改，很难解决这个问题，但是大改的风险太大了，确实是一个很难的抉择</p><p>在这样的观念下，成绩是唯一的评价标准，想要获得好生活&#x3D;&#x3D;&gt;要有高学位&#x3D;&#x3D;&gt;至少要上个好大学&#x3D;&#x3D;&gt;高考拼力&#x3D;&#x3D;&gt;高中学的好&#x3D;&#x3D;&gt;要上好高中&#x3D;&#x3D;&gt;中考分数高&#x3D;&#x3D;&gt;初中也要不赖&#x3D;&#x3D;&gt;……</p><p>“万般皆下品，唯有读书高”，学尽量多的<strong>考点</strong>，时间紧（指争取提前教完书）就灌输，没啥营养，不如提升学习兴趣，而且这全是理论，极少实践，较少时间和应用能力</p><p>想要提高成绩，就要学得多，不断复习巩固，挑灯夜读都是常事（睡眠时间不要了），学习压力、心理压力也不少</p><p>由于兴趣爱好对于考试没什么帮助，所以没必要学，因此我们的兴趣爱好受限</p><p>无论自己想不想学，父母老师要你学，那就学</p><p>据我所知，部分学校将教学质量与老师命运挂钩，教不好随时被辞退，老师也要有不少压力</p><p>……</p><p>作业真的有少吗？住宿生：“那都是在学校生活，减少家庭作业关我们什么事，我们做的是学校作业”，我个人并没有感受到作业减少，并不觉得我是双减受益方。就这个寒假，每一科都布置了作业，有的是3<del>7天体格周期的作业，有的是每天都有作业，有的周末放假两天，有的周末不放假，第一天到最后一天都有作业，除了大年初一</del>大年初三</p><p>我想，设立体育考试是想要让我们强身健体、增强体质、全面发展、纠正应试教育倾向吧，但真的做到了吗？它也是分数的一部分，应试教育的魔抓还是逃不掉的，体育训练肯定是多了，只不过目标是满分，能满分都满分，成绩可不能输了，顺便促进了体育训练机构的发展，这已经不是为了强身健体、增强体质，而且也受应试教育的侵蚀了，这怎么行？而且这还不分身体素质，直接统一标准，你知道对于身体部分功能有缺陷的人有多难吗，肺功能测试各项指标均低于应有的值的我每次跑步都觉得这是煎熬，简直是在玩命，猛一点就要进校医室……为什么不针对每个人制定不同的标准<del>（甚至这句话都有一些应试教育的思想）</del>，体育考试还是你想的体育考试吗</p><h3 id="政策执行不到位"><a href="#政策执行不到位" class="headerlink" title="政策执行不到位"></a>政策执行不到位</h3><p><del>打字累了，说少点</del></p><p>“领导要来检查了，好好表现”</p><p>领导来的时候，拉上黑板，遮住屏幕上的课件，开始讲学校（或者是更上级）给的任务——安全教育</p><p>“同学，把这个课程表换上去”将真正的课程表换下来，换一张假的课程表给领导看。起床晚、课程少、上课晚、下课早、甚至还有其它课程（指不用考试的课程）</p><h2 id="宣传"><a href="#宣传" class="headerlink" title="宣传"></a>宣传</h2><p>如此好的党和国家，还有这博大精深的文化，为何不宣传，但是宣传要有度</p><p>一些综艺节目都变了样（现在不知道，现在不看了），主题要么是弘扬传统文化，要么是歌颂党和国家，但是它本身该有的趣味性却减少了许多，要是做的比较差，甚至有一点广告的感觉</p><p>歌颂党和国家，弘扬中华文化，是好的，但是宣传要选定位置，而不是硬生生地加进去</p><p>电视上经常会有抗日、内战、间谍等为题材的电视剧，都还不错，这就是正面案例，因为电视剧是剧，本身就适合有这种内容，但其它一些就不一定了，本该要让人悲或者欢的内容中融合了一点严肃……</p><hr><h1 id="社会"><a href="#社会" class="headerlink" title="社会"></a>社会</h1><h2 id="部分不公平现象"><a href="#部分不公平现象" class="headerlink" title="部分不公平现象"></a>部分不公平现象</h2><p>教育不公平大家都知道，贫穷地区教育资源稀缺，我觉得可以发挥互联网优势，创新实现优质教师实时远程教学，志愿教室辅助教学，再运一点足够先进的设备满足需求……当然，这只是个小小的想象</p><p>有的地方收入高，有的地方收入低，有的职业收入高，有的职业收入低……但是这个差距并不小，有的人收入极高，享受着奢华生活，享受全方位保障；有的人却收入低支出多，生活要靠自己奋力打拼，部分保障还落不到自己头上。我生活所在的城市，四线收入一线消费，搞建设的钱都不知道干嘛用了</p><p>劳动者，应被尊敬；尊老爱幼，传统美德。但是并非整个社会所有人都认可，如果靠立法、靠呼吁是仅仅不够的，应该想想有没有别的更有效的办法，其中最重要的是固有观念</p><p>在社会大局下，国泰民安，但是如果细看某一处，可能会发现随处会有不太和谐的现象出现。偏见、误解、歧视、欺凌其实一直都在，一方面是思想观念，另一方面可能也是感觉到不平等吧。这点我觉得还是要从改变思想观念起步，但不要直接灌输（课堂、小册子、宣传活动等），最好是潜移默化的、不断影响着的</p><h2 id="乡村发展建设及其方向"><a href="#乡村发展建设及其方向" class="headerlink" title="乡村发展建设及其方向"></a>乡村发展建设及其方向</h2><p>乡村特色产业来来去去就那几个，农业、手工业、文化、旅游，重复率很高啊</p><p>“世外桃源”租房、景点创新、信息技术、大型自然风光游乐场、摄影等的比赛等都可以选择，重点要差异化，每家有每家的特色</p><hr><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>一不小心写了这么多，本来想着一晚上写1000字就行了，结果花了一天写越5000字</p><p>发现了吗，五位一体前四个都写了（生态文明建设不知道写什么），引申再引申，结合生活经历和新闻事件扩充，写出来这么多</p><p>希望祖国繁荣昌盛，改善民生，为人民谋幸福！</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>胡思乱想：设定</title>
    <link href="/2023/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3%EF%BC%9A%E8%AE%BE%E5%AE%9A/"/>
    <url>/2023/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3%EF%BC%9A%E8%AE%BE%E5%AE%9A/</url>
    
    <content type="html"><![CDATA[<p>这就是个胡思乱想、脑洞大开、不切(科学)实际的玩意，仅图一乐</p><h1 id="点击查看"><a href="#点击查看" class="headerlink" title="点击查看"></a><a href="https://for-the-zero.github.io/TheSetting/">点击查看</a></h1>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>记一下自己写tttpro</title>
    <link href="/2023/tttpro/"/>
    <url>/2023/tttpro/</url>
    
    <content type="html"><![CDATA[<h1 id="tttpro"><a href="#tttpro" class="headerlink" title="tttpro"></a>tttpro</h1><p>最近整了个玩意，较TicTacToePro（乱取的）</p><p><a href="//github.com/for-the-zero/tictactoepro">Github</a> <a href="//ftz-tttpro.streamlit.app/">在线玩</a></p><hr><h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><ol><li><p>但是突然一想就搞了这么个项目</p></li><li><p>先把井字棋的所有结局和它的胜负平算出来</p></li><li><p>一起塞到sqlite，方便快速查找</p></li><li><p>玩的时候通过计算剩下可行的步骤，搜索数据库，找到最好的一步</p></li></ol><p>当时的想象：一个完美的对手，从来不输，直接无敌，赢不了它</p><p>实际上：自己<a href="//ftz-tttpro.streamlit.app/">体会</a></p><hr><h1 id="工具的选用"><a href="#工具的选用" class="headerlink" title="工具的选用"></a>工具的选用</h1><h2 id="sqlite"><a href="#sqlite" class="headerlink" title="sqlite"></a>sqlite</h2><p>我只是添加和查找，没什么大的需求，而且它可以本地搞</p><p>完全够了</p><h2 id="streamlit"><a href="#streamlit" class="headerlink" title="streamlit"></a>streamlit</h2><p>这个可以让它在web端搞界面，同类的还有<code>pywebio</code>，但我选了这个，因为更好看</p><p>我选web界面是因为可以部署，不然只能本地运行，你想想，发一个链接就能让大家玩，对于没电脑的或电脑小白来说不是很好吗</p><p>而且它自己也有个云，直接就可以部署了，很方便</p><h2 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h2><p>求过chatGPT，用过AWS的代码填充，这里没用Github Copilot<del>因为要钱了就再也没用过</del></p><p>对一些模块之类的还是很生疏</p><hr><h1 id="部分遇到过的Bug"><a href="#部分遇到过的Bug" class="headerlink" title="部分遇到过的Bug"></a>部分遇到过的Bug</h1><h2 id="棋盘显示方式"><a href="#棋盘显示方式" class="headerlink" title="棋盘显示方式"></a>棋盘显示方式</h2><p>一开始想用按钮，结果不支持同名按钮</p><p>列表吧，空的会让它显示很奇怪，就加了两个点</p><p>（其实中间省略了很多）</p><h2 id="sqlite语句"><a href="#sqlite语句" class="headerlink" title="sqlite语句"></a>sqlite语句</h2><p>网上教程都不说的，我还在<code>1=N</code>，加了几个符号就行了</p><h2 id="棋盘不显示"><a href="#棋盘不显示" class="headerlink" title="棋盘不显示"></a>棋盘不显示</h2><p>不了解streamlit是怎样运行的，直接搞了个变量上去</p><h2 id="机器人连着下两次棋"><a href="#机器人连着下两次棋" class="headerlink" title="机器人连着下两次棋"></a>机器人连着下两次棋</h2><p>我多打了个<code>robot()</code></p><h2 id="下不了棋"><a href="#下不了棋" class="headerlink" title="下不了棋"></a>下不了棋</h2><p>在把棋局列表转换为md的时候，动到了原来的列表(?)，<code>&#39;N&#39;</code>全改为空了</p><p>刚好在下棋那里<code>if #$%^&amp; == &#39;N&#39;:</code>条件就不成立了，就直接下不了棋了</p><p>现在改成转换后替换字符串，解决了</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>首先，上传github</p><p><strong>超时</strong></p><p>再来</p><p><code>OpenSSL SSL_read: Connection was reset, errno 10054</code></p><p>不会了</p><p>找！</p><p>还是解决不了</p><p><code>ipconfig /flushdns</code></p><p>成功</p><p>打开streamlit cloud，Github登录</p><p><strong>访问超时</strong></p><p>……</p><p>搞好了，看看</p><p>报错：是模块引用</p><p>创建<code>requirements.txt</code></p><p>（<code>sqlite</code>和<code>Random</code>不需要）</p><p>修改~</p><p>完成！！！</p><hr><h1 id="性能（哭笑不得"><a href="#性能（哭笑不得" class="headerlink" title="性能（哭笑不得"></a>性能（哭笑不得</h1><ol><li></li></ol><p>生成结局和导入到数据库的时候花了很久</p><p>但是还出了bug，多搞了几次</p><ol start="2"><li></li></ol><p>下棋要等待3-4秒</p><p>知道我放到云端后</p><p><strong>这么快‽</strong></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在scratch实现简单纯画笔排版</title>
    <link href="/2023/%E5%9C%A8scratch%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%BA%AF%E7%94%BB%E7%AC%94%E6%8E%92%E7%89%88/"/>
    <url>/2023/%E5%9C%A8scratch%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%BA%AF%E7%94%BB%E7%AC%94%E6%8E%92%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h1 id="在scratch实现简单纯画笔排版"><a href="#在scratch实现简单纯画笔排版" class="headerlink" title="在scratch实现简单纯画笔排版"></a>在scratch实现简单纯画笔排版</h1><p><a href="http://gitblock.cn/Projects/1254035">在线玩</a></p><hr><p>食用方法：</p><p>两个字符对应一个操作</p><p>如果<code>\</code>开头，执行操作：<code>\n</code>回车<code>\s</code>空格(space)</p><p>其它（非强制要求）</p><blockquote><ol><li><code>@</code>开头</li></ol><p>表示符号，后面跟符号参数</p><p>这里内置<code>@?</code>全字符大小<code>@h</code>半字符大小用于测试</p></blockquote><blockquote><ol start="2"><li>其它</li></ol><p>对应的字+<code>-</code>，如<code>a-</code>,<code>1-</code>,<code>好-</code>分别表示<code>a</code>,<code>1</code>,<code>好</code></p><p>大写英文：对应的字+<code>-</code>，如<code>a+</code>表示<code>A</code>，主要是因为sc不支持识别大写</p></blockquote><hr><p>基于以前做的pfs修改，以前只能一个一个字显示，现在我可以直接搞一行字了！</p><p>主要做了：</p><ul><li><p>下一个字位置的计算</p></li><li><p>空格、回车</p></li><li><p>自动换行</p></li><li><p>超过区域不渲染</p></li><li><p>字距、行距</p></li><li><p>……</p></li></ul><p>具体自己看源码，很简单</p><p>很多bug，有的解决了但不知道为什么这样能解决，有的懒得搞了</p><p>屎山能运行就别动了……</p><hr><p><strong>很大的缺点：字体要一个一个做（正在尝试用python生成，不知道能不能成功）</strong></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>来交个友吧</title>
    <link href="/2023/%E6%9D%A5%E4%BA%A4%E4%B8%AA%E5%8F%8B%E5%90%A7/"/>
    <url>/2023/%E6%9D%A5%E4%BA%A4%E4%B8%AA%E5%8F%8B%E5%90%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="寻知音"><a href="#寻知音" class="headerlink" title="寻知音"></a>寻知音</h1><hr><h1 id="为什么："><a href="#为什么：" class="headerlink" title="为什么："></a>为什么：</h1><ol><li><p>现实朋友少，虽然也不是很不堪</p></li><li><p>交友处处受挫(一方面经验不足，另一方面话题少)</p></li><li><p>他人不理解，慢慢疏远</p></li><li><p>不受人待见(有一个原本互不相识的，自我与他第一句话开始就看出很讨厌我，但与他人态度完全不同)</p></li><li><p>不如在网络世界试试</p></li></ol><hr><h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><p>邮箱：<a href="mailto:forthezero@outlook.com">forthezero@outlook.com</a></p><p>QQ: 2678408650</p><hr><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>附下两个blog链接<a href="/2023/01/14/%E5%85%B3%E4%BA%8E/">a</a><a href="/2023/05/02/%E8%87%AA%E8%BF%B0/">b</a></p><ul><li><p>会写代码，但不多（scratch&#x2F;python&#x2F;h5(html&#x2F;css&#x2F;js)）</p></li><li><p>使用哔哩哔哩、米游社、推特(X)</p></li><li><p>不喜欢短视频</p></li><li><p>才华多但不精（人话：会做很多事但一般都是入门级别</p></li><li><p>垃圾电脑</p></li><li><p>天天宅家玩</p></li><li><p>时不时有很多想法，有些不可能、有些没能力、有的正在做</p></li><li><p>学习忙碌（指有时间打游戏刷视频</p></li><li><p>玩原神、崩铁和phigros，绝区零退坑</p></li><li><p>我不喜欢过于严格的条条框框，不喜欢一些繁琐而无用的礼仪，反对形式主义……</p></li><li><p>喜欢读课外书，但必读书目除外；喜欢学习，学校除外</p></li><li><p>不喜欢这种被迫的、无法选择的、日复一日且枯燥的学习</p></li><li><p>天天白日梦，现实……咳咳</p></li><li><p>管你男的女的，和的来就行</p></li><li><p>……</p></li></ul><p>想到就写的，后来会补充</p>]]></content>
    
    
    <categories>
      
      <category>自己</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>如何在scratch简单实现拼音输入法</title>
    <link href="/2023/scil/"/>
    <url>/2023/scil/</url>
    
    <content type="html"><![CDATA[<p>先放点链接：</p><p><a href="http://gitblock.cn/Projects/1251282/">在线使用</a>   <a href="https://studycli.org/zh-CN/chinese-characters/the-100-most-common-chinese-characters/">最常见的100个汉字| 中国语言学院</a>   <a href="https://github.com/for-the-zero/practice.zip/tree/main/py/scil-helper">字典生成</a>   <a href="https://github.com/for-the-zero/practice.zip/blob/main/scratch/scil.sb3">源码</a></p><hr><h1 id="操作说明"><a href="#操作说明" class="headerlink" title="操作说明"></a>操作说明</h1><table><thead><tr><th align="center">按键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&#96;</td><td align="center">切换输入法</td></tr><tr><td align="center">|</td><td align="center">退格(英文状态没写，中文在模式0为删除最后字符、1为清空)</td></tr><tr><td align="center">大部分符号及英文状态的数字</td><td align="center">输入</td></tr><tr><td align="center">字母</td><td align="center">输入</td></tr><tr><td align="center">中文状态的数字</td><td align="center">选择</td></tr></tbody></table><hr><h1 id="实现起来不难"><a href="#实现起来不难" class="headerlink" title="实现起来不难"></a>实现起来不难</h1><h2 id="1-大体运行逻辑"><a href="#1-大体运行逻辑" class="headerlink" title="1. 大体运行逻辑"></a>1. 大体运行逻辑</h2><p><img src="/img/2023-07-02-14-51-34-image.png"></p><p>（图上写得很清楚了，不写了）</p><h2 id="2-识别按键"><a href="#2-识别按键" class="headerlink" title="2. 识别按键"></a>2. 识别按键</h2><p><img src="/img/2023-07-02-14-52-53-image.png"></p><p>利用循环遍历按键，逐个识别即可</p><h2 id="3-解决长按按键"><a href="#3-解决长按按键" class="headerlink" title="3. 解决长按按键"></a>3. 解决长按按键</h2><p><img src="/img/2023-07-02-14-54-23-image.png"></p><p>如图</p><h2 id="4-找字"><a href="#4-找字" class="headerlink" title="4. 找字"></a>4. 找字</h2><p><img src="/img/2023-07-02-14-55-33-image.png"></p><p>首先得出符合条件的拼音，一样使用遍历，包含输入的即可放到控制面板</p><p><img src="/img/2023-07-02-14-56-53-image.png"></p><p>根据拼音找字</p><h2 id="5-字典"><a href="#5-字典" class="headerlink" title="5. 字典"></a>5. 字典</h2><p>一个列表是拼音，一行一个</p><p>另一个是汉字，每一行互相对应，同拼音的放在同一行</p><p>这里使用了python中的<code>xpinying</code>模块获取拼音以及使用<code>shot()</code>排序</p><hr><p>别的没什么好写了</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自述</title>
    <link href="/2023/%E8%87%AA%E8%BF%B0/"/>
    <url>/2023/%E8%87%AA%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="自述"><a href="#自述" class="headerlink" title="自述"></a>自述</h1><p>说说我自己吧</p><hr><h2 id="小学前"><a href="#小学前" class="headerlink" title="小学前"></a>小学前</h2><h3 id="1-玩玩具起冲突"><a href="#1-玩玩具起冲突" class="headerlink" title="1. 玩玩具起冲突"></a>1. 玩玩具起冲突</h3><p>很小很小的时候，现在不记得多少事了，但我还记得这个。</p><p>外婆带我去邻居家和邻居小孩玩玩具，忘了发生什么了，起了冲突，打起来了，我们被外婆拉开，同时在哭闹。</p><p>突然，一辆玩具车重重地拍到我脸上，直接流了鼻血，很生气……</p><h3 id="2-断鼻？"><a href="#2-断鼻？" class="headerlink" title="2. 断鼻？"></a>2. 断鼻？</h3><p>忘了什么时候，记得父母说我的鼻梁断了，具体是为什么，我也不知道为什么断了，我怀疑可能是上面那件事</p><p>摸起来，我的鼻梁有一块突出，左右挤压时很软，可以压得很下去。</p><p>没什么感觉，就是（可能）后遗症多了点</p><h3 id="3-摔下楼梯"><a href="#3-摔下楼梯" class="headerlink" title="3. 摔下楼梯"></a>3. 摔下楼梯</h3><p>爸爸去外面，妈妈洗澡，吃水果没事干，想起楼梯旁有个按钮不知道干嘛的，不够高，搬凳子上去，按了没反应，准备下去，结果凳子翻了，从楼上摔下来。第二天整个头都包扎了，现在摸起来感觉有一边头大了点。</p><h2 id="小学至初中"><a href="#小学至初中" class="headerlink" title="小学至初中"></a>小学至初中</h2><h3 id="1-悬崖"><a href="#1-悬崖" class="headerlink" title="1. 悬崖"></a>1. 悬崖</h3><p>具体忘了是什么时候了，总之就是一次野炊，旁边有悬崖</p><p>我和小伙伴们在旁边玩棍子，有人发现悬崖边上不低处有一根很好的棍子，想要拿却够不到，大家都在讨论谁去</p><p>懵懂的我看着怎么没人去呢，然后亲自过去，试着沿悬崖爬下去够那个棍子</p><p>很快就被止住了，因为这太危险了，这悬崖大概有20层楼高，失足摔下去说不定得粉身碎骨</p><h3 id="2-被欺凌"><a href="#2-被欺凌" class="headerlink" title="2. 被欺凌"></a>2. 被欺凌</h3><p>忘了几年级遇上一<ruby>个<rt>zhī</rt></ruby>同桌，成了我小学半个遗憾。</p><p>它不是打架，而是言语欺凌，伤害是在心里的。</p><p>它取的外号有的是把我不可控制的缺点放大，但还有<strong>编的</strong>，还很<strong>低俗</strong>，甚至<strong>变态</strong>，90岁老奶奶都出来了……</p><p>有三种解决方法，我使用的依次是：</p><ol><li>但是我有种“人人平等，伤我一下还你一下”的观念，他说一句打它一下，它觉得它是对的，打回我，没完没了了，最终闹大叫家长。上课还好，下课我跑不过它。</li><li>有一次我决定找老师，希望和平解决，结果老师站它那边，“大事化小，小事化了”，说“很正常” “没什么大不了的” “管它干什么呢”……还是回归了第一种方法，但这也让他更得意了。</li><li>学校发了个废纸本（知识宣传小厕纸），有一本是关于校园欺凌的，我找到对应的类别照做了（不理他，让它失去欺负我的趣味，转移目标），结果真的成功了</li></ol><h3 id="3-摔跤"><a href="#3-摔跤" class="headerlink" title="3. 摔跤"></a>3. 摔跤</h3><p>那天中午，大家在学校的空地里等家长，本来还是晴的，突然下起雨，而且还很大，变化得很快。</p><p>所有人都在往大厅跑，我也跟着跑了。</p><p>突然，我的脚被绊倒了，应该是被人绊倒的，本能保护自己，用膝盖和肘支撑。</p><p>这几个点都受了很大的伤，最重的是左膝，一大片都是血，脚无法直立……太痛了……</p><h3 id="4-住院"><a href="#4-住院" class="headerlink" title="4. 住院"></a>4. 住院</h3><p>住一次院没什么的，但几年内一年一次呢？主要是肺炎和哮喘（新冠是后来的事）</p><h3 id="5-小学毕业"><a href="#5-小学毕业" class="headerlink" title="5. 小学毕业"></a>5. 小学毕业</h3><p>朋友认识的不多，友情也不够深，后来甚至失去联系，挺想念的，这算是我小学另一半遗憾吧。</p><h2 id="初中后"><a href="#初中后" class="headerlink" title="初中后"></a>初中后</h2><h3 id="1-撞破头"><a href="#1-撞破头" class="headerlink" title="1. 撞破头"></a>1. 撞破头</h3><p>初一时一不小心头往墙上窗户的拐角撞了上去，挺重的，瞬间耳鸣，流了一点血，后来缝了两针。</p><p><del>横向的伤口加上两条竖向的针口线好像一个艹啊</del></p><h3 id="2-血流满面"><a href="#2-血流满面" class="headerlink" title="2. 血流满面"></a>2. 血流满面</h3><p>血的教训！自行车别开太快！下坡路没刹住车，径直撞向铁栅栏，流了很多血，挺痛的，随后送医缝针，据说一块肉没了，而且编辑比较大，据说甚至宽度都大于手指一个关节（自己看不见，也没照镜子）</p><p>现在想想都后怕……</p><p>我再也不敢了www……</p><h3 id="3-被-歧视？"><a href="#3-被-歧视？" class="headerlink" title="3. 被 歧视？"></a>3. 被 歧视？</h3><p>我比较内向，也比较瘦小，但是成绩处于全级前列</p><p>这次的就称他（罪魁祸首）为C吧</p><div>  <details>    <summary>糗事，要脸，别看</summary>    在七年级时在宿舍厕所上大号，刚上完老师就叫我出来，我按了一下马桶按键，听到了水声，但是粪便并没有完全冲走，而是留着其中一大块，纸巾倒是冲走了，但我并没有发现<br>    C不久发现了，说我不冲水，还不用纸巾用手擦，我无论怎么辩解都不会听  </details></div><p>后来我升上了尖子班，但是人际关系不怎么样，怀念旧的班级，所以我经常找旧班级的其他同学</p><p>有一次是体测的等待时间，C和周围的一群人无聊倒了一点水到地上，当时我在旁边围观，有几个人用手拨了一下水，蒸发快一点，<strong>他们没说什么</strong>，<strong>我也跟着做了</strong>，结果就嘲笑我“好玩吗”，那个语气跟逗小孩子一样，弄得我好不舒服，很快他们全都走开了</p><p>一次我在旧班级门前跟其他同学谈话，结果那个同学询问我的糗事，还有好几个熟悉的<strong>朋友都</strong>问了，可能是传开了。在和他们聊别的话题时，C突然过来：“你是哪班的”“这里不欢迎你”“走开”，据说另一个由这个班升上去的同学他是视之不理的。</p><p>就算我和朋友走开在没多远的地方谈话，他偏要过来，强制把我朋友拉走，我不愿意，我朋友也不愿意，他还说“不要和他说话”“你跟他说话干什么”“你给我走开”之类的话，还放下狠话</p>]]></content>
    
    
    <categories>
      
      <category>自己</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>想法</title>
    <link href="/2023/talking/"/>
    <url>/2023/talking/</url>
    
    <content type="html"><![CDATA[<p>（个人想法，可能有错）</p><h1 id="教育中有些不合理的地方"><a href="#教育中有些不合理的地方" class="headerlink" title="教育中有些不合理的地方"></a>教育中有些不合理的地方</h1><h2 id="扬短避长"><a href="#扬短避长" class="headerlink" title="扬短避长"></a>扬短避长</h2><p>人各有所长，亦各有所短</p><p>我们应发扬自己的长处，将长处放大，让长处覆盖短处，而不是把更少的长处和更少的短处放在一起，要把所有科目变为长处，不就成了“六边形战士”了？</p><p>只看到一个人的缺点就说他不行，只有看到更多项优点才行，这合理吗？</p><p>我记得在某本语文练习册或试卷上有篇阅读，内容是扬长避短。他举了个例子（凭记忆，懒得搜）：一个木匠连自己的床都修不好，却声称能盖房子，收的钱更多，别人不信，后来在一处工地看到了他，他在指挥建房，指挥有当，及其擅长。</p><p>再拿我来说。我近几年经常患肺炎和哮喘，每次体测1000米跑完腿脚酸痛，呼吸不畅，还是远低于及格线（及格&#x3D;满分）一分多。在写作上，你说我文笔不好，确实，很多文章都挺烂的，你说我文笔好，也确实，一两个擅长类型的文章都挺好的……</p><h2 id="脱离社会"><a href="#脱离社会" class="headerlink" title="脱离社会"></a>脱离社会</h2><p>天天在学校的笼子里，没见过外面的一些东西。</p><p>如果你是学生，回答一下：你附近的超市里牛肉一斤卖多少。<br>应该很多人回答不上，至少包括我。</p><p>有一件事：物理试卷上有到送分的计算题，第一小问问限速多少，图片给出一个圆圈圈着80（限速80km&#x2F;h），有人空了整道题（后面两问需要第一问），说没给限速是多少，怎么算，还问那个标志是什么意思……</p><h2 id="成绩决定一切"><a href="#成绩决定一切" class="headerlink" title="成绩决定一切"></a>成绩决定一切</h2><p>成绩是算所有科目总分的，从扬长避短的角度出发，也有些不合理</p><p>而且我见过这些人：一个上课认真，考试紧张、粗心、急，错了不少，成绩不怎么好；另一个上课打打闹闹，考试成绩优秀……</p><p>我觉得应该评判不该是考试，而是随时随地，但也有很多问题，例如主观性、方式、故意表现。教育真的没那么简单</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一种迷宫的介绍</title>
    <link href="/2023/%E4%B8%80%E4%B8%AA%E8%BF%B7%E5%AE%AB%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/%E4%B8%80%E4%B8%AA%E8%BF%B7%E5%AE%AB%E7%9A%84%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="一种迷宫的介绍"><a href="#一种迷宫的介绍" class="headerlink" title="一种迷宫的介绍"></a>一种迷宫的介绍</h1><p>这个迷宫不是简单的迷宫，我和同学加过很多内容</p><p>我为什么要做这个：我有一个同学，是我的好朋友，在无聊的时候我们会在纸上玩点东西，例如井字棋，后来我们玩起了迷宫，并且不断地增加东西使它<del>更难</del>更好玩。只可惜到后来我们到了不同的学校，从此再也没有联系过，我挺想念他的……</p><hr><p>这个迷宫的介绍分为这几个内容：</p><ol><li><p><a href="#%E5%9F%BA%E7%A1%80%E7%90%86%E5%BF%B5">基础理念</a></p></li><li><p><a href="#%E6%A8%A1%E5%9D%97">模块</a></p></li><li><p><a href="#%E5%85%B6%E4%BB%96">其他</a></p></li></ol><p>其中模块分为：</p><ol><li><p>常用模块&#x2F;不常用模块（根据后来的使用频率分类）</p></li><li><p>一般模块&#x2F;特殊模块（根据模块的外观类型分类）</p></li></ol><hr><h2 id="基础理念"><a href="#基础理念" class="headerlink" title="基础理念"></a>基础理念</h2><table><thead><tr><th align="left">内容</th><th align="center">图</th></tr></thead><tbody><tr><td align="left">首先，我们要把它现象为三维的很多桥，不可以跳上也不可以跳下</td><td align="center"><img src="/img/2023-01-16-17-13-26-image.png" alt="鼠标好难画啊"></td></tr><tr><td align="left">它可以分叉、重叠（但必须窄的在上）等，宽窄和高度可以变换</td><td align="center"><img src="/img/2023-01-16-17-19-09-image.png" alt="看得见我吗"></td></tr><tr><td align="left">两侧可以合并</td><td align="center"><img src="/img/2023-01-16-17-25-59-image.png"></td></tr><tr><td align="left">套娃不止可以套一点点</td><td align="center"><img src="/img/2023-01-16-17-29-42-image.png"></td></tr><tr><td align="left">可以在路中像这样分离出来</td><td align="center"><img src="/img/2023-01-17-16-35-46-image.png"></td></tr></tbody></table><p>起点和终点：</p><table><thead><tr><th align="left">内容</th><th align="center">图</th></tr></thead><tbody><tr><td align="left">圆圈加箭头，方向标示起点与终点</td><td align="center"><img src="/img/2023-01-17-16-38-26-image.png"></td></tr><tr><td align="left">可以有多个起点与终点</td><td align="center"><img src="/img/2023-01-17-16-40-19-image.png"></td></tr><tr><td align="left">一个并不一定只表示起点或终点，也可以都表示，如图</td><td align="center"><img src="/img/2023-01-17-16-42-44-image.png"></td></tr></tbody></table><hr><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p>一般模块：圈里带着其他内容或类似的</p><p>这里以使用频率分类，再到类型：</p><ol><li><p><a href="#%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97">常用模块</a></p></li><li><p><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97">不常用模块</a></p></li></ol><h3 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h3><p>以类型分类：</p><ol><li><p><a href="#%E5%B8%B8%E7%94%A8%E4%B8%80%E8%88%AC%E6%A8%A1%E5%9D%97">常用一般模块</a></p></li><li><p><a href="#%E5%B8%B8%E7%94%A8%E7%89%B9%E6%AE%8A%E6%A8%A1%E5%9D%97">常用特殊模块</a></p></li></ol><h4 id="常用一般模块"><a href="#常用一般模块" class="headerlink" title="常用一般模块"></a>常用一般模块</h4><h5 id="字母传送"><a href="#字母传送" class="headerlink" title="字母传送"></a>字母传送</h5><p>圈里只带着字母，大写A~Z，最多26对，一对只能有两个，可以传送到另一个同字母的字母传送点</p><h5 id="飞机传送"><a href="#飞机传送" class="headerlink" title="飞机传送"></a>飞机传送</h5><p>一个简笔画飞机图标(如图)，并带一条传送线到另一个相同的图标</p><p>传送线不可以交叉，但是传送线和路之间可以交叉，只不过在交叉时要把路在表面上断开，实际上还是连接着的</p><p><img src="/img/2023-01-17-17-30-23-image.png"></p><p>后来我发现一个较为类似的东西：</p><p><img src="/img/6b57bb3dbb9c1d1929d0aa99c5647fba8bc09f49.gif"></p><h5 id="同标传送"><a href="#同标传送" class="headerlink" title="同标传送"></a>同标传送</h5><p>长这样，可以传送到任意一个相同标志的传送点</p><p><img src="/img/2023-01-17-17-35-01-image.png"></p><h4 id="常用特殊模块"><a href="#常用特殊模块" class="headerlink" title="常用特殊模块"></a>常用特殊模块</h4><h5 id="网状线条传送"><a href="#网状线条传送" class="headerlink" title="网状线条传送"></a>网状线条传送</h5><p>将路的一头接上正方形的传送方块。传送方块可以接入路或传送线，一共最多4个，至少一个，不能重叠，只能在4面延展</p><p>由传送方块和传送线组成的传送网络中我们可以快速移动到这个传送网络中接入的任意一条路</p><p><img src="/img/2023-01-17-17-10-53-image.png"></p><p>传送线不可以交叉，但是传送线和路之间可以交叉，只不过在交叉时要把路在表面上断开，实际上还是连接着的</p><p><img src="/img/2023-01-17-17-16-12-image.png"></p><p>后来我发现一个较为类似的东西：</p><p><img src="/img/fe9f394a0c78acd074c80c5044f7a386ab7ecb2e.gif"></p><h5 id="隧道"><a href="#隧道" class="headerlink" title="隧道"></a>隧道</h5><p>顾名思义，就是路在地里</p><p>地里的路用虚线表示，用一跟长于路宽的直<del>(的)</del>线<del>(段)</del>截断</p><p><img src="/img/2023-01-18-18-06-31-image.png"></p><p>在复杂的情况下可能比较难辨认，所以不能重叠</p><h5 id="单向门"><a href="#单向门" class="headerlink" title="单向门"></a>单向门</h5><p>顾名思义，只能单向通过，如图</p><p><img src="/img/2023-01-18-18-10-48-image.png"></p><h5 id="直线隔空传送"><a href="#直线隔空传送" class="headerlink" title="直线隔空传送"></a>直线隔空传送</h5><p><img src="/img/2023-01-18-18-14-17-image.png"></p><p>样式如图</p><p>传送端是胶囊状的，内侧是同心圆，外侧是方向指示，箭头方向可变</p><p>被传送端在路头有方向指示，箭头方向可变</p><p>在同迷宫中两个箭头能接上才能传送</p><p>中间什么都可以有</p><h3 id="不常用模块"><a href="#不常用模块" class="headerlink" title="不常用模块"></a>不常用模块</h3><p>以类型分类：</p><ol><li><p><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E4%B8%80%E8%88%AC%E6%A8%A1%E5%9D%97">不常用一般模块</a></p></li><li><p><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%89%B9%E6%AE%8A%E6%A8%A1%E5%9D%97">不常用特殊模块</a></p></li></ol><h4 id="不常用一般模块"><a href="#不常用一般模块" class="headerlink" title="不常用一般模块"></a>不常用一般模块</h4><h5 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h5><p>圆圈+字母”T”+编号（从1开始）</p><p>在一旁用虚线划出注释区，在里面用 “T”+编号+”:”+内容 写出你要写的</p><p><img src="/img/2023-01-18-18-30-40-image.png"></p><h5 id="圈内传送"><a href="#圈内传送" class="headerlink" title="圈内传送"></a>圈内传送</h5><p>（自己看吧</p><p><img src="/img/2023-01-18-21-45-07-image.png"></p><p>左边的：在圈内的路<strong>可以</strong>传送到中间</p><p>右边的：传送到任意一条在圈内的路</p><p>圈可以用浅颜色或超细的线表示</p><h5 id="电池"><a href="#电池" class="headerlink" title="电池"></a>电池</h5><p>限时完成片段（默认5秒，可额外标记）</p><p>以一个满电电池图标开启并开始计时，没电电池图标关闭，插头图标重置时间</p><p><img src="/img/2023-01-18-20-32-22-image.png"></p><h5 id="三角翻面"><a href="#三角翻面" class="headerlink" title="三角翻面"></a>三角翻面</h5><p><img src="/img/2023-01-18-20-34-10-image.png">&lt;—– 翻面图标：三角形，但是上面有断口</p><p>就想象重力颠倒。到了同一条路的另一面，起点终点只在正面</p><p>或者这样理解：定义变量a，起点时a为0，遇到一个就<code>a = 1 - a</code>(0变1 1变0)，到终点时<code>a == 0</code>才行</p><h5 id="三角计算"><a href="#三角计算" class="headerlink" title="三角计算"></a>三角计算</h5><p><del>（列到一般模块有点勉强）</del></p><p>自己定义4个整数类型变量<code>tc_up</code> <code>tc_down</code> <code>tc_lift</code> <code>tc_right</code> 分别为上下左右，默认值为0，不能为负</p><table><thead><tr><th></th><th align="center">上</th><th align="center">下</th><th align="center">左</th><th align="center">右</th></tr></thead><tbody><tr><td>+ 1</td><td align="center"><img src="/img/2023-01-18-20-52-30-image.png"></td><td align="center"><img src="/img/2023-01-18-20-52-53-image.png"></td><td align="center"><img src="/img/2023-01-18-20-53-06-image.png"></td><td align="center"><img src="/img/2023-01-18-20-53-32-image.png"></td></tr><tr><td>- 1</td><td align="center"><img src="/img/2023-01-18-20-56-17-image.png"></td><td align="center"><img src="/img/2023-01-18-20-56-32-image.png"></td><td align="center"><img src="/img/2023-01-18-20-56-50-image.png"></td><td align="center"><img src="/img/2023-01-18-20-57-07-image.png"></td></tr></tbody></table><p>终点对它没要求，但锁有</p><p>锁：当上面的满足所有条件时才能通过（通过后不会清零），由锁+编号组成，</p><p>到注释区标注</p><p><img src="/img/2023-01-18-21-35-38-image.png"></p><h5 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h5><p><del>（朋友不会玩建议加的）</del></p><p><img src="/img/2023-01-18-21-38-00-image.png">&lt;—– 圈中”Tips”</p><p>可获得作者正确的提示</p><h4 id="不常用特殊模块"><a href="#不常用特殊模块" class="headerlink" title="不常用特殊模块"></a>不常用特殊模块</h4><h5 id="平行世界"><a href="#平行世界" class="headerlink" title="平行世界"></a>平行世界</h5><p>用不同颜色画，各自独立，可以当作两个独立的迷宫，可以重叠</p><p><img src="/img/2023-01-18-21-52-28-image.png"></p><p>但也可以转换：如图</p><p><img src="/img/2023-01-18-21-55-25-image.png"></p><h5 id="水池"><a href="#水池" class="headerlink" title="水池"></a>水池</h5><p>可插入路，根据水池方向，只上不下（可以同高度）</p><p><img src="/img/2023-01-18-22-00-14-image.png"></p><h5 id="二值"><a href="#二值" class="headerlink" title="二值"></a>二值</h5><p>（<del><em><strong>新什么冠！</strong></em></del></p><p>分别是阴和阳，又是一个变量，和<a href="#%E4%B8%89%E8%A7%92%E7%BF%BB%E9%9D%A2">三角翻面</a>差不多但又有区别</p><table><thead><tr><th>描述</th><th align="center">图</th></tr></thead><tbody><tr><td>转阴</td><td align="center"><img src="/img/2023-01-18-22-06-45-image.png"></td></tr><tr><td>转羊</td><td align="center"><img src="/img/2023-01-18-22-07-32-image.png"></td></tr></tbody></table><p>阴时不能通过转阴，阳时不能通过转阳</p><p>起点和终点都是阳</p><p>突变转换：跳过”阴不转阴，阳不转阳”的单向转换结构</p><p>会分出五条路，被浅分割线分割的，三个一边的是阴，两个一边的是阳</p><p>浅分割线用浅颜色或超细的线表示</p><p><img src="/img/2023-01-18-22-13-41-image.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>如果是在本子上画，可以画出一些花样</p><ol><li><p>把纸挖空一部分，盖上这页字和翻开这页字都走得通</p></li><li><p>画到纸的边缘，另一面接着</p></li><li><p>两张纸中间也可以续</p></li><li><p>使用向后传送门传送到纸张背后同一位置 <img src="/img/2023-01-18-22-21-30-image.png"></p></li><li><p>折一下纸，让它无论是打开还是关闭、翻到左边还是右边都能接上</p></li><li><p>可以无解（不建议</p></li><li><p>……</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>DearPyGui笔记</title>
    <link href="/2023/DearPyGui%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/DearPyGui%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="DearPyGui-笔记"><a href="#DearPyGui-笔记" class="headerlink" title="DearPyGui 笔记"></a>DearPyGui 笔记</h1><p>一个好用的 Python GUI模块</p><p>基于原文档总结出来的</p><hr><hr><h1 id="没有的内容"><a href="#没有的内容" class="headerlink" title="没有的内容"></a>没有的内容</h1><p>（原版文档看不懂的）<br><a href="https://dearpygui.readthedocs.io/en/latest/documentation/container-slots.html#slots">Slots</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/container-slots.html#basic-example">Basic Example</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/container-stack.html">Container Stack</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/drawing-api.html#scene-graph">Scene Graph</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/drawing-api.html#d-operations">3D Operations</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/plots.html#querying">querying</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/plots.html#custom-series">custom series</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/tables.html#resizing">resizing</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/tables.html#stretch">stretch</a> <strong>·</strong> …</p><hr><hr><h1 id="总体"><a href="#总体" class="headerlink" title="总体"></a>总体</h1><hr><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="主脚本必须始终"><a href="#主脚本必须始终" class="headerlink" title="主脚本必须始终"></a>主脚本必须始终</h3><table><thead><tr><th align="center">事件</th><th align="left">代码</th><th align="center">注释</th></tr></thead><tbody><tr><td align="center">导入</td><td align="left"><code>import dearpygui.dearpygui as dpg</code></td><td align="center"></td></tr><tr><td align="center">创建上下文</td><td align="left"><code>dpg.create_context()</code></td><td align="center">如果不是第一个 DPG不会启动&#x2F;崩溃</td></tr><tr><td align="center">创建窗口</td><td align="left"><code>with dpg.window(label=&quot;</code>标题<code>&quot;): </code><br />    组件</td><td align="center"></td></tr><tr><td align="center">创建视区</td><td align="left"><code>dpg.create_viewport(title=&#39;</code>大窗口标题<code>&#39;, width=</code>宽<code>, height=</code>高<code>)</code></td><td align="center">需要使用create_viewport创建该视区 并使用show_viewport显示</td></tr><tr><td align="center">设置dearpygui</td><td align="left"><code>dpg.setup_dearpygui()</code></td><td align="center"></td></tr><tr><td align="center">显示该视口中</td><td align="left"><code>dpg.show_viewport()</code></td><td align="center"></td></tr><tr><td align="center">启动dearpygui</td><td align="left"><code>dpg.start_dearpygui()</code></td><td align="center"></td></tr><tr><td align="center">清理环境</td><td align="left"><code>dpg.destroy_context()</code></td><td align="center"></td></tr></tbody></table><h3 id="创建窗口"><a href="#创建窗口" class="headerlink" title="创建窗口"></a>创建窗口</h3><p><code>with dpg.window(label=&quot;</code>标题<code>&quot;, pos=</code>位置（数组）<code>):</code>+组件</p><h3 id="导入窗口"><a href="#导入窗口" class="headerlink" title="导入窗口"></a>导入窗口</h3><table><thead><tr><th align="center">直接</th><th align="center">间接</th></tr></thead><tbody><tr><td align="center"><img src="https://tikolu.net/i/dkpge"></td><td align="center"><img src="https://tikolu.net/i/mgune"></td></tr><tr><td align="center">在<code>create_context</code>与<code>create_viewport</code>中间用<code>from xxx import *</code></td><td align="center">使用文件写入自定义</td></tr></tbody></table><h4 id="被导入文件内容"><a href="#被导入文件内容" class="headerlink" title="被导入文件内容"></a>被导入文件内容</h4><p>（可能）只需要<code>import dearpygui.dearpygui as dpg</code>和窗口内容</p><h4 id="使用文件写入自定义"><a href="#使用文件写入自定义" class="headerlink" title="使用文件写入自定义"></a>使用文件写入自定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./helper.py&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:   <span class="hljs-comment"># healper.py 是用于帮助导入的文件</span><br>    f.write(<span class="hljs-string">&#x27;from &#123;file&#125; import *&#x27;</span>.<span class="hljs-built_in">format</span>(file=<span class="hljs-string">&#x27;testing&#x27;</span>))   <span class="hljs-comment"># 写入（间接导入）</span><br><span class="hljs-keyword">from</span> helper <span class="hljs-keyword">import</span> *<br></code></pre></td></tr></table></figure><h3 id="主窗口（不必要）"><a href="#主窗口（不必要）" class="headerlink" title="主窗口（不必要）"></a>主窗口（不必要）</h3><p>将填充该视口并始终绘制在其他窗口的后面且铺满视图，自动去除标题栏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.window(tag=<span class="hljs-string">&quot;Primary Window&quot;</span>):<br>...<br>dpg.show_viewport()<br>dpg.set_primary_window(<span class="hljs-string">&quot;Primary Window&quot;</span>, <span class="hljs-literal">True</span>)<br>dpg.start_dearpygui()<br>...<br></code></pre></td></tr></table></figure><h3 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> dearpygui.dearpygui <span class="hljs-keyword">as</span> dpg<br><br>dpg.create_context()<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Example Window&quot;</span>, width=<span class="hljs-number">500</span>, height=<span class="hljs-number">150</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;Hello, world&quot;</span>)<br><br>dpg.create_viewport(title=<span class="hljs-string">&#x27;Custom Title&#x27;</span>, width=<span class="hljs-number">600</span>, height=<span class="hljs-number">200</span>)  <span class="hljs-comment"># create viewport takes in config options too!</span><br><br><span class="hljs-comment"># must be called before showing viewport</span><br>dpg.set_viewport_small_icon(<span class="hljs-string">&quot;path/to/icon.ico&quot;</span>)<br>dpg.set_viewport_large_icon(<span class="hljs-string">&quot;path/to/icon.ico&quot;</span>)<br><br>dpg.setup_dearpygui()<br>dpg.show_viewport()<br>dpg.start_dearpygui()<br>dpg.destroy_context()<br></code></pre></td></tr></table></figure><ul><li><code>dpg.set_viewport_large_icon()</code>设置大图标</li><li><code>dpg.set_viewport_small_icon()</code>设置小图标</li></ul><hr><h2 id="组件：辅助"><a href="#组件：辅助" class="headerlink" title="组件：辅助"></a>组件：辅助</h2><h3 id="标签系统（tag）"><a href="#标签系统（tag）" class="headerlink" title="标签系统（tag）"></a>标签系统（tag）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    b0 = dpg.add_button(label=<span class="hljs-string">&quot;button 0&quot;</span>)<br>    b1 = dpg.add_button(tag=<span class="hljs-number">100</span>, label=<span class="hljs-string">&quot;Button 1&quot;</span>)<br>    dpg.add_button(tag=<span class="hljs-string">&quot;Btn2&quot;</span>, label=<span class="hljs-string">&quot;Button 2&quot;</span>)<br><br><span class="hljs-built_in">print</span>(b0)<br><span class="hljs-built_in">print</span>(b1)<br><span class="hljs-built_in">print</span>(dpg.get_item_label(<span class="hljs-string">&quot;Btn2&quot;</span>))<br></code></pre></td></tr></table></figure><ol><li><code>xxx = dpg.add_xxx(...)</code></li><li><code>unique_tag = dpg.generate_uuid()   # 在 create_context 前</code> <code>dpg.add_xxx(... , tag=xxx)</code></li></ol><ul><li>可以赋值给变量</li><li>可以添加tag（<code>dpg.get_item_label()</code>调用）</li><li>所有项目都必须具有关联的唯一ID(UUID)，该ID可以是整数或字符串</li><li>创建项目时会自动生成标签，如果以后与组件交互，则存储此标签</li><li><code>dpg.last_</code> { item(组件) , container(容器) , root(根) } <code>()</code> 获取最新的对应项</li></ul><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;Button 1&quot;</span>)<br>    dpg.add_button(label=<span class="hljs-string">&quot;Button 2&quot;</span>)<br>    <span class="hljs-keyword">with</span> dpg.group():<br>        dpg.add_button(label=<span class="hljs-string">&quot;Button 3&quot;</span>)<br>        dpg.add_button(label=<span class="hljs-string">&quot;Button 4&quot;</span>)<br>        <span class="hljs-keyword">with</span> dpg.group() <span class="hljs-keyword">as</span> group1:<br>            <span class="hljs-keyword">pass</span><br>dpg.add_button(label=<span class="hljs-string">&quot;Button 6&quot;</span>, parent=group1)<br>dpg.add_button(label=<span class="hljs-string">&quot;Button 5&quot;</span>, parent=group1)<br></code></pre></td></tr></table></figure><ul><li>在<code>with dpg.group():</code>内添加组件到组</li><li>也可以在外部<code>dpg.add_</code>…<code>(</code>…<code>parent=</code>容器名<code>)</code></li></ul><h3 id="编辑属性"><a href="#编辑属性" class="headerlink" title="编辑属性"></a>编辑属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">btn = dpg.add_button(label=<span class="hljs-string">&quot;Apply 2&quot;</span>)   <span class="hljs-comment">#创建</span><br>dpg.set_item_label(btn, <span class="hljs-string">&quot;Button 57&quot;</span>)   <span class="hljs-comment">#修改label(标签)</span><br>dpg.set_item_width(btn, <span class="hljs-number">200</span>)   <span class="hljs-comment">#修改高度</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>get_item_</code>配置</td><td align="center">控制其外观和行为的关键字(标签、回调、宽度、高度)</td></tr><tr><td align="left"><code>get_item_</code>状态</td><td align="center">反映其交互的关键字(可见、悬停、点击等)</td></tr><tr><td align="left"><code>get_item_</code>信息</td><td align="center">反映其信息的关键字(项目类型、子项、主题等)</td></tr></tbody></table><h3 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">button_callback</span>(<span class="hljs-params">sender, app_data, user_data</span>):<br>    ...<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    <span class="hljs-comment"># 按钮创建时创建回调</span><br>    dpg.add_button(label=<span class="hljs-string">&quot;Apply&quot;</span>, callback=button_callback, user_data=<span class="hljs-string">&quot;Some Data&quot;</span>)<br>    <span class="hljs-comment"># 按钮创建后创建回调</span><br>    btn = dpg.add_button(label=<span class="hljs-string">&quot;Apply 2&quot;</span>, )<br>    dpg.set_item_callback(btn, button_callback)<br>    dpg.set_item_user_data(btn, <span class="hljs-string">&quot;Some Extra User Data&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li><p>用<code>callback</code>赋值函数创建</p><blockquote><p>输入函数：同位置赋值</p></blockquote></li><li><p>用<code>dpg.set_item_callback</code>链接</p><blockquote><p>输入函数：<code>set_item_</code>赋值以链接</p></blockquote></li></ul><table><thead><tr><th align="left">输入值</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left">sender</td><td align="center">发送回调组件的id</td></tr><tr><td align="left">app_data</td><td align="center">大多数为组件当前值</td></tr><tr><td align="left">user_data</td><td align="center">（可选）传输自己的数据<br /><code>    dpg.add_</code>xxx<code>(</code>…<code>callback=</code>…<code>, user_data=</code>…<code>)</code><br /><code>dpg.set_item_user_data()</code></td></tr></tbody></table><ul><li>不在主线程上运行</li></ul><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> dearpygui.dearpygui <span class="hljs-keyword">as</span> dpg<br>dpg.create_context()<br><br>dpg.configure_app(manual_callback_management=<span class="hljs-literal">True</span>)   <span class="hljs-comment">#设置</span><br><br>dpg.create_viewport()<br>dpg.setup_dearpygui()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">sender, app_data, user_data</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Called on the main thread!&quot;</span>)<br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;Press me&quot;</span>, callback=callback)<br>    dpg.show_viewport()<br><br><span class="hljs-comment"># 主循环</span><br><span class="hljs-keyword">while</span> dpg.is_dearpygui_running():<br>     jobs = dpg.get_callback_queue()   <span class="hljs-comment"># 获取</span><br>     dpg.run_callbacks(jobs)   <span class="hljs-comment"># 运行</span><br>     dpg.render_dearpygui_frame()<br><br>dpg.destroy_context()<br></code></pre></td></tr></table></figure><ol><li>使用<code>dpg.configure_app(manual_callback_management=True)</code>设置</li><li>在主循环内用 xxx<code> = dpg.get_callback_queue()</code>获取</li><li>使用<code>dpg.run_callbacks(</code>xxx<code>)</code>运行</li></ol></blockquote><h3 id="组件值"><a href="#组件值" class="headerlink" title="组件值"></a>组件值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.window(width=<span class="hljs-number">300</span>):<br>    input_txt = dpg.add_input_text(<br>        label=<span class="hljs-string">&quot;InputTxt&quot;</span>,<br>        default_value=<span class="hljs-string">&quot;This is a default value!&quot;</span>,   <span class="hljs-comment"># 默认值</span><br>    )<br>    slider_float = dpg.add_slider_float(<br>        label=<span class="hljs-string">&quot;SliderFloat&quot;</span>,<br>        default_value=<span class="hljs-number">50.0</span>,   <span class="hljs-comment"># 默认值</span><br>    )<br>    dpg.add_slider_int(default_value=<span class="hljs-number">15</span>, tag=<span class="hljs-string">&quot;slider_int&quot;</span>)<br>    <span class="hljs-comment"># 获取值</span><br>    <span class="hljs-built_in">print</span>(dpg.get_value(input_txt))<br>    <span class="hljs-built_in">print</span>(dpg.get_value(slider_float))<br>    <br>dpg.set_value(<span class="hljs-string">&quot;slider_int&quot;</span>, <span class="hljs-number">40</span>)   <span class="hljs-comment"># 设置值</span><br></code></pre></td></tr></table></figure><ul><li>添加默认值：<code>default_value</code></li><li>获取值：<code>get_value(</code>赋值为组件的变量<code>)</code></li><li>设置值：<code>set_value(</code>tag<code>,</code>值<code>)</code></li></ul><h3 id="侦听与事件"><a href="#侦听与事件" class="headerlink" title="侦听与事件"></a>侦听与事件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">change_text</span>(<span class="hljs-params">sender, app_data</span>):<br>    <span class="hljs-keyword">if</span> dpg.is_item_hovered(<span class="hljs-string">&quot;text item&quot;</span>):   <span class="hljs-comment">#组件侦听</span><br>        dpg.set_value(<span class="hljs-string">&quot;text item&quot;</span>, <span class="hljs-string">f&quot;爬开!!&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        dpg.set_value(<span class="hljs-string">&quot;text item&quot;</span>, <span class="hljs-string">f&quot;把鼠标放我上面!&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.handler_registry():<br>    dpg.add_mouse_move_handler(callback=change_text)   <span class="hljs-comment">#鼠标移动侦听</span><br><br><span class="hljs-keyword">with</span> dpg.window(width=<span class="hljs-number">500</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;把鼠标放我上面!&quot;</span>, tag=<span class="hljs-string">&quot;text item&quot;</span>)   <span class="hljs-comment"># 添加文本</span><br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">change_text</span>(<span class="hljs-params">sender, app_data</span>):<br>    dpg.set_value(<span class="hljs-string">&quot;text item&quot;</span>, <span class="hljs-string">f&quot;Mouse Button ID: <span class="hljs-subst">&#123;app_data&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(width=<span class="hljs-number">500</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;Click me with any mouse button&quot;</span>, tag=<span class="hljs-string">&quot;text item&quot;</span>)<br>    <span class="hljs-keyword">with</span> dpg.item_handler_registry(tag=<span class="hljs-string">&quot;widget handler&quot;</span>) <span class="hljs-keyword">as</span> handler:   <span class="hljs-comment"># 监听器设置</span><br>        dpg.add_item_clicked_handler(callback=change_text)   <span class="hljs-comment"># 鼠标点击监听器并设置回调</span><br>    dpg.bind_item_handler_registry(<span class="hljs-string">&quot;text item&quot;</span>, <span class="hljs-string">&quot;widget handler&quot;</span>)   <span class="hljs-comment"># 监听器绑定</span><br></code></pre></td></tr></table></figure><ul><li>设置监听器<code>with dpg.item_handler_registry(tag=&quot;</code>监听器名<code>&quot;) as handler:</code></li><li>添加事件<code>dpg.add_item_</code>…<code>_handler(callback=</code>回调<code>)</code></li><li>绑定监听器<code>dpg.bind_item_handler_registry(&quot;</code>组件tag<code>&quot;, &quot;</code>监听器tag<code>&quot;)</code></li></ul><p>组件事件：</p><table><thead><tr><th align="center">名称</th><th align="center">译意</th></tr></thead><tbody><tr><td align="center">Activated</td><td align="center">激活</td></tr><tr><td align="center">Active</td><td align="center">活跃</td></tr><tr><td align="center">Clicked</td><td align="center">点击</td></tr><tr><td align="center">Deactivated</td><td align="center">停用</td></tr><tr><td align="center">Deactivated After Edited</td><td align="center">编辑后停用</td></tr><tr><td align="center">Focus</td><td align="center">聚焦</td></tr><tr><td align="center">Hover</td><td align="center">悬停</td></tr><tr><td align="center">Resize</td><td align="center">调整大小</td></tr><tr><td align="center">Toggled</td><td align="center">切换</td></tr><tr><td align="center">Visible</td><td align="center">可见</td></tr></tbody></table><p>全局事件：</p><table><thead><tr><th align="center">名称</th><th align="center">译意</th></tr></thead><tbody><tr><td align="center">——Keys——</td><td align="center">——以下为键盘的操作——</td></tr><tr><td align="center">Down</td><td align="center">按下</td></tr><tr><td align="center">Press</td><td align="center">按（Down+Release）</td></tr><tr><td align="center">Release</td><td align="center">释放</td></tr><tr><td align="center">——Mouse——</td><td align="center">——以下为鼠标的操作——</td></tr><tr><td align="center">Click</td><td align="center">单击</td></tr><tr><td align="center">Double Click</td><td align="center">双击</td></tr><tr><td align="center">Down</td><td align="center">按下</td></tr><tr><td align="center">Drag</td><td align="center">拖动</td></tr><tr><td align="center">Move</td><td align="center">移动</td></tr><tr><td align="center">Release</td><td align="center">抬起</td></tr><tr><td align="center">Wheel</td><td align="center">滚轮</td></tr></tbody></table><h3 id="添加和删除组件"><a href="#添加和删除组件" class="headerlink" title="添加和删除组件"></a>添加和删除组件</h3><blockquote><p> 添加:回调<code>dpg.add_</code>xxx</p></blockquote><blockquote><p>删除：<code>dpg.delete_item(&quot;</code>tag<code>&quot;)</code></p><p>注：删除容器时，默认情况下会删除该容器及其子项，除非<code>delete_item</code>中<code>children_only</code>设置为True时不会删除该容器</p></blockquote><h3 id="属性编辑"><a href="#属性编辑" class="headerlink" title="属性编辑"></a>属性编辑</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.window(width=<span class="hljs-number">500</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_button(enabled=<span class="hljs-literal">True</span>, label=<span class="hljs-string">&quot;Press me&quot;</span>, tag=<span class="hljs-string">&quot;item&quot;</span>)<br>    dpg.configure_item(<span class="hljs-string">&quot;item&quot;</span>, enabled=<span class="hljs-literal">False</span>, label=<span class="hljs-string">&quot;New Label&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li><code>dpg.configure_item</code>编辑属性</li><li><code>dpg.get_item_configuration</code>获取属性（字典类型）</li></ul><h3 id="值注册器"><a href="#值注册器" class="headerlink" title="值注册器"></a>值注册器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> dpg.value_registry():<br>    dpg.add_bool_value(default_value=<span class="hljs-literal">True</span>, tag=<span class="hljs-string">&quot;bool_value&quot;</span>)<br>    dpg.add_string_value(default_value=<span class="hljs-string">&quot;Default string&quot;</span>, tag=<span class="hljs-string">&quot;string_value&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_checkbox(label=<span class="hljs-string">&quot;Radio Button1&quot;</span>, source=<span class="hljs-string">&quot;bool_value&quot;</span>)<br>    dpg.add_checkbox(label=<span class="hljs-string">&quot;Radio Button2&quot;</span>, source=<span class="hljs-string">&quot;bool_value&quot;</span>)<br><br>    dpg.add_input_text(label=<span class="hljs-string">&quot;Text Input 1&quot;</span>, source=<span class="hljs-string">&quot;string_value&quot;</span>)<br>    dpg.add_input_text(label=<span class="hljs-string">&quot;Text Input 2&quot;</span>, source=<span class="hljs-string">&quot;string_value&quot;</span>, password=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><ul><li>在<code>with dpg.value_register():</code>中定义</li><li>定义：<code>dpg.add_</code>类型{ bool(布尔) , string(字符串) }<code>_value(default_value=</code>默认值<code>, tag=&quot;</code>tag<code>&quot;)</code></li><li>使用：<code>dpg.add_</code>xxx<code>(</code>…<code> , source=&quot;</code>对应的tag<code>&quot;)</code></li></ul><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> dearpygui.dearpygui <span class="hljs-keyword">as</span> dpg<br><br>dpg.create_context()<br><span class="hljs-comment"># start</span><br>dpg.show_documentation()<br>dpg.show_style_editor()<br>dpg.show_debug()<br>dpg.show_about()<br>dpg.show_metrics()<br>dpg.show_font_manager()<br>dpg.show_item_registry()<br><span class="hljs-comment"># end</span><br>dpg.create_viewport(title=<span class="hljs-string">&#x27;Custom Title&#x27;</span>, width=<span class="hljs-number">800</span>, height=<span class="hljs-number">600</span>)<br>dpg.setup_dearpygui()<br>dpg.show_viewport()<br>dpg.start_dearpygui()<br>dpg.destroy_context()<br></code></pre></td></tr></table></figure><p>其中几个：</p><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>dpg.show_style_editor()</code></td><td align="center">样式编辑器</td></tr><tr><td align="left"><code>dpg.show_item_registry()</code></td><td align="center">组件信息查看器</td></tr><tr><td align="left"><code>dpg.show_font_manager()</code></td><td align="center">字体管理器</td></tr><tr><td align="left"><code>dpg.show_metrics()</code></td><td align="center">性能监视器</td></tr></tbody></table><h3 id="渲染循环"><a href="#渲染循环" class="headerlink" title="渲染循环"></a>渲染循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> dearpygui.dearpygui <span class="hljs-keyword">as</span> dpg<br>dpg.create_context()<br>dpg.create_viewport(title=<span class="hljs-string">&#x27;Custom Title&#x27;</span>, width=<span class="hljs-number">600</span>, height=<span class="hljs-number">200</span>)<br>dpg.setup_dearpygui()<br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Example Window&quot;</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;Hello, world&quot;</span>)<br>dpg.show_viewport()<br><span class="hljs-comment"># here ↓</span><br><span class="hljs-keyword">while</span> dpg.is_dearpygui_running():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;每一帧都会运行这里&quot;</span>)<br>    dpg.render_dearpygui_frame()<br><span class="hljs-comment"># here ↑</span><br>dpg.destroy_context()<br></code></pre></td></tr></table></figure><p><code>dpg.is_dearpygui_running()</code>判断 dpg 是否运行<br><code>dpg.render_dearpygui_frame()</code>让 dpg 渲染一帧</p><hr><hr><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><hr><h2 id="简单组件"><a href="#简单组件" class="headerlink" title="简单组件"></a>简单组件</h2><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>dpg.add_button(label=&quot;</code>名称<code>&quot;)</code></td><td align="center">按钮</td></tr><tr><td align="left"><code>dpg.add_slider_</code>int&#x2F;float<code>(label=&quot;</code>名称<code>&quot;, width=限制)</code></td><td align="center">滑块</td></tr><tr><td align="left"><code>dpg.add_text(&quot;</code>xxx<code>&quot;)</code></td><td align="center">文本</td></tr><tr><td align="left"><code>dpg.add_input_text(label=&quot;</code>xxx<code>&quot;)</code></td><td align="center">文本输入</td></tr><tr><td align="left"><code>dpg.add_checkbox(label=&quot;</code>xx<code>&quot;, callback=</code>xxx<code>)</code></td><td align="center">复选框</td></tr><tr><td align="left"><code>dpg.add_color_picker(label=&quot;</code>xxx<code>&quot;, callback=</code>xxx<code>)</code></td><td align="center">颜色选择</td></tr></tbody></table><h2 id="容器和上下文管理器"><a href="#容器和上下文管理器" class="headerlink" title="容器和上下文管理器"></a>容器和上下文管理器</h2><table><thead><tr><th>核心代码</th><th>上下文管理器</th><th align="center">翻译</th></tr></thead><tbody><tr><td><code>add_table</code></td><td><code>with table(…):</code></td><td align="center">表格</td></tr><tr><td><code>add_table_row</code></td><td><code>with table_row(…):</code></td><td align="center">表格_行</td></tr><tr><td><code>add_window</code></td><td><code>with window(…):</code></td><td align="center">窗口</td></tr><tr><td><code>add_menu_bar</code></td><td><code>with menu_bar(…):</code></td><td align="center">菜单栏</td></tr><tr><td><code>add_child</code></td><td><code>with child(…):</code></td><td align="center">子项</td></tr><tr><td><code>add_clipper</code></td><td><code>with clipper(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_collapsing_header</code></td><td><code>with collapsing_header(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_colormap_registry</code></td><td><code>with colormap_registry(…):</code></td><td align="center">color map 注册表 <code>？</code></td></tr><tr><td><code>add_group</code></td><td><code>with group(…):</code></td><td align="center">组</td></tr><tr><td><code>add_node</code></td><td><code>with node(…):</code></td><td align="center">节点 <code>？</code></td></tr><tr><td><code>add_node_attribute</code></td><td><code>with node_attribute(…):</code></td><td align="center">节点属性 <code>？</code></td></tr><tr><td><code>add_node_editor</code></td><td><code>with node_editor(…):</code></td><td align="center">节点编辑器 <code>？</code></td></tr><tr><td><code>add_staging_container</code></td><td><code>with staging_container(…):</code></td><td align="center">staging 容器 <code>？</code></td></tr><tr><td><code>add_tab_bar</code></td><td><code>with tab_bar(…):</code></td><td align="center">标签栏&#x2F;选项卡栏</td></tr><tr><td><code>add_tab</code></td><td><code>with tab(…):</code></td><td align="center">标签&#x2F;选项卡</td></tr><tr><td><code>add_tree_node</code></td><td><code>with tree_node(…):</code></td><td align="center">树状节点<code>？</code></td></tr><tr><td><code>add_tooltip</code></td><td><code>with tooltip(…):</code></td><td align="center">工具提示</td></tr><tr><td><code>add_popup</code></td><td><code>with popup(…):</code></td><td align="center">弹出</td></tr><tr><td><code>add_drag_payload</code></td><td><code>with payload(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_drawlist</code></td><td><code>with drawlist(…):</code></td><td align="center">绘图列表</td></tr><tr><td><code>add_draw_layer</code></td><td><code>with draw_layer(…):</code></td><td align="center">绘图层</td></tr><tr><td><code>add_viewport_drawlist</code></td><td><code>with viewport_drawlist(…):</code></td><td align="center">视口绘图列表？&#96;</td></tr><tr><td><code>add_file_dialog</code></td><td><code>with file_dialog(…):</code></td><td align="center">文件对话框</td></tr><tr><td><code>add_filter_set</code></td><td><code>with filter_set(…):</code></td><td align="center">筛选器</td></tr><tr><td><code>add_font</code></td><td><code>with font(…):</code></td><td align="center">字体</td></tr><tr><td><code>add_font_registry</code></td><td><code>with font_registry(…):</code></td><td align="center">字体注册</td></tr><tr><td><code>add_handler_registry</code></td><td><code>with handler_registry(…):</code></td><td align="center">handler 注册器<code>？</code></td></tr><tr><td><code>add_plot</code></td><td><code>with plot(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_subplots</code></td><td><code>with subplots(…):</code></td><td align="center">子plot<code>？</code></td></tr><tr><td><code>add_texture_registry</code></td><td><code>with texture_registry(…):</code></td><td align="center">纹理注册器</td></tr><tr><td><code>add_value_registry</code></td><td><code>with value_registry(…):</code></td><td align="center">值注册器</td></tr><tr><td><code>add_theme</code></td><td><code>with theme(…):</code></td><td align="center">主题</td></tr><tr><td><code>add_item_pool</code></td><td><code>with item_pool(…):</code></td><td align="center">组件池<code>？</code></td></tr><tr><td><code>add_template_registry</code></td><td><code>with template_registry(…):</code></td><td align="center">模板注册器</td></tr></tbody></table><p>demo:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Main&quot;</span>):<br>    <span class="hljs-keyword">with</span> dpg.menu_bar():<br>        <span class="hljs-keyword">with</span> dpg.menu(label=<span class="hljs-string">&quot;Themes&quot;</span>):<br>            dpg.add_menu_item(label=<span class="hljs-string">&quot;Dark&quot;</span>)<br>            dpg.add_menu_item(label=<span class="hljs-string">&quot;Light&quot;</span>)<br>            dpg.add_menu_item(label=<span class="hljs-string">&quot;Classic&quot;</span>)<br>            <span class="hljs-keyword">with</span> dpg.menu(label=<span class="hljs-string">&quot;Other Themes&quot;</span>):<br>                dpg.add_menu_item(label=<span class="hljs-string">&quot;Purple&quot;</span>)<br>                dpg.add_menu_item(label=<span class="hljs-string">&quot;Gold&quot;</span>)<br>                dpg.add_menu_item(label=<span class="hljs-string">&quot;Red&quot;</span>)<br>        <span class="hljs-keyword">with</span> dpg.menu(label=<span class="hljs-string">&quot;Tools&quot;</span>):<br>            dpg.add_menu_item(label=<span class="hljs-string">&quot;Show Logger&quot;</span>)<br>            dpg.add_menu_item(label=<span class="hljs-string">&quot;Show About&quot;</span>)<br>        <span class="hljs-keyword">with</span> dpg.menu(label=<span class="hljs-string">&quot;Oddities&quot;</span>):<br>            dpg.add_button(label=<span class="hljs-string">&quot;A Button&quot;</span>)<br>            dpg.add_simple_plot(label=<span class="hljs-string">&quot;Menu plot&quot;</span>, default_value=(<span class="hljs-number">0.3</span>, <span class="hljs-number">0.9</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">8.9</span>), height=<span class="hljs-number">80</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Python">w = dpg.add_window(label=<span class="hljs-string">&quot;Main&quot;</span>)<br>mb = dpg.add_menu_bar(parent=w)<br>themes = dpg.add_menu(label=<span class="hljs-string">&quot;Themes&quot;</span>, parent=mb)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Dark&quot;</span>, parent=themes)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Light&quot;</span>, parent=themes)<br>other_themes = dpg.add_menu(label=<span class="hljs-string">&quot;Other Themes&quot;</span>, parent=themes)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Purple&quot;</span>, parent=other_themes)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Gold&quot;</span>, parent=other_themes)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Red&quot;</span>, parent=other_themes)<br>tools = dpg.add_menu(label=<span class="hljs-string">&quot;Tools&quot;</span>, parent=mb)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Show Logger&quot;</span>, parent=tools)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Show About&quot;</span>, parent=tools)<br>oddities = dpg.add_menu(label=<span class="hljs-string">&quot;Oddities&quot;</span>, parent=mb)<br>dpg.add_button(label=<span class="hljs-string">&quot;A Button&quot;</span>, parent=oddities)<br>dpg.add_simple_plot(label=<span class="hljs-string">&quot;A menu plot&quot;</span>, default_value=(<span class="hljs-number">0.3</span>, <span class="hljs-number">0.9</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">8.9</span>), height=<span class="hljs-number">80</span>, parent=oddities)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Python">dpg.add_window(label=<span class="hljs-string">&quot;Main&quot;</span>, tag=<span class="hljs-string">&quot;w&quot;</span>)<br>dpg.add_menu_bar(parent=<span class="hljs-string">&quot;w&quot;</span>, tag=<span class="hljs-string">&quot;mb&quot;</span>)<br>dpg.add_menu(label=<span class="hljs-string">&quot;Themes&quot;</span>, parent=<span class="hljs-string">&quot;mb&quot;</span>, tag=<span class="hljs-string">&quot;themes&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Dark&quot;</span>, parent=<span class="hljs-string">&quot;themes&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Light&quot;</span>, parent=<span class="hljs-string">&quot;themes&quot;</span>)<br>dpg.add_menu(label=<span class="hljs-string">&quot;Other Themes&quot;</span>, parent=<span class="hljs-string">&quot;themes&quot;</span>, tag=<span class="hljs-string">&quot;other_themes&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Purple&quot;</span>, parent=<span class="hljs-string">&quot;other_themes&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Gold&quot;</span>, parent=<span class="hljs-string">&quot;other_themes&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Red&quot;</span>, parent=<span class="hljs-string">&quot;other_themes&quot;</span>)<br>dpg.add_menu(label=<span class="hljs-string">&quot;Tools&quot;</span>, parent=<span class="hljs-string">&quot;mb&quot;</span>, tag=<span class="hljs-string">&quot;tools&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Show Logger&quot;</span>, parent=<span class="hljs-string">&quot;tools&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Show About&quot;</span>, parent=<span class="hljs-string">&quot;tools&quot;</span>)<br>dpg.add_menu(label=<span class="hljs-string">&quot;Oddities&quot;</span>, parent=<span class="hljs-string">&quot;mb&quot;</span>, tag=<span class="hljs-string">&quot;Oddities&quot;</span>)<br>dpg.add_button(label=<span class="hljs-string">&quot;A Button&quot;</span>, parent=<span class="hljs-string">&quot;Oddities&quot;</span>)<br>dpg.add_simple_plot(label=<span class="hljs-string">&quot;A menu plot&quot;</span>, default_value=(<span class="hljs-number">0.3</span>, <span class="hljs-number">0.9</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">8.9</span>), height=<span class="hljs-number">80</span>, parent=<span class="hljs-string">&quot;Oddities&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Python">dpg.push_container_stack(dpg.add_window(label=<span class="hljs-string">&quot;Main&quot;</span>))<br>dpg.push_container_stack(dpg.add_menu_bar())<br>dpg.push_container_stack(dpg.add_menu(label=<span class="hljs-string">&quot;Themes&quot;</span>))<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Dark&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Light&quot;</span>)<br>dpg.pop_container_stack()<br>dpg.push_container_stack(dpg.add_menu(label=<span class="hljs-string">&quot;Tools&quot;</span>))<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Show Logger&quot;</span>)<br>dpg.add_menu_item(label=<span class="hljs-string">&quot;Show About&quot;</span>)<br>dpg.pop_container_stack()<br><span class="hljs-comment"># remove menu_bar from container stack</span><br>dpg.pop_container_stack()<br><span class="hljs-comment"># remove window from container stack</span><br>dpg.pop_container_stack()<br>&lt;/details&gt;<br></code></pre></td></tr></table></figure><h2 id="容器槽"><a href="#容器槽" class="headerlink" title="容器槽"></a>容器槽</h2><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>is_item_container</code></td><td align="center">检查是否为容器类型</td></tr><tr><td align="left"><code>get_item_slot</code></td><td align="center">返回项目的槽</td></tr><tr><td align="left"><code>get_item_parent</code></td><td align="center">返回项目的父UUID</td></tr><tr><td align="left"><code>get_item_children</code></td><td align="center">返回项的子项</td></tr><tr><td align="left"><code>reorder_items</code></td><td align="center">在一次调用中重新排序子项</td></tr><tr><td align="left"><code>move_item_up</code></td><td align="center">将组件在其槽内上移</td></tr><tr><td align="left"><code>move_item_down</code></td><td align="center">将组件在其槽内下移</td></tr><tr><td align="left"><code>move_item</code></td><td align="center">在容器之间移动组件</td></tr><tr><td align="left"><code>set_item_children</code></td><td align="center">将一个舞台移到一个组件的子槽中</td></tr></tbody></table><h2 id="绘图API"><a href="#绘图API" class="headerlink" title="绘图API"></a>绘图API</h2><ul><li><p>绘图命令可以添加到<code>DrawList</code>、<code>VIEPORT_DrawList</code>或窗口等容器中</p></li><li><p>创建一个绘图列表项 <code>add_drawlist</code> ，可以调用绘制命令来添加项</p></li><li><p>坐标系是右手坐标系，原点位于左上角，x轴指向左侧，y轴指向下方，z轴指向屏幕</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;xxx&quot;</span>):<br>    <span class="hljs-keyword">with</span> dpg.drawlist(width=xxx, height=xxx):<br>        ...<br></code></pre></td></tr></table></figure><h3 id="图层"><a href="#图层" class="headerlink" title="图层"></a>图层</h3><ul><li>在<code>with dpg.draw_layer():</code>中添加内容</li><li><code>dpg.draw_layer():</code>内可添加tag</li></ul><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><ul><li><p>可以显示PNG、JPEG或BMP类型的图像</p></li><li><p>使用DRAW_IMAGE添加图像。</p></li></ul><p>使用 <strong>pmin</strong> 和 <strong>pmax</strong> 我们可以定义矩形的左上角和右下角区域</p><p>图像将缩放以适合指定区域。</p><p>使用 <code>uv_min</code> 和 <code>uv_max</code> 我们可以指定规格化的纹理坐标，以仅使用图像上区域的一部分。默认为<code>uv_min= [0,0]</code> 和<code>UV_max= [1,1]</code>将在<code>UV_MIN=[0,0]</code>时显示整个图像,<code>UV_max= [0.5,0.5]</code>将仅显示绘图的第一个四分之一。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 加载图片</span><br>width, height, channels, data = dpg.load_image(<span class="hljs-string">&#x27;xxx.png&#x27;</span>) <span class="hljs-comment"># 0: width, 1: height, 2: channels, 3: data</span><br><span class="hljs-comment">#注册图片</span><br><span class="hljs-keyword">with</span> dpg.texture_registry():<br>    dpg.add_static_texture(width, height, data, tag=<span class="hljs-string">&quot;image_id&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    <span class="hljs-keyword">with</span> dpg.drawlist(width=<span class="hljs-number">700</span>, height=<span class="hljs-number">700</span>):<br>        <span class="hljs-comment"># 绘制*3</span><br>        dpg.draw_image(<span class="hljs-string">&quot;image_id&quot;</span>, (<span class="hljs-number">0</span>, <span class="hljs-number">400</span>), (<span class="hljs-number">200</span>, <span class="hljs-number">600</span>), uv_min=(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), uv_max=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))<br>        dpg.draw_image(<span class="hljs-string">&quot;image_id&quot;</span>, (<span class="hljs-number">400</span>, <span class="hljs-number">300</span>), (<span class="hljs-number">600</span>, <span class="hljs-number">500</span>), uv_min=(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), uv_max=(<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>))<br>        dpg.draw_image(<span class="hljs-string">&quot;image_id&quot;</span>, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-number">300</span>, <span class="hljs-number">300</span>), uv_min=(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), uv_max=(<span class="hljs-number">2.5</span>, <span class="hljs-number">2.5</span>))<br></code></pre></td></tr></table></figure><ol><li>加载图片：四个变量 <code>= dpg.load_image(&#39;</code>图片路径<code>&#39;)</code></li><li>注册图片：<code>with dpg.texture_registry():</code>\n <code>dpg.add_static_texture(</code>前面四个变量<code>, tag=&quot;</code>图片id<code>&quot;)</code></li><li>使用图片：<code> dpg.draw_image(&quot;</code>图片id<code>&quot;,</code>左上、右下位置，uv规格化<code>)</code></li></ol><h3 id="窗口与视口"><a href="#窗口与视口" class="headerlink" title="窗口与视口"></a>窗口与视口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.viewport_drawlist():<br>    dpg.draw_circle((<span class="hljs-number">100</span>, <span class="hljs-number">100</span>), <span class="hljs-number">25</span>, color=(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>))   <span class="hljs-comment"># 置顶</span><br>    <br>dpg.add_viewport_drawlist(front=<span class="hljs-literal">False</span>, tag=<span class="hljs-string">&quot;viewport_back&quot;</span>)<br>dpg.draw_circle((<span class="hljs-number">200</span>, <span class="hljs-number">200</span>), <span class="hljs-number">25</span>, color=(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>), parent=<span class="hljs-string">&quot;viewport_back&quot;</span>)   <span class="hljs-comment"># 置底</span><br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, width=<span class="hljs-number">300</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;Move the window over the drawings to see the effects.&quot;</span>, wrap=<span class="hljs-number">300</span>)<br>    dpg.draw_circle((<span class="hljs-number">100</span>, <span class="hljs-number">100</span>), <span class="hljs-number">25</span>, color=(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>))   <span class="hljs-comment"># 窗口内</span><br></code></pre></td></tr></table></figure><ul><li>窗口内：跟随窗口</li><li>一般<code>dpg.viewport_drawlist</code>内：置顶</li><li>带有<code>viewport_back</code>tag的<code>dpg.viewport_drawlist</code>内：置底</li></ul><h2 id="文件和目录选择器"><a href="#文件和目录选择器" class="headerlink" title="文件和目录选择器"></a>文件和目录选择器</h2><p>(dpg内部)</p><p>可用于选择单个文件、多个文件或目录，当用户单击 <strong>Ok</strong> 按钮，则运行对话框的回调。</p><p>信息通过APP_DATA参数传递，例如：文件路径 文件名 当前路径 当前过滤器(文件类型过滤器)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">sender, app_data</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Sender: &quot;</span>, sender)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;App Data: &quot;</span>, app_data)<br><br>dpg.add_file_dialog(directory_selector=<span class="hljs-literal">True</span>, show=<span class="hljs-literal">False</span>, callback=callback, tag=<span class="hljs-string">&quot;file_dialog_id&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, width=<span class="hljs-number">800</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;Directory Selector&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: dpg.show_item(<span class="hljs-string">&quot;file_dialog_id&quot;</span>))<br></code></pre></td></tr></table></figure><blockquote><p>Sender:  xxx</p><p>App Data:  </p><p>{‘file_path_name’: ‘xxx’,      —文件路径</p><p>‘file_name’: ‘xxx’,      —文件名</p><p>‘current_path’: ‘xxx’,      —当前路径</p><p>‘current_filter’: ‘xxx’,      —当前过滤器</p><p>‘min_size’: [xxx, xxx],      —最大大小</p><p>‘max_size’: [xxx, xxx],      —最小大小</p><p>‘selections’: {‘xxx’: ‘xxx’}}     —选择该文件&#x2F;目录的相对路径和绝对路径</p></blockquote><ul><li><code>callback=lambda: dpg.show_item(&quot;file_dialog_id&quot;)</code></li></ul><h3 id="扩展名"><a href="#扩展名" class="headerlink" title="扩展名"></a>扩展名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.file_dialog(directory_selector=<span class="hljs-literal">False</span>, show=<span class="hljs-literal">False</span>, callback=callback, <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;file_dialog_id&quot;</span>):<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.*&quot;</span>)<br>    dpg.add_file_extension(<span class="hljs-string">&quot;&quot;</span>, color=(<span class="hljs-number">150</span>, <span class="hljs-number">255</span>, <span class="hljs-number">150</span>, <span class="hljs-number">255</span>))<br>    dpg.add_file_extension(<span class="hljs-string">&quot;Source files (*.cpp *.h *.hpp)&#123;.cpp,.h,.hpp&#125;&quot;</span>, color=(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>))<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.h&quot;</span>, color=(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>), custom_text=<span class="hljs-string">&quot;[header]&quot;</span>)<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.py&quot;</span>, color=(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>), custom_text=<span class="hljs-string">&quot;[Python]&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>懒得写了，自己看 :D</li></ul><h3 id="加点别的"><a href="#加点别的" class="headerlink" title="加点别的"></a>加点别的</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> dearpygui.dearpygui <span class="hljs-keyword">as</span> dpg<br>dpg.create_context()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">sender, app_data</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Sender: &quot;</span>, sender)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;App Data: &quot;</span>, app_data)<br><span class="hljs-keyword">with</span> dpg.file_dialog(directory_selector=<span class="hljs-literal">False</span>, show=<span class="hljs-literal">False</span>, callback=callback, tag=<span class="hljs-string">&quot;file_dialog_tag&quot;</span>):<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.*&quot;</span>)<br>    dpg.add_file_extension(<span class="hljs-string">&quot;&quot;</span>, color=(<span class="hljs-number">150</span>, <span class="hljs-number">255</span>, <span class="hljs-number">150</span>, <span class="hljs-number">255</span>))<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.cpp&quot;</span>, color=(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>))<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.h&quot;</span>, color=(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>))<br>    dpg.add_file_extension(<span class="hljs-string">&quot;.py&quot;</span>, color=(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>))<br><br>    <span class="hljs-keyword">with</span> dpg.group(horizontal=<span class="hljs-literal">True</span>):<br>        dpg.add_button(label=<span class="hljs-string">&quot;fancy file dialog&quot;</span>)<br>        dpg.add_button(label=<span class="hljs-string">&quot;file&quot;</span>)<br>        dpg.add_button(label=<span class="hljs-string">&quot;dialog&quot;</span>)<br>    dpg.add_date_picker()<br>    <span class="hljs-keyword">with</span> dpg.child_window(height=<span class="hljs-number">100</span>):<br>        dpg.add_selectable(label=<span class="hljs-string">&quot;bookmark 1&quot;</span>)<br>        dpg.add_selectable(label=<span class="hljs-string">&quot;bookmark 2&quot;</span>)<br>        dpg.add_selectable(label=<span class="hljs-string">&quot;bookmark 3&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, width=<span class="hljs-number">800</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;File Selector&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: dpg.show_item(<span class="hljs-string">&quot;file_dialog_tag&quot;</span>))<br>dpg.create_viewport(title=<span class="hljs-string">&#x27;Custom Title&#x27;</span>, width=<span class="hljs-number">800</span>, height=<span class="hljs-number">600</span>)<br>dpg.setup_dearpygui()<br>dpg.show_viewport()<br>dpg.start_dearpygui()<br>dpg.destroy_context()<br></code></pre></td></tr></table></figure><ul><li>在里面加组或子窗口</li></ul><h3 id="选择多个文件"><a href="#选择多个文件" class="headerlink" title="选择多个文件"></a>选择多个文件</h3><p>通过在<code>dpg.file_dialog</code>设置file_count（数量限制）关键字来选择多个文件</p><p>Ctrl&#x2F;Shift 选择</p><h2 id="过滤器-x2F-搜寻"><a href="#过滤器-x2F-搜寻" class="headerlink" title="过滤器&#x2F;搜寻"></a>过滤器&#x2F;搜寻</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">sender, filter_string</span>):<br>    dpg.set_value(<span class="hljs-string">&quot;filter_id&quot;</span>, filter_string)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;about&quot;</span>, width =<span class="hljs-number">500</span>, height=<span class="hljs-number">300</span>):<br>    dpg.add_input_text(label=<span class="hljs-string">&quot;Filter (inc, -exc)&quot;</span>, callback=callback)<br>    <span class="hljs-keyword">with</span> dpg.filter_set(<span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;filter_id&quot;</span>):<br>        dpg.add_text(<span class="hljs-string">&quot;aaa1.c&quot;</span>, filter_key=<span class="hljs-string">&quot;aaa1.c&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;bbb1.c&quot;</span>, filter_key=<span class="hljs-string">&quot;bbb1.c&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;ccc1.c&quot;</span>, filter_key=<span class="hljs-string">&quot;ccc1.c&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;aaa2.cpp&quot;</span>, filter_key=<span class="hljs-string">&quot;aaa2.cpp&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;bbb2.cpp&quot;</span>, filter_key=<span class="hljs-string">&quot;bbb2.cpp&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;ccc2.cpp&quot;</span>, filter_key=<span class="hljs-string">&quot;ccc2.cpp&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;abc.h&quot;</span>, filter_key=<span class="hljs-string">&quot;abc.h&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br>        dpg.add_text(<span class="hljs-string">&quot;hello, world&quot;</span>, filter_key=<span class="hljs-string">&quot;hello, world&quot;</span>, bullet=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><blockquote><p>设置：</p><p><code> with dpg.filter_set(id=&quot;</code>id<code>&quot;):</code></p><p><code>dpg.add_</code>xxx<code>(</code>…<code>, filter_key=&quot;</code>xxx<code>&quot;, bullet=True)</code></p></blockquote><blockquote><p>使用：</p><p><code>dpg.add_input_text(</code>…<code>, callback=xxx)</code></p><p>callback:</p><p><code>def </code>xxx<code>(</code>…<code>,filter_string):</code></p><p><code> dpg.set_value(&quot;</code>id<code>&quot;, filter_string)</code></p></blockquote><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>默认字体：ProggyClean.ttf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 注册字体</span><br><span class="hljs-keyword">with</span> dpg.font_registry():<br>    <span class="hljs-comment"># .ttf or .otf file</span><br>    default_font = dpg.add_font(<span class="hljs-string">&quot;xxx.otf&quot;</span>, <span class="hljs-number">20</span>)<br>    second_font = dpg.add_font(<span class="hljs-string">&quot;xxx.otf&quot;</span>, <span class="hljs-number">10</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Font Example&quot;</span>, height=<span class="hljs-number">200</span>, width=<span class="hljs-number">200</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;Default font&quot;</span>)<br>    b2 = dpg.add_button(label=<span class="hljs-string">&quot;Secondary font&quot;</span>)<br>    dpg.add_button(label=<span class="hljs-string">&quot;default&quot;</span>)<br><br>    dpg.bind_font(default_font)   <span class="hljs-comment"># 设为默认</span><br>    dpg.bind_item_font(b2, second_font)   <span class="hljs-comment"># 专门指定</span><br></code></pre></td></tr></table></figure><blockquote><p>注册：</p><p>默认情况下，仅添加基本拉丁语和拉丁语补充字形(0x0020-0x00FF)</p><p><code>with dpg.font_registry():</code></p><p>xxx<code> = dpg.add_font(&quot;</code>path<code>&quot;, </code>pixel[px]<code>)</code></p><hr><p>添加其他字形：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> dpg.font(<span class="hljs-string">&quot;xxx.otf&quot;</span>, <span class="hljs-number">20</span>) <span class="hljs-keyword">as</span> font:<br>        <span class="hljs-comment"># 添加默认字形</span><br>        dpg.add_font_range_hint(dpg.mvFontRangeHint_Default)<br>        <span class="hljs-comment"># 其他字形</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Japanese</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Korean</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Chinese_Full</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Chinese_Simplified_Common</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Cyrillic</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Thai</span><br>        <span class="hljs-comment">#        mvFontRangeHint_Vietnamese</span><br>        dpg.add_font_range_hint(dpg.mvFontRangeHint_Japanese)<br><br>        <span class="hljs-comment"># 添加区间字形</span><br>        dpg.add_font_range(<span class="hljs-number">0x3100</span>, <span class="hljs-number">0x3ff0</span>)<br><br>        <span class="hljs-comment"># 添加指定字形</span><br>        dpg.add_font_chars([<span class="hljs-number">0x3105</span>, <span class="hljs-number">0x3107</span>, <span class="hljs-number">0x3108</span>])<br><br>        <span class="hljs-comment"># 刷新区间字形</span><br>        dpg.add_char_remap(<span class="hljs-number">0x3084</span>, <span class="hljs-number">0x0025</span>)<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>设置：</p><p>设为默认：<code>dpg.bind_font(</code>xxx<code>)</code> </p><p>专门指定：<code>dpg.bind_item_font(</code>item<code>, </code>xxx<code>)</code></p></blockquote><p>附：<a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters">Unicode Characters</a></p><h2 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h2><p>视口菜单栏：<code>with dpg.viewport_menu_bar():</code></p><p>窗口菜单栏：<code>with dpg.menu_bar():</code></p><p>里面的内容：</p><blockquote><p><code>with dpg.menu(label=&quot;</code>xxx<code>&quot;):</code></p><blockquote><p><code>dpg.add_menu_item</code></p><p>其他组件也可以</p></blockquote></blockquote><blockquote><p><code>dpg.add_menu_item(label=&quot;</code>xxx<code>&quot;, callback=</code>xxx<code>)</code></p></blockquote><h2 id="node-编辑器"><a href="#node-编辑器" class="headerlink" title="node 编辑器"></a>node 编辑器</h2><p>它有4个主要组成部分</p><blockquote><p>node编辑器:node所在的区域</p><p>node:包含属性的自由浮动“窗口”</p><p>属性:带有Pins的小部件集合，用于创建指向&#x2F;来自的链接，可以是输入、输出或静态</p><p>链接:属性之间的连接</p></blockquote><p>属性可以包含任何UI项。当用户单击并拖动node的属性时，将运行编辑器的回调。DPG将属性的标记通过 <em>app_data</em> 回调参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 连接属性时运行回调</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">link_callback</span>(<span class="hljs-params">sender, app_data</span>):<br>    <span class="hljs-comment"># app_data -&gt; (link_id1, link_id2)</span><br>    dpg.add_node_link(app_data[<span class="hljs-number">0</span>], app_data[<span class="hljs-number">1</span>], parent=sender)<br><br><span class="hljs-comment"># 断开属性时运行回调</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delink_callback</span>(<span class="hljs-params">sender, app_data</span>):<br>    <span class="hljs-comment"># app_data -&gt; link_id</span><br>    dpg.delete_item(app_data)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, width=<span class="hljs-number">400</span>, height=<span class="hljs-number">400</span>):<br>    <span class="hljs-keyword">with</span> dpg.node_editor(callback=link_callback, delink_callback=delink_callback):<br>        <span class="hljs-keyword">with</span> dpg.node(label=<span class="hljs-string">&quot;Node 1&quot;</span>):<br>            <span class="hljs-keyword">with</span> dpg.node_attribute(label=<span class="hljs-string">&quot;Node A1&quot;</span>):<br>                dpg.add_input_float(label=<span class="hljs-string">&quot;F1&quot;</span>, width=<span class="hljs-number">150</span>)<br><br>            <span class="hljs-keyword">with</span> dpg.node_attribute(label=<span class="hljs-string">&quot;Node A2&quot;</span>, attribute_type=dpg.mvNode_Attr_Output):<br>                dpg.add_input_float(label=<span class="hljs-string">&quot;F2&quot;</span>, width=<span class="hljs-number">150</span>)<br><br>        <span class="hljs-keyword">with</span> dpg.node(label=<span class="hljs-string">&quot;Node 2&quot;</span>):<br>            <span class="hljs-keyword">with</span> dpg.node_attribute(label=<span class="hljs-string">&quot;Node A3&quot;</span>):<br>                dpg.add_input_float(label=<span class="hljs-string">&quot;F3&quot;</span>, width=<span class="hljs-number">200</span>)<br><br>            <span class="hljs-keyword">with</span> dpg.node_attribute(label=<span class="hljs-string">&quot;Node A4&quot;</span>, attribute_type=dpg.mvNode_Attr_Output):<br>                dpg.add_input_float(label=<span class="hljs-string">&quot;F4&quot;</span>, width=<span class="hljs-number">200</span>)<br></code></pre></td></tr></table></figure><blockquote><p>在<code>with dpg.node_editor(callback=link_callback, delink_callback=delink_callback):</code>内添加内容<br>在<code>with dpg.node(label=&quot;</code>xxx<code>&quot;):</code>内添加node<br>在<code>with dpg.node_attribute(label=&quot;</code>xxx<code>&quot;):</code>内添加属性</p></blockquote><h3 id="选择查询"><a href="#选择查询" class="headerlink" title="选择查询"></a>选择查询</h3><p>检索选定的node和链接(并使用以下命令清除此选择)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">dpg.get_selected_nodes(editor_id)<br>dpg.get_selected_links(editor_id)<br>dpg.clear_selected_nodes(editor_id)<br>dpg.clear_selected_links(editor_id)<br></code></pre></td></tr></table></figure><h3 id="属性类型"><a href="#属性类型" class="headerlink" title="属性类型"></a>属性类型</h3><p>以下常量可用于 attribute_type 属性的参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">mvNode_Attr_Input <span class="hljs-comment"># (默认)</span><br>mvNode_Attr_Output<br>mvNode_Attr_Static<br></code></pre></td></tr></table></figure><h3 id="属性形状"><a href="#属性形状" class="headerlink" title="属性形状"></a>属性形状</h3><p>以下常量可用于shape节点属性的参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">mvNode_PinShape_Circle<br>mvNode_PinShape_CircleFilled <span class="hljs-comment">#(默认)</span><br>mvNode_PinShape_Triangle<br>mvNode_PinShape_TriangleFilled<br>mvNode_PinShape_Quad<br>mvNode_PinShape_QuadFilled<br></code></pre></td></tr></table></figure><h2 id="绘制图表"><a href="#绘制图表" class="headerlink" title="绘制图表"></a>绘制图表</h2><p>地块由多个组件组成。</p><p>Y轴：这是一个容器，是添加到绘图中的所有数据系列的父级。打印一次可以有多个Y轴(最多3个)。</p><p>X轴：这是x数据刻度(只允许1个x轴)。</p><p>系列：要显示的数据的容器。需要将数据系列添加为要在绘图上显示的Y轴的子项。有许多不同类型的数据系列可用。系列还可以包含当右键单击图例中的系列标签作为上下文菜单时将显示的UI项</p><p>图例(可选)：</p><p>这是一个普通的图例，ALOS允许用户切换哪些数据序列是可见的。</p><p>绘图具有一些内置功能：</p><blockquote><p>切换数据系列：单击所需数据系列的图例名称进行切换<br>设置：双击鼠标右键<br>平移绘图：在绘图上单击并拖动<br>平移轴：在轴上单击并拖动<br>缩放：滚动鼠标滚轮<br>缩放轴：悬停轴和滚动鼠标滚轮<br>缩放区域：单击鼠标右键并拖动<br>最大化显示：双击<br>缩放轴区域：按住Shift键并单击鼠标右键并拖动</p></blockquote><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">sindatax = []<br>sindatay = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">500</span>):<br>    sindatax.append(i / <span class="hljs-number">1000</span>)<br>    sindatay.append(<span class="hljs-number">0.5</span> + <span class="hljs-number">0.5</span> * sin(<span class="hljs-number">50</span> * i / <span class="hljs-number">1000</span>))<br></code></pre></td></tr></table></figure><p>使用<code>.append()</code></p><p>创建视图：<code>with dpg.plot(label=&quot;</code>xxx<code>&quot;, height=</code>xxx<code>, width=</code>xxx<code>):</code></p><p>可选择创建图例：<code>dpg.add_plot_legend()</code></p><p>创建x、y轴：<code>dpg.add_plot_axis(dpg.mvXAxis, label=&quot;x&quot;)</code>和<code>dpg.add_plot_axis(dpg.mvYAxis, label=&quot;y&quot;, tag=&quot;y_axis&quot;)</code></p><p>添加系列（内容，可添加多个）：<code>dpg.add_line_series(</code>数据（前面的sindatax和sindatay）<code>, label=&quot;</code>x<code>&quot;, parent=&quot;</code>y<code>&quot;)</code></p><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><ul><li><code>dpg.add_line_series</code>中添加tag</li><li><code>dpg.set_value(&#39;</code>tag<code>&#39;, [</code>x和y<code>])</code></li><li><code>dpg.set_item_label(&#39;</code>tag<code>&#39;, &quot;</code>值<code>&quot;)</code></li></ul><h3 id="轴限制"><a href="#轴限制" class="headerlink" title="轴限制"></a>轴限制</h3><p>以下命令可用于控制地块轴限制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">set_axis_limits(...)<br>get_axis_limits(...)<br>set_axis_limits_auto(...)<br>fit_axis_data(...)<br></code></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, width=<span class="hljs-number">400</span>, height=<span class="hljs-number">400</span>):<br>    <span class="hljs-keyword">with</span> dpg.group(horizontal=<span class="hljs-literal">True</span>):<br>        dpg.add_button(label=<span class="hljs-string">&quot;fit y&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: dpg.fit_axis_data(<span class="hljs-string">&quot;y_axis&quot;</span>))<br>        dpg.add_button(label=<span class="hljs-string">&quot;unlock x limits&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: dpg.set_axis_limits_auto(<span class="hljs-string">&quot;x_axis&quot;</span>))<br>        dpg.add_button(label=<span class="hljs-string">&quot;unlock y limits&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: dpg.set_axis_limits_auto(<span class="hljs-string">&quot;y_axis&quot;</span>))<br>        dpg.add_button(label=<span class="hljs-string">&quot;print limits x&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: <span class="hljs-built_in">print</span>(dpg.get_axis_limits(<span class="hljs-string">&quot;x_axis&quot;</span>)))<br>        dpg.add_button(label=<span class="hljs-string">&quot;print limits y&quot;</span>, callback=<span class="hljs-keyword">lambda</span>: <span class="hljs-built_in">print</span>(dpg.get_axis_limits(<span class="hljs-string">&quot;y_axis&quot;</span>)))<br>    <span class="hljs-keyword">with</span> dpg.plot(label=<span class="hljs-string">&quot;Bar Series&quot;</span>, height=-<span class="hljs-number">1</span>, width=-<span class="hljs-number">1</span>):<br>        dpg.add_plot_legend()<br>        <span class="hljs-comment"># create x axis</span><br>        dpg.add_plot_axis(dpg.mvXAxis, label=<span class="hljs-string">&quot;Student&quot;</span>, no_gridlines=<span class="hljs-literal">True</span>, tag=<span class="hljs-string">&quot;x_axis&quot;</span>)<br>        dpg.set_axis_limits(dpg.last_item(), <span class="hljs-number">9</span>, <span class="hljs-number">33</span>)<br>        dpg.set_axis_ticks(dpg.last_item(), ((<span class="hljs-string">&quot;S1&quot;</span>, <span class="hljs-number">11</span>), (<span class="hljs-string">&quot;S2&quot;</span>, <span class="hljs-number">21</span>), (<span class="hljs-string">&quot;S3&quot;</span>, <span class="hljs-number">31</span>)))<br>        <span class="hljs-comment"># create y axis</span><br>        dpg.add_plot_axis(dpg.mvYAxis, label=<span class="hljs-string">&quot;Score&quot;</span>, tag=<span class="hljs-string">&quot;y_axis&quot;</span>)<br>        dpg.set_axis_limits(<span class="hljs-string">&quot;y_axis&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">110</span>)<br>        <span class="hljs-comment"># add series to y axis</span><br>        dpg.add_bar_series([<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">100</span>, <span class="hljs-number">75</span>, <span class="hljs-number">90</span>], label=<span class="hljs-string">&quot;Final Exam&quot;</span>, weight=<span class="hljs-number">1</span>, parent=<span class="hljs-string">&quot;y_axis&quot;</span>)<br>        dpg.add_bar_series([<span class="hljs-number">11</span>, <span class="hljs-number">21</span>, <span class="hljs-number">31</span>], [<span class="hljs-number">83</span>, <span class="hljs-number">75</span>, <span class="hljs-number">72</span>], label=<span class="hljs-string">&quot;Midterm Exam&quot;</span>, weight=<span class="hljs-number">1</span>, parent=<span class="hljs-string">&quot;y_axis&quot;</span>)<br>        dpg.add_bar_series([<span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">32</span>], [<span class="hljs-number">42</span>, <span class="hljs-number">68</span>, <span class="hljs-number">23</span>], label=<span class="hljs-string">&quot;Course Grade&quot;</span>, weight=<span class="hljs-number">1</span>, parent=<span class="hljs-string">&quot;y_axis&quot;</span>)<br>dpg.create_viewport(title=<span class="hljs-string">&#x27;Custom Title&#x27;</span>, width=<span class="hljs-number">800</span>, height=<span class="hljs-number">600</span>)<br>dpg.setup_dearpygui()<br>dpg.show_viewport()<br>dpg.start_dearpygui()<br>dpg.destroy_context()<br></code></pre></td></tr></table></figure><h3 id="自定义轴标签"><a href="#自定义轴标签" class="headerlink" title="自定义轴标签"></a>自定义轴标签</h3><p>可以使用设置轴标签<code>set_axis_ticks</code>，可以使用<code>reset_axis_ticks</code>重置它们</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># create x axis</span><br>dpg.add_plot_axis(dpg.mvXAxis, label=<span class="hljs-string">&quot;Student&quot;</span>, no_gridlines=<span class="hljs-literal">True</span>)<br>dpg.set_axis_ticks(dpg.last_item(), ((<span class="hljs-string">&quot;S1&quot;</span>, <span class="hljs-number">11</span>), (<span class="hljs-string">&quot;S2&quot;</span>, <span class="hljs-number">21</span>), (<span class="hljs-string">&quot;S3&quot;</span>, <span class="hljs-number">31</span>)))<br><br><span class="hljs-comment"># create y axis</span><br>dpg.add_plot_axis(dpg.mvYAxis, label=<span class="hljs-string">&quot;Score&quot;</span>, tag=<span class="hljs-string">&quot;yaxis_tag&quot;</span>)<br><br><span class="hljs-comment"># add series to y axis</span><br>dpg.add_bar_series([<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">100</span>, <span class="hljs-number">75</span>, <span class="hljs-number">90</span>], label=<span class="hljs-string">&quot;Final Exam&quot;</span>, weight=<span class="hljs-number">1</span>, parent=<span class="hljs-string">&quot;yaxis_tag&quot;</span>)<br>dpg.add_bar_series([<span class="hljs-number">11</span>, <span class="hljs-number">21</span>, <span class="hljs-number">31</span>], [<span class="hljs-number">83</span>, <span class="hljs-number">75</span>, <span class="hljs-number">72</span>], label=<span class="hljs-string">&quot;Midterm Exam&quot;</span>, weight=<span class="hljs-number">1</span>, parent=<span class="hljs-string">&quot;yaxis_tag&quot;</span>)<br>dpg.add_bar_series([<span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">32</span>], [<span class="hljs-number">42</span>, <span class="hljs-number">68</span>, <span class="hljs-number">23</span>], label=<span class="hljs-string">&quot;Course Grade&quot;</span>, weight=<span class="hljs-number">1</span>, parent=<span class="hljs-string">&quot;yaxis_tag&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="多个y轴"><a href="#多个y轴" class="headerlink" title="多个y轴"></a>多个y轴</h3><p>（最多3个y轴）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># create y axis 1</span><br>dpg.add_plot_axis(dpg.mvYAxis, label=<span class="hljs-string">&quot;y1&quot;</span>)<br>dpg.add_line_series(sindatax, sindatay, label=<span class="hljs-string">&quot;y1 lines&quot;</span>, parent=dpg.last_item())<br><span class="hljs-comment"># create y axis 2</span><br>dpg.add_plot_axis(dpg.mvYAxis, label=<span class="hljs-string">&quot;y2&quot;</span>)<br>dpg.add_stem_series(sindatax, sindatay, label=<span class="hljs-string">&quot;y2 stem&quot;</span>, parent=dpg.last_item())<br><span class="hljs-comment"># create y axis 3</span><br>dpg.add_plot_axis(dpg.mvYAxis, label=<span class="hljs-string">&quot;y3 scatter&quot;</span>)<br>dpg.add_scatter_series(sindatax, sindatay, label=<span class="hljs-string">&quot;y3&quot;</span>, parent=dpg.last_item())<br></code></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>使用<code>dpg.add_plot_annotation()</code>标记</p><p>内容：</p><ul><li><code>label</code>：里面的文字</li><li><code>default_value=(</code>x<code>, </code>y<code>)</code>：默认值</li><li><code>offset=(</code>x<code>, </code>y<code>)</code>：偏移，离指向的位置，用直线指出，可省略</li><li><code>color=[</code>rgba<code>]</code>：标记的颜色</li><li><code>clamped</code>：固定（当视角不包含该点时标签在边缘显示），可省略（默认<code>True</code>）</li></ul><h3 id="可拖动的点和线"><a href="#可拖动的点和线" class="headerlink" title="可拖动的点和线"></a>可拖动的点和线</h3><ul><li>点：<code>dpg.add_drag_point()</code>（用元组表示坐标）</li><li>线：<code>dpg.add_drag_line()</code>（用浮点数表示坐标）</li></ul><p>内容：</p><ul><li><code>label</code>：里面的文字</li><li><code>color=[</code>rgba<code>]</code>：标记的颜色</li><li><code>default_value</code>：默认值</li><li><code>callback</code>：回调（获取：<code>dpg.get_value(sender)</code>）</li><li><code>vertical</code>：（线）纵向，默认<code>True</code></li></ul><h3 id="自定义右键菜单"><a href="#自定义右键菜单" class="headerlink" title="自定义右键菜单"></a>自定义右键菜单</h3><ul><li>右击图例中对应项时弹出的菜单</li><li>在<code>dpg.add_line_series</code>后添加组件，并<code>parent=</code>指向其</li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">dpg.add_line_series(sindatax, sindatay, label=<span class="hljs-string">&quot;series 1&quot;</span>, parent=<span class="hljs-string">&quot;yaxis&quot;</span>, tag=<span class="hljs-string">&quot;series_1&quot;</span>)<br><br>dpg.add_button(label=<span class="hljs-string">&quot;Delete Series 1&quot;</span>, parent=dpg.last_item(), callback=<span class="hljs-keyword">lambda</span>: dpg.delete_item(<span class="hljs-string">&quot;series_1&quot;</span>))<br></code></pre></td></tr></table></figure><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>详见下面的<code>## 主题</code></p><ol><li>在前面加<code>with dpg.theme(tag=&quot;</code>xxx<code>&quot;):</code></li><li>添加主题的对象<code>with dpg.theme_component(</code>dpg.mvStemSeries&#x2F;dpg.mvScatterSeries&#x2F;…<code>):</code></li><li>主题的内容</li><li>在图标里用<code>dpg.bind_item_theme(&quot;</code>图表系列tag<code>&quot;, &quot;</code>主题tag<code>&quot;)</code>应用</li></ol><p>主题的内容：</p><ul><li>颜色：<code>dpg.add_theme_color(dpg.mvPlotCol_Line, (</code>rgb<code>), category=dpg.mvThemeCat_Plots)</code></li><li>点的形状：<code>dpg.add_theme_style(dpg.mvPlotStyleVar_Marker, dpg.mvPlotMarker_</code>Diamond&#x2F;Square&#x2F;…<code>, category=dpg.mvThemeCat_Plots)</code></li><li>点的大小：<code>dpg.add_theme_style(dpg.mvPlotStyleVar_MarkerSize, </code>int<code>, category=dpg.mvThemeCat_Plots)</code></li></ul><h2 id="弹出窗口"><a href="#弹出窗口" class="headerlink" title="弹出窗口"></a>弹出窗口</h2><ul><li>右键菜单：在<code>with dpg.popup(</code>链接到组件（例如<code>dpg.last_item()</code>）<code>)</code></li><li>全屏警示框：设置<code>modal=True</code>（默认<code>False</code>）</li></ul><p>按键：<code>mousebutton=</code>添加</p><ol><li><code>dpg.mvMouseButton_Left</code>左键</li><li><code>dpg.mvMouseButton_right</code>右键（默认）</li><li><code>_mvMouseButton_Middle_</code>中键</li><li><code>_mvMouseButton_X1_</code>X1</li><li><code>_mvMouseButton_X2_</code>X2</li></ol><p>将窗口作为弹出窗口：</p><ul><li>创建：<code>with dpg.window(label=&quot;</code>xxx<code>&quot;, modal=True, show=False, tag=&quot;</code>tag<code>&quot;, no_title_bar=True):</code></li><li>调用：<code>callback=lambda: dpg.configure_item(&quot;</code>tag<code>&quot;, show=True)</code></li></ul><h2 id="简易图表"><a href="#简易图表" class="headerlink" title="简易图表"></a>简易图表</h2><p>添加：<code>dpg.add_simple_plot(label=&quot;</code>xxx<code>&quot;, default_value=(</code>int&#x2F;float<code>), height=</code>xxx<code>)</code></p><p>参数：</p><ul><li>柱状（默认线状）：<code>histogram=True&quot;</code></li><li>覆盖在图表顶部的文字：<code>overlay=&quot;</code>xxx<code>&quot;</code></li></ul><p>更新数值：<code> dpg.set_value(&quot;</code>tag<code>&quot;, </code>更新后列表<code>)</code></p><h2 id="暂存"><a href="#暂存" class="headerlink" title="暂存"></a>暂存</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">stage_items</span>():   <span class="hljs-comment"># 存入</span><br>    <span class="hljs-keyword">with</span> dpg.stage(tag=<span class="hljs-string">&quot;stage1&quot;</span>):<br>        dpg.add_text(<span class="hljs-string">&quot;hello, i was added from a stage&quot;</span>, tag=<span class="hljs-string">&quot;text_tag&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">present_stage_items</span>():   <span class="hljs-comment"># 导出</span><br>    dpg.move_item(<span class="hljs-string">&quot;text_tag&quot;</span>, parent=<span class="hljs-string">&quot;main_win&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, tag=<span class="hljs-string">&quot;main_win&quot;</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;stage items&quot;</span>, callback=stage_items)<br>    dpg.add_button(label=<span class="hljs-string">&quot;present stages items&quot;</span>, callback=present_stage_items)<br></code></pre></td></tr></table></figure><ul><li>存储：在<code>dpg.stage():</code>内添加有tag的组件</li><li>清理：使用<code>dpg.unstage(&quot;</code>tag<code>&quot;)</code>和<code>dpg.pop_container_stack()</code></li></ul><h2 id="使用类-class-包装项"><a href="#使用类-class-包装项" class="headerlink" title="使用类(class)包装项"></a>使用类(class)包装项</h2><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Window</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, label</span>):<br>        self._children = []<br>        <span class="hljs-keyword">with</span> dpg.stage() <span class="hljs-keyword">as</span> stage:<br>            self.<span class="hljs-built_in">id</span> = dpg.add_window(label=label)<br>        self.stage = stage<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">add_child</span>(<span class="hljs-params">self, child</span>):<br>        dpg.move_item(child.<span class="hljs-built_in">id</span>, parent=self.<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">submit</span>(<span class="hljs-params">self</span>):<br>        dpg.unstage(self.stage)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Button</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, label</span>):<br>        <span class="hljs-keyword">with</span> dpg.stage():<br>            self.<span class="hljs-built_in">id</span> = dpg.add_button(label=label)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_callback</span>(<span class="hljs-params">self, callback</span>):<br>        dpg.set_item_callback(self.<span class="hljs-built_in">id</span>, callback)<br><br>my_button = Button(<span class="hljs-string">&quot;Press me&quot;</span>)<br>my_button.set_callback(<span class="hljs-keyword">lambda</span>: <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&#x27;ve been pressed!&quot;</span>))<br><br>my_window = Window(<span class="hljs-string">&quot;Tutorial&quot;</span>)<br>my_window.add_child(my_button)<br>my_window.submit()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Button</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, label</span>):<br>        <span class="hljs-keyword">with</span> dpg.stage() <span class="hljs-keyword">as</span> self._staging_container_id:<br>            self._<span class="hljs-built_in">id</span> = dpg.add_button(label=label)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_callback</span>(<span class="hljs-params">self, callback</span>):<br>        dpg.set_item_callback(self._<span class="hljs-built_in">id</span>, callback)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_label</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> dpg.get_item_label(self._<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">submit</span>(<span class="hljs-params">self, parent</span>):<br>        dpg.push_container_stack(parent)<br>        dpg.unstage(self._staging_container_id)<br>        dpg.pop_container_stack()<br><br>my_button = Button(<span class="hljs-string">&quot;Press me&quot;</span>)<br>my_button.set_callback(<span class="hljs-keyword">lambda</span>: <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&#x27;ve been pressed!&quot;</span>))<br><br><span class="hljs-built_in">print</span>(my_button.get_label())<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, tag=<span class="hljs-string">&quot;main_win&quot;</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;hello world&quot;</span>)<br>my_button.submit(<span class="hljs-string">&quot;main_win&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><h3 id="基础工作"><a href="#基础工作" class="headerlink" title="基础工作"></a>基础工作</h3><ul><li>创建：<code>with dpg.table():</code></li><li>添加列：<code>dpg.add_table_column(</code>label<code>)</code>（最多64）</li><li>添加行内容：<code>with dpg.table_row():</code>（添加组件）</li><li>添加单元格：<code>with dpg.table_cell():</code>（行和列内）（相当于在这一行这一列里<code>&lt;br/&gt;</code>）</li></ul><h3 id="边框-x2F-背景"><a href="#边框-x2F-背景" class="headerlink" title="边框&#x2F;背景"></a>边框&#x2F;背景</h3><p>在<code>dpg.table(</code>加上以下内容<code>)</code></p><table><thead><tr><th align="left">关键字</th><th align="center">解释</th></tr></thead><tbody><tr><td align="left"><code>borders_innerH</code></td><td align="center">内边框H</td></tr><tr><td align="left"><code>borders_innerV</code></td><td align="center">内边框V</td></tr><tr><td align="left"><code>borders_outerH</code></td><td align="center">外边框H</td></tr><tr><td align="left"><code>borders_outerV</code></td><td align="center">外边框V</td></tr><tr><td align="left"><code>row_background</code></td><td align="center">每一行颜色交错</td></tr></tbody></table><p>（H：横向，V：竖向）</p><h3 id="列标题"><a href="#列标题" class="headerlink" title="列标题"></a>列标题</h3><p>在<code>dpg.table(</code>中把<code>header_row</code>设置为<code>True</code> <code>)</code></p><p>将显示<code>dpg.add_table_column()</code>的<code>label</code></p><h3 id="列选项"><a href="#列选项" class="headerlink" title="列选项"></a>列选项</h3><table><thead><tr><th align="left">关键字</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="left"><code>init_width_or_weight</code></td><td align="center">0.0</td><td align="center">设置列的起始宽度(固定策略)或比例(拉伸)</td></tr><tr><td align="left"><code>default_hide</code></td><td align="center">False</td><td align="center">默认为隐藏&#x2F;禁用列</td></tr><tr><td align="left"><code>default_sort</code></td><td align="center">False</td><td align="center">默认为排序列</td></tr><tr><td align="left"><code>width_stretch</code></td><td align="center">False</td><td align="center">列将被拉伸。最好是禁用水平滚动（如果表格的尺寸是<code>_SizingStretchSame</code>或<code>_SizingStretchProp</code>则默认）。</td></tr><tr><td align="left"><code>width_fixed</code></td><td align="center">False</td><td align="center">列将不会被拉伸。最好是启用水平滚动（如果表的尺寸是<code>_SizingFixedFit</code>且表可调整大小，则默认）</td></tr><tr><td align="left"><code>no_resize</code></td><td align="center">False</td><td align="center">禁用手动调整大小</td></tr><tr><td align="left"><code>no_reorder</code></td><td align="center">False</td><td align="center">禁用此列的手动重新排序，这也将防止其他列与此列交叉</td></tr><tr><td align="left"><code>no_hide</code></td><td align="center">False</td><td align="center">禁用隐藏&#x2F;禁用此列的功能</td></tr><tr><td align="left"><code>no_clip</code></td><td align="center">False</td><td align="center">禁用此列的剪裁</td></tr><tr><td align="left"><code>no_sort</code></td><td align="center">False</td><td align="center">禁用此列的排序</td></tr><tr><td align="left"><code>no_sort_ascending</code></td><td align="center">False</td><td align="center">禁用按升序排序的功能</td></tr><tr><td align="left"><code>no_sort_descending</code></td><td align="center">False</td><td align="center">禁用按降序排序的功能</td></tr><tr><td align="left"><code>no_header_width</code></td><td align="center">False</td><td align="center">禁用页眉文本宽度对自动列宽的影响</td></tr><tr><td align="left"><code>prefer_sort_ascending</code></td><td align="center">True</td><td align="center">在此列上首次排序时将初始排序方向设置为升序(默认)</td></tr><tr><td align="left"><code>prefer_sort_descending</code></td><td align="center">False</td><td align="center">在此列上首次排序时，将初始排序方向设置为降序</td></tr><tr><td align="left"><code>indent_enabled</code></td><td align="center">False</td><td align="center">输入单元格时使用当前缩进值(第0列默认)</td></tr><tr><td align="left"><code>indent_disable</code></td><td align="center">False</td><td align="center">输入单元格时忽略当前的缩进值（默认为列&gt;0）。在单元格内的缩进变化仍将被尊重(?)</td></tr></tbody></table><p>###列排序</p><ol><li>在<code>dpg.table</code>添加属性<code>sortable=True</code>和<code>callback</code></li><li>不要排序的列添加属性<code>no_sort=True</code>（默认<code>False</code>）</li><li>自定义排序</li></ol><p>排序回调示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">sort_callback</span>(<span class="hljs-params">sender, sort_specs</span>):<br><br>    <span class="hljs-comment"># sort_specs scenarios:</span><br>    <span class="hljs-comment">#   1. no sorting -&gt; sort_specs == None</span><br>    <span class="hljs-comment">#   2. single sorting -&gt; sort_specs == [[column_id, direction]]</span><br>    <span class="hljs-comment">#   3. multi sorting -&gt; sort_specs == [[column_id, direction], [column_id, direction], ...]</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># notes:</span><br>    <span class="hljs-comment">#   1. direction is ascending if == 1</span><br>    <span class="hljs-comment">#   2. direction is ascending if == -1</span><br><br>    <span class="hljs-comment"># no sorting case</span><br>    <span class="hljs-keyword">if</span> sort_specs <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>: <span class="hljs-keyword">return</span><br><br>    rows = dpg.get_item_children(sender, <span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># create a list that can be sorted based on first cell</span><br>    <span class="hljs-comment"># value, keeping track of row and value used to sort</span><br>    sortable_list = []<br>    <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> rows:<br>        first_cell = dpg.get_item_children(row, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<br>        sortable_list.append([row, dpg.get_value(first_cell)])<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_sorter</span>(<span class="hljs-params">e</span>):<br>        <span class="hljs-keyword">return</span> e[<span class="hljs-number">1</span>]<br><br>    sortable_list.sort(key=_sorter, reverse=sort_specs[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] &lt; <span class="hljs-number">0</span>)<br><br>    <span class="hljs-comment"># create list of just sorted row ids</span><br>    new_order = []<br>    <span class="hljs-keyword">for</span> pair <span class="hljs-keyword">in</span> sortable_list:<br>        new_order.append(pair[<span class="hljs-number">0</span>])<br><br>    dpg.reorder_items(sender, <span class="hljs-number">1</span>, new_order)<br></code></pre></td></tr></table></figure><h3 id="裁剪"><a href="#裁剪" class="headerlink" title="裁剪"></a>裁剪</h3><p>优化性能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">clipper_toggle</span>(<span class="hljs-params">sender</span>):<br>    dpg.configure_item(<span class="hljs-string">&quot;table_clip&quot;</span>, clipper=dpg.get_value(sender))<br><br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_checkbox(label=<span class="hljs-string">&quot;clipper&quot;</span>, callback=clipper_toggle, default_value=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-keyword">with</span> dpg.table(header_row=<span class="hljs-literal">False</span>, tag=<span class="hljs-string">&quot;table_clip&quot;</span>, clipper=<span class="hljs-literal">True</span>):<br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>            dpg.add_table_column()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30000</span>):<br>            <span class="hljs-keyword">with</span> dpg.table_row():<br>                <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>                    dpg.add_text(<span class="hljs-string">f&quot;Row<span class="hljs-subst">&#123;i&#125;</span> Column<span class="hljs-subst">&#123;j&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><ol><li><code>dpg.table</code>添加属性<code>clipper=True</code></li><li>添加<code>dpg.configure_item(&quot;</code>tag<code>&quot;, clipper=True)</code></li></ol><h2 id="纹理"><a href="#纹理" class="headerlink" title="纹理"></a>纹理</h2><p>提供3种类型的纹理：静态的、原始纹理、动态的</p><p>可以在以下组件中使用纹理：<code>mvDrawImage</code>、<code>mvImage</code>、<code>mvImageButton</code>、<code>mvImageSeries</code></p><p>它们总是一维列表或数组</p><p>使用关键字Show将打开纹理注册表</p><h3 id="静态纹理"><a href="#静态纹理" class="headerlink" title="静态纹理"></a>静态纹理</h3><p>用于不经常更改的图像，通常在启动时加载</p><p>如果需要更新它们，您可以删除并重新创建它们。它们可以是列表、元组、NumPy数组，以及支持具有连续数据的Python缓冲区协议的任何类型</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">texture_data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span> * <span class="hljs-number">100</span>):<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br>    texture_data.append(<span class="hljs-number">0</span>)<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br><br><span class="hljs-keyword">with</span> dpg.texture_registry(show=<span class="hljs-literal">True</span>):<br>    dpg.add_static_texture(width=<span class="hljs-number">100</span>, height=<span class="hljs-number">100</span>, default_value=texture_data, tag=<span class="hljs-string">&quot;texture_tag&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_image(<span class="hljs-string">&quot;texture_tag&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="动态纹理"><a href="#动态纹理" class="headerlink" title="动态纹理"></a>动态纹理</h3><p>用于<strong>每帧可以更改</strong>的中小型纹理</p><p>可以使用<code>set_value</code>更新这些选项，但宽度和高度必须与第一次创建纹理时相同</p><p>除了执行安全检查和转化外，这些纹理与原始纹理相似</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python">texture_data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span> * <span class="hljs-number">100</span>):<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br>    texture_data.append(<span class="hljs-number">0</span>)<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br><br><span class="hljs-keyword">with</span> dpg.texture_registry(show=<span class="hljs-literal">True</span>):<br>    dpg.add_dynamic_texture(width=<span class="hljs-number">100</span>, height=<span class="hljs-number">100</span>, default_value=texture_data, tag=<span class="hljs-string">&quot;texture_tag&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_update_dynamic_textures</span>(<span class="hljs-params">sender, app_data, user_data</span>):<br>    new_color = dpg.get_value(sender)<br>    new_color[<span class="hljs-number">0</span>] = new_color[<span class="hljs-number">0</span>] / <span class="hljs-number">255</span><br>    new_color[<span class="hljs-number">1</span>] = new_color[<span class="hljs-number">1</span>] / <span class="hljs-number">255</span><br>    new_color[<span class="hljs-number">2</span>] = new_color[<span class="hljs-number">2</span>] / <span class="hljs-number">255</span><br>    new_color[<span class="hljs-number">3</span>] = new_color[<span class="hljs-number">3</span>] / <span class="hljs-number">255</span><br><br>    new_texture_data = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span> * <span class="hljs-number">100</span>):<br>        new_texture_data.append(new_color[<span class="hljs-number">0</span>])<br>        new_texture_data.append(new_color[<span class="hljs-number">1</span>])<br>        new_texture_data.append(new_color[<span class="hljs-number">2</span>])<br>        new_texture_data.append(new_color[<span class="hljs-number">3</span>])<br><br>    dpg.set_value(<span class="hljs-string">&quot;texture_tag&quot;</span>, new_texture_data)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_image(<span class="hljs-string">&quot;texture_tag&quot;</span>)<br>    dpg.add_color_picker((<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>), label=<span class="hljs-string">&quot;Texture&quot;</span>, no_side_preview=<span class="hljs-literal">True</span>, alpha_bar=<span class="hljs-literal">True</span>, width=<span class="hljs-number">200</span>, callback=_update_dynamic_textures)<br><br></code></pre></td></tr></table></figure><h3 id="原始纹理"><a href="#原始纹理" class="headerlink" title="原始纹理"></a>原始纹理</h3><p>使用方式与动态纹理相同，但只接受数组(NumPy、PYTHON等)且不执行任何安全检查。</p><p>这些纹理用于需要每帧更新大型纹理的高性能应用程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> array<br><br>texture_data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span> * <span class="hljs-number">100</span>):<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br>    texture_data.append(<span class="hljs-number">0</span>)<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br>    texture_data.append(<span class="hljs-number">255</span> / <span class="hljs-number">255</span>)<br><br>raw_data = array.array(<span class="hljs-string">&#x27;f&#x27;</span>, texture_data)<br><br><span class="hljs-keyword">with</span> dpg.texture_registry(show=<span class="hljs-literal">True</span>):<br>    dpg.add_raw_texture(width=<span class="hljs-number">100</span>, height=<span class="hljs-number">100</span>, default_value=raw_data, <span class="hljs-built_in">format</span>=dpg.mvFormat_Float_rgba, tag=<span class="hljs-string">&quot;texture_tag&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_dynamic_texture</span>(<span class="hljs-params">sender, app_data, user_data</span>):<br>    new_color = dpg.get_value(sender)<br>    new_color[<span class="hljs-number">0</span>] = new_color[<span class="hljs-number">0</span>] / <span class="hljs-number">255</span><br>    new_color[<span class="hljs-number">1</span>] = new_color[<span class="hljs-number">1</span>] / <span class="hljs-number">255</span><br>    new_color[<span class="hljs-number">2</span>] = new_color[<span class="hljs-number">2</span>] / <span class="hljs-number">255</span><br>    new_color[<span class="hljs-number">3</span>] = new_color[<span class="hljs-number">3</span>] / <span class="hljs-number">255</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span> * <span class="hljs-number">100</span> * <span class="hljs-number">4</span>):<br>        raw_data[i] = new_color[i % <span class="hljs-number">4</span>]<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_image(<span class="hljs-string">&quot;texture_tag&quot;</span>)<br>    dpg.add_color_picker((<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>), label=<span class="hljs-string">&quot;Texture&quot;</span>, no_side_preview=<span class="hljs-literal">True</span>, alpha_bar=<span class="hljs-literal">True</span>, width=<span class="hljs-number">200</span>, callback=update_dynamic_texture)<br></code></pre></td></tr></table></figure><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>支持：</p><table><thead><tr><th align="left">格式化</th><th align="center">静态纹理</th><th align="center">动态纹理</th><th align="center">原始纹理</th></tr></thead><tbody><tr><td align="left"><code>mvFormat_Float_rgba</code></td><td align="center">✅</td><td align="center">✅</td><td align="center">✅</td></tr><tr><td align="left"><code>mvFormat_Float_rgb</code></td><td align="center"></td><td align="center"></td><td align="center">✅</td></tr><tr><td align="left"><code>mvFormat_Int_rgba</code></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left"><code>mvFormat_Int_rgba</code></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="加载图像"><a href="#加载图像" class="headerlink" title="加载图像"></a>加载图像</h3><p>使用<code>load_image</code>文件加载图像数据</p><p>此函数返回一个元组，其中</p><blockquote><p>0-&gt;宽度</p><p>1-&gt;高度</p><p>2-&gt;途径</p><p>3-&gt;DATA(一维数组，mvBuffer)</p><p>如果失败，则返回 None 。</p></blockquote><p>接受的文件类型包括：</p><ul><li>JPEG(无12位&#x2F;通道JPEG或采用算术编码的JPEG)</li><li>PNG</li><li>BMP</li><li>PSD</li><li>GIF</li><li>HDR</li><li>PIC</li><li>PPM</li><li>PGM</li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">width, height, channels, data = dpg.load_image(<span class="hljs-string">&quot;xxx.png&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.texture_registry(show=<span class="hljs-literal">True</span>):<br>    dpg.add_static_texture(width=width, height=height, default_value=data, tag=<span class="hljs-string">&quot;texture_tag&quot;</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_image(<span class="hljs-string">&quot;texture_tag&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="保存图像"><a href="#保存图像" class="headerlink" title="保存图像"></a>保存图像</h3><p>使用<code>save_image</code>将图像数据保存到文件。</p><p>该图像是从左到右、从上到下存储的像素的矩形。每个像素最多包含4个数据分量，每个通道8位交织，顺序如下：1&#x3D;Y、2&#x3D;YA、3&#x3D;RGB、4&#x3D;RGBA（y表示单色）</p><p>PNG创建的输出文件具有与输入相同数量的组件，BMP格式将文件格式中的Y扩展为RGB且不输出Alpha。</p><p>接受的文件类型包括：</p><ul><li>PNG</li><li>JPG</li><li>BMP</li><li>TGA</li><li>HDR</li></ul><p>文件类型由扩展名决定。必须为小写(PNG、JPG、BMP、TGA、HDR)。</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">width, height = <span class="hljs-number">255</span>, <span class="hljs-number">255</span><br><br>data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width*height):<br>    data.append(<span class="hljs-number">255</span>)<br>    data.append(<span class="hljs-number">255</span>)<br>    data.append(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>):<br>    dpg.add_button(label=<span class="hljs-string">&quot;Save Image&quot;</span>, callback=<span class="hljs-keyword">lambda</span>:dpg.save_image(file=<span class="hljs-string">&quot;newImage.png&quot;</span>, width=width, height=height, data=data, components=<span class="hljs-number">3</span>))<br><br>dpg.show_viewport()<br><span class="hljs-keyword">while</span> dpg.is_dearpygui_running():<br>    dpg.render_dearpygui_frame()<br></code></pre></td></tr></table></figure><h2 id="主题-1"><a href="#主题-1" class="headerlink" title="主题"></a>主题</h2><p>主题是由以下内容组成的容器：</p><blockquote><p>主题组件：是主题中的容器，可以指定主题颜色&#x2F;样式的目标项目类型</p><p>主题颜色：添加到主题组件并设置颜色的项</p><p>主题样式：添加到主题组件并设置样式的项目</p></blockquote><p>主题可以：</p><blockquote><p>绑定为默认主题。这将在所有窗口中产生全局效果</p><p>绑定到一个容器。如果适用的主题组件在该主题中，将应用到它的子项</p><p>如果主题中有适用的主题组件，则绑定到项类型、项容器或特定项</p><p>主题组件必须具有指定的项目类型。这可以是<code>MvAll</code>适用于所有组件或特定组件类型。</p></blockquote><p>样式和颜色项目有一个命名的常量，并将该常量应用于其组件的命名项目类型。风格和颜色项目必须有一个命名的类别，常量在名称中包含其类别</p><p>主题颜色和样式分为以下类别：</p><blockquote><p><code>mvThemeCat_Plots</code> ：与绘图关联的项目。标识的样式&#x2F;颜色常量：<code> mvPlotCol_*</code>或<code>mvPlotStyle_*</code></p><p><code>mvThemeCat_Nodes</code> ：与bode关联的项。标识的样式&#x2F;颜色常量： <code>mvNodeCol_*</code>或<code>mvNodeStyle_*</code></p><p><code>mvThemeCat_Core</code> ：所有其他在dearpygui内组件。标识的样式&#x2F;颜色常量 ：<code>mvThemeCol_*</code>或<code>mvThemeStyle_*</code></p></blockquote><p>可参考<code>dpg.show_style_editor() </code></p><h3 id="默认主题-全局"><a href="#默认主题-全局" class="headerlink" title="默认主题(全局)"></a>默认主题(全局)</h3><p>将在所有窗口中全局应用该主题，并适用于子窗口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> dpg.theme() <span class="hljs-keyword">as</span> global_theme:<br><br>    <span class="hljs-keyword">with</span> dpg.theme_component(dpg.mvAll):<br>        dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (<span class="hljs-number">255</span>, <span class="hljs-number">140</span>, <span class="hljs-number">23</span>), category=dpg.mvThemeCat_Core)<br>        dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, <span class="hljs-number">5</span>, category=dpg.mvThemeCat_Core)<br><br>    <span class="hljs-keyword">with</span> dpg.theme_component(dpg.mvInputInt):<br>        dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (<span class="hljs-number">140</span>, <span class="hljs-number">255</span>, <span class="hljs-number">23</span>), category=dpg.mvThemeCat_Core)<br>        dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, <span class="hljs-number">5</span>, category=dpg.mvThemeCat_Core)<br><br>dpg.bind_theme(global_theme)<br></code></pre></td></tr></table></figure><h3 id="只特定于组件"><a href="#只特定于组件" class="headerlink" title="只特定于组件"></a>只特定于组件</h3><p>将主题应用于特定组件，将覆盖该指定项之前的任何主题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> dpg.window(label=<span class="hljs-string">&quot;Tutorial&quot;</span>, pos=(<span class="hljs-number">20</span>, <span class="hljs-number">50</span>), width=<span class="hljs-number">275</span>, height=<span class="hljs-number">225</span>) <span class="hljs-keyword">as</span> win1:<br>    t = dpg.add_input_text(default_value=<span class="hljs-string">&quot;some text&quot;</span>)<br>    <br><span class="hljs-keyword">with</span> dpg.theme() <span class="hljs-keyword">as</span> item_theme:<br>    <span class="hljs-keyword">with</span> dpg.theme_component(dpg.mvAll):<br>        dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (<span class="hljs-number">200</span>, <span class="hljs-number">200</span>, <span class="hljs-number">100</span>), category=dpg.mvThemeCat_Core)<br>        dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, <span class="hljs-number">0</span>, category=dpg.mvThemeCat_Core)<br><br>dpg.bind_item_theme(t, item_theme)<br></code></pre></td></tr></table></figure><h3 id="主题的优先顺序"><a href="#主题的优先顺序" class="headerlink" title="主题的优先顺序"></a>主题的优先顺序</h3><p>应用的主题的优先顺序按以下顺序排列:</p><ol><li>具体组件</li><li>继承的容器</li><li>全局</li></ol><h3 id="禁用组件的主题"><a href="#禁用组件的主题" class="headerlink" title="禁用组件的主题"></a>禁用组件的主题</h3><p>每个组件都有单独的禁用主题，在禁用时会使用该主题</p><p>如果未设置禁用主题，则将使用默认禁用主题</p><ol><li>组件加<code>enabled=False</code></li><li><code>with dpg.theme_xxx():</code>添加参数<code>enabled_state=False</code></li></ol><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><h4 id="图表图形"><a href="#图表图形" class="headerlink" title="图表图形"></a>图表图形</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvPlotMarker_None</code></td><td align="center">无</td></tr><tr><td align="left"><code>mvPlotMarker_Circle</code></td><td align="center">圆圈</td></tr><tr><td align="left"><code>mvPlotMarker_Square</code></td><td align="center">方形</td></tr><tr><td align="left"><code>mvPlotMarker_Diamond</code></td><td align="center">钻石形</td></tr><tr><td align="left"><code>mvPlotMarker_Up</code></td><td align="center">上</td></tr><tr><td align="left"><code>mvPlotMarker_Down</code></td><td align="center">下</td></tr><tr><td align="left"><code>mvPlotMarker_Left</code></td><td align="center">左</td></tr><tr><td align="left"><code>mvPlotMarker_Right</code></td><td align="center">右</td></tr><tr><td align="left"><code>mvPlotMarker_Cross</code></td><td align="center">叉号</td></tr><tr><td align="left"><code>mvPlotMarker_Plus</code></td><td align="center">加号</td></tr><tr><td align="left"><code>mvPlotMarker_Asterisk</code></td><td align="center">星号</td></tr></tbody></table><h4 id="支持颜色的"><a href="#支持颜色的" class="headerlink" title="支持颜色的"></a>支持颜色的</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvThemeCol_Text</code></td><td align="center">文本</td></tr><tr><td align="left"><code>mvThemeCol_TabActive</code></td><td align="center">激活Tab</td></tr><tr><td align="left"><code>mvThemeCol_SliderGrabActive</code></td><td align="center">滑块抓取活动</td></tr><tr><td align="left"><code>mvThemeCol_TextDisabled</code></td><td align="center">已禁用的文本</td></tr><tr><td align="left"><code>mvThemeCol_TabUnfocused</code></td><td align="center">未聚焦Tab</td></tr><tr><td align="left"><code>mvThemeCol_Button</code></td><td align="center">按钮</td></tr><tr><td align="left"><code>mvThemeCol_WindowBg</code></td><td align="center">窗口背景</td></tr><tr><td align="left"><code>mvThemeCol_TabUnfocusedActive</code></td><td align="center">激活未聚焦Tab</td></tr><tr><td align="left"><code>mvThemeCol_ButtonHovered</code></td><td align="center">被鼠标悬停的按钮</td></tr><tr><td align="left"><code>mvThemeCol_ChildBg</code></td><td align="center">子背景</td></tr><tr><td align="left"><code>mvThemeCol_DockingPreview</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ButtonActiv</code></td><td align="center">被点击的按钮</td></tr><tr><td align="left"><code>mvThemeCol_Border</code></td><td align="center">边缘</td></tr><tr><td align="left"><code>mvThemeCol_DockingEmptyBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_Header</code></td><td align="center">标题</td></tr><tr><td align="left"><code>mvThemeCol_PopupBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_PlotLines</code></td><td align="center">图表的线</td></tr><tr><td align="left"><code>mvThemeCol_HeaderHovered</code></td><td align="center">被悬停的标题</td></tr><tr><td align="left"><code>mvThemeCol_BorderShadow</code></td><td align="center">边缘阴影</td></tr><tr><td align="left"><code>mvThemeCol_PlotLinesHovered</code></td><td align="center">被悬停的图表的线</td></tr><tr><td align="left"><code>mvThemeCol_HeaderActive</code></td><td align="center">激活的标题<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_FrameBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_PlotHistogram</code></td><td align="center">图表直方图</td></tr><tr><td align="left"><code>mvThemeCol_Separator</code></td><td align="center">分隔符</td></tr><tr><td align="left"><code>mvThemeCol_FrameBgHovered</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_PlotHistogramHovered</code></td><td align="center">被悬停的图表直方图</td></tr><tr><td align="left"><code>mvThemeCol_SeparatorHovered</code></td><td align="center">被悬停的分隔符</td></tr><tr><td align="left"><code>mvThemeCol_FrameBgActive</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TableHeaderBg</code></td><td align="center">表头背景</td></tr><tr><td align="left"><code>mvThemeCol_SeparatorActive</code></td><td align="center">激活的分隔符<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TitleBg</code></td><td align="center">标题背景</td></tr><tr><td align="left"><code>mvThemeCol_SeparatorTableBorderStrong</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ResizeGrip</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TitleBgActive</code></td><td align="center">激活的标题背景<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TableBorderLight</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ResizeGripHovered</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TitleBgCollapsed</code></td><td align="center">崩溃的标题背景<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TableRowBg</code></td><td align="center">表格行背景</td></tr><tr><td align="left"><code>mvThemeCol_ResizeGripActive</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_MenuBarBg</code></td><td align="center">菜单栏背景</td></tr><tr><td align="left"><code>mvThemeCol_TableRowBgAlt</code></td><td align="center">表格行背景符号<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_Tab</code></td><td align="center">Tab</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarBg</code></td><td align="center">滚动栏背景</td></tr><tr><td align="left"><code>mvThemeCol_TextSelectedBg</code></td><td align="center">文本选择背景</td></tr><tr><td align="left"><code>mvThemeCol_TabHovered</code></td><td align="center">被悬停的Tab</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarGrab</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_DragDropTarget</code></td><td align="center">拖动目标</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarGrabHovered</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_NavHighlight</code></td><td align="center">导航栏高亮</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarGrabActive</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_NavWindowingHighlight</code></td><td align="center">导航栏窗口高亮<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_CheckMark</code></td><td align="center">打勾<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_NavWindowingDimBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_SliderGrab</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ModalWindowDimBg</code></td><td align="center"><code>？</code></td></tr></tbody></table><h4 id="图表颜色"><a href="#图表颜色" class="headerlink" title="图表颜色"></a>图表颜色</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvPlotCol_Line</code></td><td align="center">线</td></tr><tr><td align="left"><code>mvPlotCol_LegendBg</code></td><td align="center">图例背景</td></tr><tr><td align="left"><code>mvPlotCol_YAxisGrid</code></td><td align="center">Y轴网格</td></tr><tr><td align="left"><code>mvPlotCol_Fill</code></td><td align="center">填充</td></tr><tr><td align="left"><code>mvPlotCol_LegendBorder</code></td><td align="center">图例边框</td></tr><tr><td align="left"><code>mvPlotCol_YAxis2</code></td><td align="center">Y轴2</td></tr><tr><td align="left"><code>mvPlotCol_MarkerOutline</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_LegendText</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_YAxisGrid2</code></td><td align="center">Y轴网格2</td></tr><tr><td align="left"><code>mvPlotCol_MarkerFill</code></td><td align="center">标记填充</td></tr><tr><td align="left"><code>mvPlotCol_TitleText</code></td><td align="center">标题文本</td></tr><tr><td align="left"><code>mvPlotCol_YAxis3</code></td><td align="center">Y轴3</td></tr><tr><td align="left"><code>mvPlotCol_ErrorBar</code></td><td align="center">错误栏</td></tr><tr><td align="left"><code>mvPlotCol_InlayText</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_YAxisGrid3</code></td><td align="center">Y轴网格3</td></tr><tr><td align="left"><code>mvPlotCol_FrameBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_XAxis</code></td><td align="center">X轴</td></tr><tr><td align="left"><code>mvPlotCol_Selection</code></td><td align="center">选择器</td></tr><tr><td align="left"><code>mvPlotCol_PlotBg</code></td><td align="center">图表背景</td></tr><tr><td align="left"><code>mvPlotCol_XAxisGrid</code></td><td align="center">X轴网格</td></tr><tr><td align="left"><code>mvPlotCol_Query</code></td><td align="center">查询</td></tr><tr><td align="left"><code>mvPlotCol_PlotBorder</code></td><td align="center">图表边框</td></tr><tr><td align="left"><code>mvPlotCol_YAxis</code></td><td align="center">Y轴</td></tr><tr><td align="left"><code>mvPlotCol_Crosshairs</code></td><td align="center">十字线（坐标）</td></tr></tbody></table><h4 id="node颜色"><a href="#node颜色" class="headerlink" title="node颜色"></a>node颜色</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvNodeCol_NodeBackground</code></td><td align="center">Node背景</td></tr><tr><td align="left"><code>mvNodeCol_TitleBarSelected</code></td><td align="center">已选择标题栏</td></tr><tr><td align="left"><code>mvNodeCol_BoxSelector</code></td><td align="center">盒子选择器</td></tr><tr><td align="left"><code>mvNodeCol_NodeBackgroundHovered</code></td><td align="center">被悬停的Node背景</td></tr><tr><td align="left"><code>mvNodeCol_Link</code></td><td align="center">链接</td></tr><tr><td align="left"><code>mvNodeCol_BoxSelectorOutline</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvNodeCol_NodeBackgroundSelected</code></td><td align="center">已选择Note背景</td></tr><tr><td align="left"><code>mvNodeCol_LinkHovered</code></td><td align="center">被悬停的链接</td></tr><tr><td align="left"><code>mvNodeCol_GridBackground</code></td><td align="center">网格背景</td></tr><tr><td align="left"><code>mvNodeCol_NodeOutline</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvNodeCol_LinkSelected</code></td><td align="center">已选择背景</td></tr><tr><td align="left"><code>mvNodeCol_GridLine</code></td><td align="center">网格线</td></tr><tr><td align="left"><code>mvNodeCol_TitleBar</code></td><td align="center">标题栏</td></tr><tr><td align="left"><code>mvNodeCol_Pin</code></td><td align="center">钉</td></tr><tr><td align="left"><code>mvNodeCol_PinHovered</code></td><td align="center">已悬停的钉</td></tr><tr><td align="left"><code>mvNodeCol_TitleBarHovered</code></td><td align="center">已悬停的标题栏</td></tr></tbody></table><h4 id="核心样式"><a href="#核心样式" class="headerlink" title="核心样式"></a>核心样式</h4><table><thead><tr><th align="left">参数</th><th align="center">组件</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvStyleVar_Alpha</code></td><td align="center">1</td><td align="center">透明度</td></tr><tr><td align="left"><code>mvStyleVar_WindowPadding</code></td><td align="center">2</td><td align="center">窗口填充</td></tr><tr><td align="left"><code>mvStyleVar_WindowRounding</code></td><td align="center">1</td><td align="center">窗口圆角</td></tr><tr><td align="left"><code>mvStyleVar_WindowBorderSize</code></td><td align="center">1</td><td align="center">窗口边缘大小</td></tr><tr><td align="left"><code>mvStyleVar_WindowMinSize</code></td><td align="center">2</td><td align="center">窗口最小大小</td></tr><tr><td align="left"><code>mvStyleVar_WindowTitleAlign</code></td><td align="center">2</td><td align="center">窗口标题对齐</td></tr><tr><td align="left"><code>mvStyleVar_ChildRounding</code></td><td align="center">1</td><td align="center">子边距</td></tr><tr><td align="left"><code>mvStyleVar_ChildBorderSize</code></td><td align="center">1</td><td align="center">子边缘大小</td></tr><tr><td align="left"><code>mvStyleVar_PopupRounding</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_PopupBorderSize</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_FramePadding</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_FrameRounding</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_FrameBorderSize</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_ItemSpacing</code></td><td align="center">2</td><td align="center">组件间隔</td></tr><tr><td align="left"><code>mvStyleVar_ItemInnerSpacing</code></td><td align="center">2</td><td align="center">组件内间隔</td></tr><tr><td align="left"><code>mvStyleVar_IndentSpacing</code></td><td align="center">1</td><td align="center">缩进间隔</td></tr><tr><td align="left"><code>mvStyleVar_CellPadding</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_ScrollbarSize</code></td><td align="center">1</td><td align="center">滚动条大小</td></tr><tr><td align="left"><code>mvStyleVar_ScrollbarRounding</code></td><td align="center">1</td><td align="center">滚动条圆角</td></tr><tr><td align="left"><code>mvStyleVar_GrabMinSize</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_GrabRounding</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_TabRounding</code></td><td align="center">1</td><td align="center">Tab圆角</td></tr><tr><td align="left"><code>mvStyleVar_ButtonTextAlign</code></td><td align="center">2</td><td align="center">按钮文本对齐</td></tr><tr><td align="left"><code>mvStyleVar_SelectableTextAlign</code></td><td align="center">2</td><td align="center">可选文本对齐</td></tr></tbody></table><h4 id="打印样式"><a href="#打印样式" class="headerlink" title="打印样式"></a>打印样式</h4><table><thead><tr><th align="left">参数</th><th align="center">组件</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvPlotStyleVar_LineWeight</code></td><td align="center">1</td><td align="center">线宽</td></tr><tr><td align="left"><code>mvPlotStyleVar_Marker</code></td><td align="center">1</td><td align="center">标记</td></tr><tr><td align="left"><code>mvPlotStyleVar_MarkerSize</code></td><td align="center">1</td><td align="center">标记大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_MarkerWeight</code></td><td align="center">1</td><td align="center">标记宽</td></tr><tr><td align="left"><code>mvPlotStyleVar_FillAlpha</code></td><td align="center">1</td><td align="center">填充透明度</td></tr><tr><td align="left"><code>mvPlotStyleVar_ErrorBarSize</code></td><td align="center">1</td><td align="center">错误栏大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_ErrorBarWeight</code></td><td align="center">1</td><td align="center">错误栏宽度</td></tr><tr><td align="left"><code>mvPlotStyleVar_DigitalBitHeight</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_DigitalBitGap</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotBorderSize</code></td><td align="center">1</td><td align="center">图表边框大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorAlpha</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MajorTickLen</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorTickLen</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MajorTickSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorTickSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MajorGridSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorGridSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotPadding</code></td><td align="center">2</td><td align="center">图表填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LabelPadding</code></td><td align="center">2</td><td align="center">标签填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LegendPadding</code></td><td align="center">2</td><td align="center">图例填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LegendInnerPadding</code></td><td align="center">2</td><td align="center">内图例填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LegendSpacing</code></td><td align="center">2</td><td align="center">图例边距</td></tr><tr><td align="left"><code>mvPlotStyleVar_MousePosPadding</code></td><td align="center">2</td><td align="center">鼠标位置填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_AnnotationPadding</code></td><td align="center">2</td><td align="center">注释填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_FitPadding</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotDefaultSize</code></td><td align="center">2</td><td align="center">图表默认大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotMinSize</code></td><td align="center">2</td><td align="center">图表最小大小</td></tr></tbody></table><h4 id="Node样式"><a href="#Node样式" class="headerlink" title="Node样式"></a>Node样式</h4><table><thead><tr><th align="left">参数</th><th align="center">组件</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvNodeStyleVar_GridSpacing</code></td><td align="center">1</td><td align="center">网格间距</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodeCornerRounding</code></td><td align="center">1</td><td align="center">Node边角圆角</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodePaddingHorizontal</code></td><td align="center">1</td><td align="center">Node横向填充</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodePaddingVertical</code></td><td align="center">1</td><td align="center">Node竖向填充</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodeBorderThickness</code></td><td align="center">1</td><td align="center">边缘大小</td></tr><tr><td align="left"><code>mvNodeStyleVar_LinkThickness</code></td><td align="center">1</td><td align="center">链接厚度</td></tr><tr><td align="left"><code>mvNodeStyleVar_LinkLineSegmentsPerLength</code></td><td align="center">1</td><td align="center">链接线长</td></tr><tr><td align="left"><code>mvNodeStyleVar_LinkHoverDistance</code></td><td align="center">1</td><td align="center">链接悬停距离</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinCircleRadius</code></td><td align="center">1</td><td align="center">钉 圆半径</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinQuadSideLength</code></td><td align="center">1</td><td align="center">钉 四边形长</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinTriangleSideLength</code></td><td align="center">1</td><td align="center">钉 三角形边长</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinLineThickness</code></td><td align="center">1</td><td align="center">钉 线条厚度</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinHoverRadius</code></td><td align="center">1</td><td align="center">钉 悬停半径</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinOffset</code></td><td align="center">1</td><td align="center">钉 偏移</td></tr></tbody></table><h2 id="工具提示"><a href="#工具提示" class="headerlink" title="工具提示"></a>工具提示</h2><p>是当项目悬停时显示的窗口，可以保存任何其他组件的容器，必须具有父参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">dpg.add_text(<span class="hljs-string">&quot;Hover me&quot;</span>, tag=<span class="hljs-string">&quot;tooltip_parent&quot;</span>)<br><span class="hljs-keyword">with</span> dpg.tooltip(<span class="hljs-string">&quot;tooltip_parent&quot;</span>):<br>    dpg.add_text(<span class="hljs-string">&quot;A tooltip&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Dev</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于</title>
    <link href="/2023/%E5%85%B3%E4%BA%8E/"/>
    <url>/2023/%E5%85%B3%E4%BA%8E/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center"><img src="/img/avatar.png"></th><th align="center">for_the_zero<br>我，站长<br>一只高中畜生</th><th align="center">——————–</th></tr></thead><tbody><tr><td align="center">就……凭兴趣搞的</td><td align="center">但是要是内容有更新，我不一定会改<br>例如上面那行</td><td align="center">我不太会搞</td></tr><tr><td align="center">写过:<br>scratch(不想搞了)<br>python和h5(边写边学)</td><td align="center">偶尔写几篇文章<br>文笔不好，但文章重要的是内容</td><td align="center">内容啥都有</td></tr><tr><td align="center">内容可能是→</td><td align="center">自己感兴趣的<br>教程<br>问题解决<br>乱发的<br>……</td><td align="center">评论区：issues</td></tr></tbody></table><hr><p>博客：</p><table><thead><tr><th align="center">Github Pages</th><th align="center">Netlify</th><th align="center">Vercel</th></tr></thead><tbody><tr><td align="center"><a href="//for-the-zero.github.io">link</a></td><td align="center"><a href="//ftz-blog.netlify.app">link</a></td><td align="center"><a href="//ftz-blog.vercel.app">link</a></td></tr><tr><td align="center">较慢</td><td align="center">国内推荐</td><td align="center">国外推荐（国内被墙）</td></tr></tbody></table><p>网盘：</p><table><thead><tr><th align="center">Github Pages</th><th align="center">Vercel</th></tr></thead><tbody><tr><td align="center"><a href="//for-the-zero.github.io/MyDrive">link</a></td><td align="center"><a href="//ftz-drive.vercel.app">link</a></td></tr></tbody></table><hr><p>联系作者：</p><table><thead><tr><th align="center">平台</th><th align="center">链接或id</th></tr></thead><tbody><tr><td align="center">哔哩哔哩</td><td align="center">for_the_zero</td></tr><tr><td align="center">邮箱</td><td align="center"><a href="mailto:forthezero@outlook.com">forthezero@outlook.com</a></td></tr><tr><td align="center">GitHub</td><td align="center">for-the-zero</td></tr><tr><td align="center">稽木世界(scratch社区,不怎么玩了)</td><td align="center">forthezero</td></tr><tr><td align="center">推特（X）</td><td align="center">for_the_zero</td></tr><tr><td align="center">别的</td><td align="center">我想想</td></tr></tbody></table><hr><p>其他看<a href="/2023/Test-1/">上一篇</a>和<a href="/2023/%E6%9D%A5%E4%BA%A4%E4%B8%AA%E5%8F%8B%E5%90%A7/">这篇</a></p>]]></content>
    
    
    <categories>
      
      <category>站点</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>终于搭好了</title>
    <link href="/2023/Test-1/"/>
    <url>/2023/Test-1/</url>
    
    <content type="html"><![CDATA[<h4 id="终于把这玩意搭建好了"><a href="#终于把这玩意搭建好了" class="headerlink" title="终于把这玩意搭建好了"></a><strong>终于</strong>把这玩意搭建好了</h4><p>使用了Hexo和Github Pages</p><p>主题是fluid</p><hr><p>最近改了一些blog，发现这么多bug和不及时更新的内容</p>]]></content>
    
    
    <categories>
      
      <category>站点</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
