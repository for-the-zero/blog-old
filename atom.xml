<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>for_the_zero 的破站</title>
  
  
  <link href="https://for-the-zero.github.io/atom.xml" rel="self"/>
  
  <link href="https://for-the-zero.github.io/"/>
  <updated>2023-05-13T09:46:28.353Z</updated>
  <id>https://for-the-zero.github.io/</id>
  
  <author>
    <name>for_the_zero</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自述</title>
    <link href="https://for-the-zero.github.io/2023/05/02/%E8%87%AA%E8%BF%B0/"/>
    <id>https://for-the-zero.github.io/2023/05/02/%E8%87%AA%E8%BF%B0/</id>
    <published>2023-05-02T04:13:27.000Z</published>
    <updated>2023-05-13T09:46:28.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自述"><a href="#自述" class="headerlink" title="自述"></a>自述</h1><p>说说我自己吧。就说说初一之前的，后面几乎没什么事可写的。</p><hr><h2 id="小学前"><a href="#小学前" class="headerlink" title="小学前"></a>小学前</h2><h3 id="1-玩玩具起冲突"><a href="#1-玩玩具起冲突" class="headerlink" title="1. 玩玩具起冲突"></a>1. 玩玩具起冲突</h3><p>很小很小的时候，现在不记得多少事了，但我还记得这个。</p><p>外婆带我去邻居家和邻居小孩玩玩具，忘了发生什么了，起了冲突，打起来了，我们被外婆拉开，同时在哭闹。</p><p>突然，一辆玩具车重重地拍到我脸上，直接流了鼻血，很生气……</p><h3 id="2-断鼻？"><a href="#2-断鼻？" class="headerlink" title="2. 断鼻？"></a>2. 断鼻？</h3><p>忘了什么时候，记得父母说我的鼻梁断了，具体是为什么，我也不知道为什么断了，我怀疑可能是上面那件事</p><p>摸起来，我的鼻梁有一块突出，左右挤压时很软，可以压得很下去。</p><p>没什么感觉，就是（可能）后遗症多了点</p><h3 id="3-摔下楼梯"><a href="#3-摔下楼梯" class="headerlink" title="3. 摔下楼梯"></a>3. 摔下楼梯</h3><p>爸爸去外面，妈妈洗澡，吃水果没事干，想起楼梯旁有个按钮不知道干嘛的，不够高，搬凳子上去，按了没反应，准备下去，结果凳子翻了，从楼上摔下来。第二天整个头都包扎了，现在摸起来感觉有一边头大了点。</p><h2 id="小学及以后"><a href="#小学及以后" class="headerlink" title="小学及以后"></a>小学及以后</h2><h3 id="1-被欺凌"><a href="#1-被欺凌" class="headerlink" title="1. 被欺凌"></a>1. 被欺凌</h3><p>忘了几年级遇上一<ruby>个<rt>zhī</rt></ruby>同桌，成了我小学半个遗憾。</p><p>它不是打架，而是言语欺凌，伤害是在心里的。</p><p>它取的外号有的是把我不可控制的缺点放大，但还有<strong>编的</strong>，还很<strong>低俗</strong>，甚至<strong>变态</strong>，90岁老奶奶都出来了……</p><p>有三种解决方法，我使用的依次是：</p><ol><li>但是我有种“人人平等，伤我一下还你一下”的观念，他说一句打它一下，它觉得它是对的，打回我，没完没了了，最终闹大叫家长。上课还好，下课我跑不过它。</li><li>有一次我决定找老师，希望和平解决，结果老师站它那边，“大事化小，小事化了”，说“很正常” “没什么大不了的” “管它干什么呢”……还是回归了第一种方法，但这也让他更得意了。</li><li>学校发了个废纸本（知识宣传小厕纸），有一本是关于校园欺凌的，我找到对应的类别照做了（不理他，让它失去欺负我的趣味，转移目标），结果真的成功了</li></ol><h3 id="2-摔跤"><a href="#2-摔跤" class="headerlink" title="2. 摔跤"></a>2. 摔跤</h3><p>那天中午，大家在学校的空地里等家长，本来还是晴的，突然下起雨，而且还很大，变化得很快。</p><p>所有人都在往大厅跑，我也跟着跑了。</p><p>突然，我的脚被绊倒了，应该是被人绊倒的，本能保护自己，用膝盖和肘支撑。</p><p>这几个点都受了很大的伤，最重的是左膝，一大片都是血，脚无法直立……太痛了……</p><h3 id="3-住院"><a href="#3-住院" class="headerlink" title="3. 住院"></a>3. 住院</h3><p>住一次院没什么的，但几年内一年一次呢？主要是肺炎和哮喘（新冠是后来的事）</p><h3 id="4-小学毕业"><a href="#4-小学毕业" class="headerlink" title="4. 小学毕业"></a>4. 小学毕业</h3><p>朋友认识的不多，友情也不够深，后来甚至失去联系，挺想念的，这算是我小学另一半遗憾吧。</p><h3 id="5-撞破头"><a href="#5-撞破头" class="headerlink" title="5. 撞破头"></a>5. 撞破头</h3><p>初一时一不小心头往墙上窗户的拐角撞了上去，挺重的，瞬间耳鸣，流了一点血，后来缝了两针。</p><p><del>横向的伤口加上两条竖向的针口线好像一个艹啊</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自述&quot;&gt;&lt;a href=&quot;#自述&quot; class=&quot;headerlink&quot; title=&quot;自述&quot;&gt;&lt;/a&gt;自述&lt;/h1&gt;&lt;p&gt;说说我自己吧。就说说初一之前的，后面几乎没什么事可写的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;小学前&quot;&gt;&lt;a href=&quot;#小学前&quot; clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>没有手机号？教你玩上chatGPT</title>
    <link href="https://for-the-zero.github.io/2023/05/01/%E6%B2%A1%E6%9C%89%E6%89%8B%E6%9C%BA%E5%8F%B7%EF%BC%9F%E6%95%99%E4%BD%A0%E7%8E%A9%E4%B8%8AchatGPT/"/>
    <id>https://for-the-zero.github.io/2023/05/01/%E6%B2%A1%E6%9C%89%E6%89%8B%E6%9C%BA%E5%8F%B7%EF%BC%9F%E6%95%99%E4%BD%A0%E7%8E%A9%E4%B8%8AchatGPT/</id>
    <published>2023-05-01T14:32:00.000Z</published>
    <updated>2023-05-02T04:12:54.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="没有手机号？教你玩上chatGPT"><a href="#没有手机号？教你玩上chatGPT" class="headerlink" title="没有手机号？教你玩上chatGPT"></a>没有手机号？教你玩上chatGPT</h1><p>我有两个方法，可点击左侧目录按钮跳转。</p><h2 id="1-chatSonic-要科学上网"><a href="#1-chatSonic-要科学上网" class="headerlink" title="1. chatSonic(要科学上网)"></a>1. <a href="https://writesonic.com/">chatSonic</a>(要科学上网)</h2><p>writesonic是一个ai写作工具，上线了chatGPT功能，叫chatSonic</p><p>登录方式：邮箱、谷歌等，无需手机号</p><p>首页点击chatSonic即可</p><p>免费限制10000词</p><h2 id="2-潘多拉"><a href="#2-潘多拉" class="headerlink" title="2. 潘多拉"></a>2. <a href="https://chat-shared.zhile.io/shared.html">潘多拉</a></h2><p>利用openai隐藏的登录方式弄的</p><p>有多个共享账号供大家使用</p><p>限制1条10秒，用的人太多会报错</p><p><img src="/img/pdl.png" alt="upload successful"></p><p><img src="/img/pdl-chatgpt.png" alt="upload successful"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;没有手机号？教你玩上chatGPT&quot;&gt;&lt;a href=&quot;#没有手机号？教你玩上chatGPT&quot; class=&quot;headerlink&quot; title=&quot;没有手机号？教你玩上chatGPT&quot;&gt;&lt;/a&gt;没有手机号？教你玩上chatGPT&lt;/h1&gt;&lt;p&gt;我有两个方法，可点击</summary>
      
    
    
    
    <category term="教程" scheme="https://for-the-zero.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="科技" scheme="https://for-the-zero.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
    <category term="chatGPT" scheme="https://for-the-zero.github.io/tags/chatGPT/"/>
    
  </entry>
  
  <entry>
    <title>想法</title>
    <link href="https://for-the-zero.github.io/2023/05/01/talking/"/>
    <id>https://for-the-zero.github.io/2023/05/01/talking/</id>
    <published>2023-05-01T13:57:00.000Z</published>
    <updated>2023-05-01T14:27:15.008Z</updated>
    
    <content type="html"><![CDATA[<p>（个人想法，可能有错）</p><h1 id="教育中有些不合理的地方"><a href="#教育中有些不合理的地方" class="headerlink" title="教育中有些不合理的地方"></a>教育中有些不合理的地方</h1><h2 id="扬短避长"><a href="#扬短避长" class="headerlink" title="扬短避长"></a>扬短避长</h2><p>人各有所长，亦各有所短</p><p>我们应发扬自己的长处，将长处放大，让长处覆盖短处，而不是把更少的长处和更少的短处放在一起，要把所有科目变为长处，不就成了“六边形战士”了？</p><p>只看到一个人的缺点就说他不行，只有看到更多项优点才行，这合理吗？</p><p>我记得在某本语文练习册或试卷上有篇阅读，内容是扬长避短。他举了个例子（凭记忆，懒得搜）：一个木匠连自己的床都修不好，却声称能盖房子，收的钱更多，别人不信，后来在一处工地看到了他，他在指挥建房，指挥有当，及其擅长。</p><p>再拿我来说。我近几年经常患肺炎和哮喘，每次体测1000米跑完腿脚酸痛，呼吸不畅，还是远低于及格线（及格&#x3D;满分）一分多。在写作上，你说我文笔不好，确实，很多文章都挺烂的，你说我文笔好，也确实，一两个擅长类型的文章都挺好的……</p><h2 id="脱离社会"><a href="#脱离社会" class="headerlink" title="脱离社会"></a>脱离社会</h2><p>天天在学校的笼子里，没见过外面的一些东西。</p><p>如果你是学生，回答一下：你附近的超市里牛肉一斤卖多少。<br>应该很多人回答不上，至少包括我。</p><p>有一件事：物理试卷上有到送分的计算题，第一小问问限速多少，图片给出一个圆圈圈着80（限速80km&#x2F;h），有人空了整道题（后面两问需要第一问），说没给限速是多少，怎么算，还问那个标志是什么意思……</p><h2 id="成绩决定一切"><a href="#成绩决定一切" class="headerlink" title="成绩决定一切"></a>成绩决定一切</h2><p>成绩是算所有科目总分的，从扬长避短的角度出发，也有些不合理</p><p>而且我见过这些人：一个上课认真，考试紧张、粗心、急，错了不少，成绩不怎么好；另一个上课打打闹闹，考试成绩优秀……</p><p>我觉得应该评判不该是考试，而是随时随地，但也有很多问题，例如主观性、方式、故意表现。教育真的没那么简单</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;（个人想法，可能有错）&lt;/p&gt;
&lt;h1 id=&quot;教育中有些不合理的地方&quot;&gt;&lt;a href=&quot;#教育中有些不合理的地方&quot; class=&quot;headerlink&quot; title=&quot;教育中有些不合理的地方&quot;&gt;&lt;/a&gt;教育中有些不合理的地方&lt;/h1&gt;&lt;h2 id=&quot;扬短避长&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="其它" scheme="https://for-the-zero.github.io/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>一种迷宫的介绍</title>
    <link href="https://for-the-zero.github.io/2023/01/15/%E4%B8%80%E4%B8%AA%E8%BF%B7%E5%AE%AB%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
    <id>https://for-the-zero.github.io/2023/01/15/%E4%B8%80%E4%B8%AA%E8%BF%B7%E5%AE%AB%E7%9A%84%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-01-15T06:39:00.000Z</published>
    <updated>2023-01-19T08:00:50.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一种迷宫的介绍"><a href="#一种迷宫的介绍" class="headerlink" title="一种迷宫的介绍"></a>一种迷宫的介绍</h1><p>这个迷宫不是简单的迷宫，我和同学加过很多内容</p><p>我为什么要做这个：我有一个同学，是我的好朋友，在无聊的时候我们会在纸上玩点东西，例如井字棋，后来我们玩起了迷宫，并且不断地增加东西使它<del>更难</del>更好玩。只可惜到后来我们到了不同的学校，从此再也没有联系过，我挺想念他的……</p><hr><p>这个迷宫的介绍分为这几个内容：</p><ol><li><p><a href="#%E5%9F%BA%E7%A1%80%E7%90%86%E5%BF%B5">基础理念</a></p></li><li><p><a href="#%E6%A8%A1%E5%9D%97">模块</a></p></li><li><p><a href="#%E5%85%B6%E4%BB%96">其他</a></p></li></ol><p>其中模块分为：</p><ol><li><p>常用模块&#x2F;不常用模块（根据后来的使用频率分类）</p></li><li><p>一般模块&#x2F;特殊模块（根据模块的外观类型分类）</p></li></ol><hr><h2 id="基础理念"><a href="#基础理念" class="headerlink" title="基础理念"></a>基础理念</h2><table><thead><tr><th align="left">内容</th><th align="center">图</th></tr></thead><tbody><tr><td align="left">首先，我们要把它现象为三维的很多桥，不可以跳上也不可以跳下</td><td align="center"><img src="/img/2023-01-16-17-13-26-image.png" alt="鼠标好难画啊"></td></tr><tr><td align="left">它可以分叉、重叠（但必须窄的在上）等，宽窄和高度可以变换</td><td align="center"><img src="/img/2023-01-16-17-19-09-image.png" alt="看得见我吗"></td></tr><tr><td align="left">两侧可以合并</td><td align="center"><img src="/img/2023-01-16-17-25-59-image.png"></td></tr><tr><td align="left">套娃不止可以套一点点</td><td align="center"><img src="/img/2023-01-16-17-29-42-image.png"></td></tr><tr><td align="left">可以在路中像这样分离出来</td><td align="center"><img src="/img/2023-01-17-16-35-46-image.png"></td></tr></tbody></table><p>起点和终点：</p><table><thead><tr><th align="left">内容</th><th align="center">图</th></tr></thead><tbody><tr><td align="left">圆圈加箭头，方向标示起点与终点</td><td align="center"><img src="/img/2023-01-17-16-38-26-image.png"></td></tr><tr><td align="left">可以有多个起点与终点</td><td align="center"><img src="/img/2023-01-17-16-40-19-image.png"></td></tr><tr><td align="left">一个并不一定只表示起点或终点，也可以都表示，如图</td><td align="center"><img src="/img/2023-01-17-16-42-44-image.png"></td></tr></tbody></table><hr><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p>一般模块：圈里带着其他内容或类似的</p><p>这里以使用频率分类，再到类型：</p><ol><li><p><a href="#%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97">常用模块</a></p></li><li><p><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97">不常用模块</a></p></li></ol><h3 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h3><p>以类型分类：</p><ol><li><p><a href="#%E5%B8%B8%E7%94%A8%E4%B8%80%E8%88%AC%E6%A8%A1%E5%9D%97">常用一般模块</a></p></li><li><p><a href="#%E5%B8%B8%E7%94%A8%E7%89%B9%E6%AE%8A%E6%A8%A1%E5%9D%97">常用特殊模块</a></p></li></ol><h4 id="常用一般模块"><a href="#常用一般模块" class="headerlink" title="常用一般模块"></a>常用一般模块</h4><h5 id="字母传送"><a href="#字母传送" class="headerlink" title="字母传送"></a>字母传送</h5><p>圈里只带着字母，大写A~Z，最多26对，一对只能有两个，可以传送到另一个同字母的字母传送点</p><h5 id="飞机传送"><a href="#飞机传送" class="headerlink" title="飞机传送"></a>飞机传送</h5><p>一个简笔画飞机图标(如图)，并带一条传送线到另一个相同的图标</p><p>传送线不可以交叉，但是传送线和路之间可以交叉，只不过在交叉时要把路在表面上断开，实际上还是连接着的</p><p><img src="/img/2023-01-17-17-30-23-image.png"></p><p>后来我发现一个较为类似的东西：</p><p><img src="/img/6b57bb3dbb9c1d1929d0aa99c5647fba8bc09f49.gif"></p><h5 id="同标传送"><a href="#同标传送" class="headerlink" title="同标传送"></a>同标传送</h5><p>长这样，可以传送到任意一个相同标志的传送点</p><p><img src="/img/2023-01-17-17-35-01-image.png"></p><h4 id="常用特殊模块"><a href="#常用特殊模块" class="headerlink" title="常用特殊模块"></a>常用特殊模块</h4><h5 id="网状线条传送"><a href="#网状线条传送" class="headerlink" title="网状线条传送"></a>网状线条传送</h5><p>将路的一头接上正方形的传送方块。传送方块可以接入路或传送线，一共最多4个，至少一个，不能重叠，只能在4面延展</p><p>由传送方块和传送线组成的传送网络中我们可以快速移动到这个传送网络中接入的任意一条路</p><p><img src="/img/2023-01-17-17-10-53-image.png"></p><p>传送线不可以交叉，但是传送线和路之间可以交叉，只不过在交叉时要把路在表面上断开，实际上还是连接着的</p><p><img src="/img/2023-01-17-17-16-12-image.png"></p><p>后来我发现一个较为类似的东西：</p><p><img src="/img/fe9f394a0c78acd074c80c5044f7a386ab7ecb2e.gif"></p><h5 id="隧道"><a href="#隧道" class="headerlink" title="隧道"></a>隧道</h5><p>顾名思义，就是路在地里</p><p>地里的路用虚线表示，用一跟长于路宽的直<del>(的)</del>线<del>(段)</del>截断</p><p><img src="/img/2023-01-18-18-06-31-image.png"></p><p>在复杂的情况下可能比较难辨认，所以不能重叠</p><h5 id="单向门"><a href="#单向门" class="headerlink" title="单向门"></a>单向门</h5><p>顾名思义，只能单向通过，如图</p><p><img src="/img/2023-01-18-18-10-48-image.png"></p><h5 id="直线隔空传送"><a href="#直线隔空传送" class="headerlink" title="直线隔空传送"></a>直线隔空传送</h5><p><img src="/img/2023-01-18-18-14-17-image.png"></p><p>样式如图</p><p>传送端是胶囊状的，内侧是同心圆，外侧是方向指示，箭头方向可变</p><p>被传送端在路头有方向指示，箭头方向可变</p><p>在同迷宫中两个箭头能接上才能传送</p><p>中间什么都可以有</p><h3 id="不常用模块"><a href="#不常用模块" class="headerlink" title="不常用模块"></a>不常用模块</h3><p>以类型分类：</p><ol><li><p><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E4%B8%80%E8%88%AC%E6%A8%A1%E5%9D%97">不常用一般模块</a></p></li><li><p><a href="#%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%89%B9%E6%AE%8A%E6%A8%A1%E5%9D%97">不常用特殊模块</a></p></li></ol><h4 id="不常用一般模块"><a href="#不常用一般模块" class="headerlink" title="不常用一般模块"></a>不常用一般模块</h4><h5 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h5><p>圆圈+字母”T”+编号（从1开始）</p><p>在一旁用虚线划出注释区，在里面用 “T”+编号+”:”+内容 写出你要写的</p><p><img src="/img/2023-01-18-18-30-40-image.png"></p><h5 id="圈内传送"><a href="#圈内传送" class="headerlink" title="圈内传送"></a>圈内传送</h5><p>（自己看吧</p><p><img src="/img/2023-01-18-21-45-07-image.png"></p><p>左边的：在圈内的路<strong>可以</strong>传送到中间</p><p>右边的：传送到任意一条在圈内的路</p><p>圈可以用浅颜色或超细的线表示</p><h5 id="电池"><a href="#电池" class="headerlink" title="电池"></a>电池</h5><p>限时完成片段（默认5秒，可额外标记）</p><p>以一个满电电池图标开启并开始计时，没电电池图标关闭，插头图标重置时间</p><p><img src="/img/2023-01-18-20-32-22-image.png"></p><h5 id="三角翻面"><a href="#三角翻面" class="headerlink" title="三角翻面"></a>三角翻面</h5><p><img src="/img/2023-01-18-20-34-10-image.png">&lt;—– 翻面图标：三角形，但是上面有断口</p><p>就想象重力颠倒。到了同一条路的另一面，起点终点只在正面</p><p>或者这样理解：定义变量a，起点时a为0，遇到一个就<code>a = 1 - a</code>(0变1 1变0)，到终点时<code>a == 0</code>才行</p><h5 id="三角计算"><a href="#三角计算" class="headerlink" title="三角计算"></a>三角计算</h5><p><del>（列到一般模块有点勉强）</del></p><p>自己定义4个整数类型变量<code>tc_up</code> <code>tc_down</code> <code>tc_lift</code> <code>tc_right</code> 分别为上下左右，默认值为0，不能为负</p><table><thead><tr><th></th><th align="center">上</th><th align="center">下</th><th align="center">左</th><th align="center">右</th></tr></thead><tbody><tr><td>+ 1</td><td align="center"><img src="/img/2023-01-18-20-52-30-image.png"></td><td align="center"><img src="/img/2023-01-18-20-52-53-image.png"></td><td align="center"><img src="/img/2023-01-18-20-53-06-image.png"></td><td align="center"><img src="/img/2023-01-18-20-53-32-image.png"></td></tr><tr><td>- 1</td><td align="center"><img src="/img/2023-01-18-20-56-17-image.png"></td><td align="center"><img src="/img/2023-01-18-20-56-32-image.png"></td><td align="center"><img src="/img/2023-01-18-20-56-50-image.png"></td><td align="center"><img src="/img/2023-01-18-20-57-07-image.png"></td></tr></tbody></table><p>终点对它没要求，但锁有</p><p>锁：当上面的满足所有条件时才能通过（通过后不会清零），由锁+编号组成，</p><p>到注释区标注</p><p><img src="/img/2023-01-18-21-35-38-image.png"></p><h5 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h5><p><del>（朋友不会玩建议加的）</del></p><p><img src="/img/2023-01-18-21-38-00-image.png">&lt;—– 圈中”Tips”</p><p>可获得作者正确的提示</p><h4 id="不常用特殊模块"><a href="#不常用特殊模块" class="headerlink" title="不常用特殊模块"></a>不常用特殊模块</h4><h5 id="平行世界"><a href="#平行世界" class="headerlink" title="平行世界"></a>平行世界</h5><p>用不同颜色画，各自独立，可以当作两个独立的迷宫，可以重叠</p><p><img src="/img/2023-01-18-21-52-28-image.png"></p><p>但也可以转换：如图</p><p><img src="/img/2023-01-18-21-55-25-image.png"></p><h5 id="水池"><a href="#水池" class="headerlink" title="水池"></a>水池</h5><p>可插入路，根据水池方向，只上不下（可以同高度）</p><p><img src="/img/2023-01-18-22-00-14-image.png"></p><h5 id="二值"><a href="#二值" class="headerlink" title="二值"></a>二值</h5><p>（<del><em><strong>新什么冠！</strong></em></del></p><p>分别是阴和阳，又是一个变量，和<a href="#%E4%B8%89%E8%A7%92%E7%BF%BB%E9%9D%A2">三角翻面</a>差不多但又有区别</p><table><thead><tr><th>描述</th><th align="center">图</th></tr></thead><tbody><tr><td>转阴</td><td align="center"><img src="/img/2023-01-18-22-06-45-image.png"></td></tr><tr><td>转羊</td><td align="center"><img src="/img/2023-01-18-22-07-32-image.png"></td></tr></tbody></table><p>阴时不能通过转阴，阳时不能通过转阳</p><p>起点和终点都是阳</p><p>突变转换：跳过”阴不转阴，阳不转阳”的单向转换结构</p><p>会分出五条路，被浅分割线分割的，三个一边的是阴，两个一边的是阳</p><p>浅分割线用浅颜色或超细的线表示</p><p><img src="/img/2023-01-18-22-13-41-image.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>如果是在本子上画，可以画出一些花样</p><ol><li><p>把纸挖空一部分，盖上这页字和翻开这页字都走得通</p></li><li><p>画到纸的边缘，另一面接着</p></li><li><p>两张纸中间也可以续</p></li><li><p>使用向后传送门传送到纸张背后同一位置 <img src="/img/2023-01-18-22-21-30-image.png"></p></li><li><p>折一下纸，让它无论是打开还是关闭、翻到左边还是右边都能接上</p></li><li><p>可以无解（不建议</p></li><li><p>……</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一种迷宫的介绍&quot;&gt;&lt;a href=&quot;#一种迷宫的介绍&quot; class=&quot;headerlink&quot; title=&quot;一种迷宫的介绍&quot;&gt;&lt;/a&gt;一种迷宫的介绍&lt;/h1&gt;&lt;p&gt;这个迷宫不是简单的迷宫，我和同学加过很多内容&lt;/p&gt;
&lt;p&gt;我为什么要做这个：我有一个同学，是我的好</summary>
      
    
    
    
    <category term="其他" scheme="https://for-the-zero.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="其他" scheme="https://for-the-zero.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>DearPyGui笔记</title>
    <link href="https://for-the-zero.github.io/2023/01/14/DearPyGui%E7%AC%94%E8%AE%B0/"/>
    <id>https://for-the-zero.github.io/2023/01/14/DearPyGui%E7%AC%94%E8%AE%B0/</id>
    <published>2023-01-14T12:20:00.000Z</published>
    <updated>2023-01-14T12:21:55.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DearPyGui-笔记"><a href="#DearPyGui-笔记" class="headerlink" title="DearPyGui 笔记"></a>DearPyGui 笔记</h1><p>一个好用的 Python GUI模块</p><p>基于原文档总结出来的</p><hr><hr><h1 id="没有的内容"><a href="#没有的内容" class="headerlink" title="没有的内容"></a>没有的内容</h1><p>（原版文档看不懂的）<br><a href="https://dearpygui.readthedocs.io/en/latest/documentation/container-slots.html#slots">Slots</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/container-slots.html#basic-example">Basic Example</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/container-stack.html">Container Stack</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/drawing-api.html#scene-graph">Scene Graph</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/drawing-api.html#d-operations">3D Operations</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/plots.html#querying">querying</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/plots.html#custom-series">custom series</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/tables.html#resizing">resizing</a> <strong>·</strong> <a href="https://dearpygui.readthedocs.io/en/latest/documentation/tables.html#stretch">stretch</a> <strong>·</strong> …</p><hr><hr><h1 id="总体"><a href="#总体" class="headerlink" title="总体"></a>总体</h1><hr><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="主脚本必须始终"><a href="#主脚本必须始终" class="headerlink" title="主脚本必须始终"></a>主脚本必须始终</h3><table><thead><tr><th align="center">事件</th><th align="left">代码</th><th align="center">注释</th></tr></thead><tbody><tr><td align="center">导入</td><td align="left"><code>import dearpygui.dearpygui as dpg</code></td><td align="center"></td></tr><tr><td align="center">创建上下文</td><td align="left"><code>dpg.create_context()</code></td><td align="center">如果不是第一个 DPG不会启动&#x2F;崩溃</td></tr><tr><td align="center">创建窗口</td><td align="left"><code>with dpg.window(label=&quot;</code>标题<code>&quot;): </code><br />    组件</td><td align="center"></td></tr><tr><td align="center">创建视区</td><td align="left"><code>dpg.create_viewport(title=&#39;</code>大窗口标题<code>&#39;, width=</code>宽<code>, height=</code>高<code>)</code></td><td align="center">需要使用create_viewport创建该视区 并使用show_viewport显示</td></tr><tr><td align="center">设置dearpygui</td><td align="left"><code>dpg.setup_dearpygui()</code></td><td align="center"></td></tr><tr><td align="center">显示该视口中</td><td align="left"><code>dpg.show_viewport()</code></td><td align="center"></td></tr><tr><td align="center">启动dearpygui</td><td align="left"><code>dpg.start_dearpygui()</code></td><td align="center"></td></tr><tr><td align="center">清理环境</td><td align="left"><code>dpg.destroy_context()</code></td><td align="center"></td></tr></tbody></table><h3 id="创建窗口"><a href="#创建窗口" class="headerlink" title="创建窗口"></a>创建窗口</h3><p><code>with dpg.window(label=&quot;</code>标题<code>&quot;, pos=</code>位置（数组）<code>):</code>+组件</p><h3 id="导入窗口"><a href="#导入窗口" class="headerlink" title="导入窗口"></a>导入窗口</h3><table><thead><tr><th align="center">直接</th><th align="center">间接</th></tr></thead><tbody><tr><td align="center"><img src="https://tikolu.net/i/dkpge"></td><td align="center"><img src="https://tikolu.net/i/mgune"></td></tr><tr><td align="center">在<code>create_context</code>与<code>create_viewport</code>中间用<code>from xxx import *</code></td><td align="center">使用文件写入自定义</td></tr></tbody></table><h4 id="被导入文件内容"><a href="#被导入文件内容" class="headerlink" title="被导入文件内容"></a>被导入文件内容</h4><p>（可能）只需要<code>import dearpygui.dearpygui as dpg</code>和窗口内容</p><h4 id="使用文件写入自定义"><a href="#使用文件写入自定义" class="headerlink" title="使用文件写入自定义"></a>使用文件写入自定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./helper.py&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:   <span class="comment"># healper.py 是用于帮助导入的文件</span></span><br><span class="line">    f.write(<span class="string">&#x27;from &#123;file&#125; import *&#x27;</span>.<span class="built_in">format</span>(file=<span class="string">&#x27;testing&#x27;</span>))   <span class="comment"># 写入（间接导入）</span></span><br><span class="line"><span class="keyword">from</span> helper <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><h3 id="主窗口（不必要）"><a href="#主窗口（不必要）" class="headerlink" title="主窗口（不必要）"></a>主窗口（不必要）</h3><p>将填充该视口并始终绘制在其他窗口的后面且铺满视图，自动去除标题栏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(tag=<span class="string">&quot;Primary Window&quot;</span>):</span><br><span class="line">...</span><br><span class="line">dpg.show_viewport()</span><br><span class="line">dpg.set_primary_window(<span class="string">&quot;Primary Window&quot;</span>, <span class="literal">True</span>)</span><br><span class="line">dpg.start_dearpygui()</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dearpygui.dearpygui <span class="keyword">as</span> dpg</span><br><span class="line"></span><br><span class="line">dpg.create_context()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Example Window&quot;</span>, width=<span class="number">500</span>, height=<span class="number">150</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;Hello, world&quot;</span>)</span><br><span class="line"></span><br><span class="line">dpg.create_viewport(title=<span class="string">&#x27;Custom Title&#x27;</span>, width=<span class="number">600</span>, height=<span class="number">200</span>)  <span class="comment"># create viewport takes in config options too!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># must be called before showing viewport</span></span><br><span class="line">dpg.set_viewport_small_icon(<span class="string">&quot;path/to/icon.ico&quot;</span>)</span><br><span class="line">dpg.set_viewport_large_icon(<span class="string">&quot;path/to/icon.ico&quot;</span>)</span><br><span class="line"></span><br><span class="line">dpg.setup_dearpygui()</span><br><span class="line">dpg.show_viewport()</span><br><span class="line">dpg.start_dearpygui()</span><br><span class="line">dpg.destroy_context()</span><br></pre></td></tr></table></figure><ul><li><code>dpg.set_viewport_large_icon()</code>设置大图标</li><li><code>dpg.set_viewport_small_icon()</code>设置小图标</li></ul><hr><h2 id="组件：辅助"><a href="#组件：辅助" class="headerlink" title="组件：辅助"></a>组件：辅助</h2><h3 id="标签系统（tag）"><a href="#标签系统（tag）" class="headerlink" title="标签系统（tag）"></a>标签系统（tag）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    b0 = dpg.add_button(label=<span class="string">&quot;button 0&quot;</span>)</span><br><span class="line">    b1 = dpg.add_button(tag=<span class="number">100</span>, label=<span class="string">&quot;Button 1&quot;</span>)</span><br><span class="line">    dpg.add_button(tag=<span class="string">&quot;Btn2&quot;</span>, label=<span class="string">&quot;Button 2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b0)</span><br><span class="line"><span class="built_in">print</span>(b1)</span><br><span class="line"><span class="built_in">print</span>(dpg.get_item_label(<span class="string">&quot;Btn2&quot;</span>))</span><br></pre></td></tr></table></figure><ol><li><code>xxx = dpg.add_xxx(...)</code></li><li><code>unique_tag = dpg.generate_uuid()   # 在 create_context 前</code> <code>dpg.add_xxx(... , tag=xxx)</code></li></ol><ul><li>可以赋值给变量</li><li>可以添加tag（<code>dpg.get_item_label()</code>调用）</li><li>所有项目都必须具有关联的唯一ID(UUID)，该ID可以是整数或字符串</li><li>创建项目时会自动生成标签，如果以后与组件交互，则存储此标签</li><li><code>dpg.last_</code> { item(组件) , container(容器) , root(根) } <code>()</code> 获取最新的对应项</li></ul><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Button 1&quot;</span>)</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Button 2&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> dpg.group():</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;Button 3&quot;</span>)</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;Button 4&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> dpg.group() <span class="keyword">as</span> group1:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">dpg.add_button(label=<span class="string">&quot;Button 6&quot;</span>, parent=group1)</span><br><span class="line">dpg.add_button(label=<span class="string">&quot;Button 5&quot;</span>, parent=group1)</span><br></pre></td></tr></table></figure><ul><li>在<code>with dpg.group():</code>内添加组件到组</li><li>也可以在外部<code>dpg.add_</code>…<code>(</code>…<code>parent=</code>容器名<code>)</code></li></ul><h3 id="编辑属性"><a href="#编辑属性" class="headerlink" title="编辑属性"></a>编辑属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btn = dpg.add_button(label=<span class="string">&quot;Apply 2&quot;</span>)   <span class="comment">#创建</span></span><br><span class="line">dpg.set_item_label(btn, <span class="string">&quot;Button 57&quot;</span>)   <span class="comment">#修改label(标签)</span></span><br><span class="line">dpg.set_item_width(btn, <span class="number">200</span>)   <span class="comment">#修改高度</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>get_item_</code>配置</td><td align="center">控制其外观和行为的关键字(标签、回调、宽度、高度)</td></tr><tr><td align="left"><code>get_item_</code>状态</td><td align="center">反映其交互的关键字(可见、悬停、点击等)</td></tr><tr><td align="left"><code>get_item_</code>信息</td><td align="center">反映其信息的关键字(项目类型、子项、主题等)</td></tr></tbody></table><h3 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">button_callback</span>(<span class="params">sender, app_data, user_data</span>):</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    <span class="comment"># 按钮创建时创建回调</span></span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Apply&quot;</span>, callback=button_callback, user_data=<span class="string">&quot;Some Data&quot;</span>)</span><br><span class="line">    <span class="comment"># 按钮创建后创建回调</span></span><br><span class="line">    btn = dpg.add_button(label=<span class="string">&quot;Apply 2&quot;</span>, )</span><br><span class="line">    dpg.set_item_callback(btn, button_callback)</span><br><span class="line">    dpg.set_item_user_data(btn, <span class="string">&quot;Some Extra User Data&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>用<code>callback</code>赋值函数创建</p><blockquote><p>输入函数：同位置赋值</p></blockquote></li><li><p>用<code>dpg.set_item_callback</code>链接</p><blockquote><p>输入函数：<code>set_item_</code>赋值以链接</p></blockquote></li></ul><table><thead><tr><th align="left">输入值</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left">sender</td><td align="center">发送回调组件的id</td></tr><tr><td align="left">app_data</td><td align="center">大多数为组件当前值</td></tr><tr><td align="left">user_data</td><td align="center">（可选）传输自己的数据<br /><code>    dpg.add_</code>xxx<code>(</code>…<code>callback=</code>…<code>, user_data=</code>…<code>)</code><br /><code>dpg.set_item_user_data()</code></td></tr></tbody></table><ul><li>不在主线程上运行</li></ul><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dearpygui.dearpygui <span class="keyword">as</span> dpg</span><br><span class="line">dpg.create_context()</span><br><span class="line"></span><br><span class="line">dpg.configure_app(manual_callback_management=<span class="literal">True</span>)   <span class="comment">#设置</span></span><br><span class="line"></span><br><span class="line">dpg.create_viewport()</span><br><span class="line">dpg.setup_dearpygui()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">callback</span>(<span class="params">sender, app_data, user_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Called on the main thread!&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Press me&quot;</span>, callback=callback)</span><br><span class="line">    dpg.show_viewport()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主循环</span></span><br><span class="line"><span class="keyword">while</span> dpg.is_dearpygui_running():</span><br><span class="line">     jobs = dpg.get_callback_queue()   <span class="comment"># 获取</span></span><br><span class="line">     dpg.run_callbacks(jobs)   <span class="comment"># 运行</span></span><br><span class="line">     dpg.render_dearpygui_frame()</span><br><span class="line"></span><br><span class="line">dpg.destroy_context()</span><br></pre></td></tr></table></figure><ol><li>使用<code>dpg.configure_app(manual_callback_management=True)</code>设置</li><li>在主循环内用 xxx<code> = dpg.get_callback_queue()</code>获取</li><li>使用<code>dpg.run_callbacks(</code>xxx<code>)</code>运行</li></ol></blockquote><h3 id="组件值"><a href="#组件值" class="headerlink" title="组件值"></a>组件值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(width=<span class="number">300</span>):</span><br><span class="line">    input_txt = dpg.add_input_text(</span><br><span class="line">        label=<span class="string">&quot;InputTxt&quot;</span>,</span><br><span class="line">        default_value=<span class="string">&quot;This is a default value!&quot;</span>,   <span class="comment"># 默认值</span></span><br><span class="line">    )</span><br><span class="line">    slider_float = dpg.add_slider_float(</span><br><span class="line">        label=<span class="string">&quot;SliderFloat&quot;</span>,</span><br><span class="line">        default_value=<span class="number">50.0</span>,   <span class="comment"># 默认值</span></span><br><span class="line">    )</span><br><span class="line">    dpg.add_slider_int(default_value=<span class="number">15</span>, tag=<span class="string">&quot;slider_int&quot;</span>)</span><br><span class="line">    <span class="comment"># 获取值</span></span><br><span class="line">    <span class="built_in">print</span>(dpg.get_value(input_txt))</span><br><span class="line">    <span class="built_in">print</span>(dpg.get_value(slider_float))</span><br><span class="line">    </span><br><span class="line">dpg.set_value(<span class="string">&quot;slider_int&quot;</span>, <span class="number">40</span>)   <span class="comment"># 设置值</span></span><br></pre></td></tr></table></figure><ul><li>添加默认值：<code>default_value</code></li><li>获取值：<code>get_value(</code>赋值为组件的变量<code>)</code></li><li>设置值：<code>set_value(</code>tag<code>,</code>值<code>)</code></li></ul><h3 id="侦听与事件"><a href="#侦听与事件" class="headerlink" title="侦听与事件"></a>侦听与事件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">change_text</span>(<span class="params">sender, app_data</span>):</span><br><span class="line">    <span class="keyword">if</span> dpg.is_item_hovered(<span class="string">&quot;text item&quot;</span>):   <span class="comment">#组件侦听</span></span><br><span class="line">        dpg.set_value(<span class="string">&quot;text item&quot;</span>, <span class="string">f&quot;爬开!!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        dpg.set_value(<span class="string">&quot;text item&quot;</span>, <span class="string">f&quot;把鼠标放我上面!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.handler_registry():</span><br><span class="line">    dpg.add_mouse_move_handler(callback=change_text)   <span class="comment">#鼠标移动侦听</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(width=<span class="number">500</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;把鼠标放我上面!&quot;</span>, tag=<span class="string">&quot;text item&quot;</span>)   <span class="comment"># 添加文本</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">change_text</span>(<span class="params">sender, app_data</span>):</span><br><span class="line">    dpg.set_value(<span class="string">&quot;text item&quot;</span>, <span class="string">f&quot;Mouse Button ID: <span class="subst">&#123;app_data&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(width=<span class="number">500</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;Click me with any mouse button&quot;</span>, tag=<span class="string">&quot;text item&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> dpg.item_handler_registry(tag=<span class="string">&quot;widget handler&quot;</span>) <span class="keyword">as</span> handler:   <span class="comment"># 监听器设置</span></span><br><span class="line">        dpg.add_item_clicked_handler(callback=change_text)   <span class="comment"># 鼠标点击监听器并设置回调</span></span><br><span class="line">    dpg.bind_item_handler_registry(<span class="string">&quot;text item&quot;</span>, <span class="string">&quot;widget handler&quot;</span>)   <span class="comment"># 监听器绑定</span></span><br></pre></td></tr></table></figure><ul><li>设置监听器<code>with dpg.item_handler_registry(tag=&quot;</code>监听器名<code>&quot;) as handler:</code></li><li>添加事件<code>dpg.add_item_</code>…<code>_handler(callback=</code>回调<code>)</code></li><li>绑定监听器<code>dpg.bind_item_handler_registry(&quot;</code>组件tag<code>&quot;, &quot;</code>监听器tag<code>&quot;)</code></li></ul><p>组件事件：</p><table><thead><tr><th align="center">名称</th><th align="center">译意</th></tr></thead><tbody><tr><td align="center">Activated</td><td align="center">激活</td></tr><tr><td align="center">Active</td><td align="center">活跃</td></tr><tr><td align="center">Clicked</td><td align="center">点击</td></tr><tr><td align="center">Deactivated</td><td align="center">停用</td></tr><tr><td align="center">Deactivated After Edited</td><td align="center">编辑后停用</td></tr><tr><td align="center">Focus</td><td align="center">聚焦</td></tr><tr><td align="center">Hover</td><td align="center">悬停</td></tr><tr><td align="center">Resize</td><td align="center">调整大小</td></tr><tr><td align="center">Toggled</td><td align="center">切换</td></tr><tr><td align="center">Visible</td><td align="center">可见</td></tr></tbody></table><p>全局事件：</p><table><thead><tr><th align="center">名称</th><th align="center">译意</th></tr></thead><tbody><tr><td align="center">——Keys——</td><td align="center">——以下为键盘的操作——</td></tr><tr><td align="center">Down</td><td align="center">按下</td></tr><tr><td align="center">Press</td><td align="center">按（Down+Release）</td></tr><tr><td align="center">Release</td><td align="center">释放</td></tr><tr><td align="center">——Mouse——</td><td align="center">——以下为鼠标的操作——</td></tr><tr><td align="center">Click</td><td align="center">单击</td></tr><tr><td align="center">Double Click</td><td align="center">双击</td></tr><tr><td align="center">Down</td><td align="center">按下</td></tr><tr><td align="center">Drag</td><td align="center">拖动</td></tr><tr><td align="center">Move</td><td align="center">移动</td></tr><tr><td align="center">Release</td><td align="center">抬起</td></tr><tr><td align="center">Wheel</td><td align="center">滚轮</td></tr></tbody></table><h3 id="添加和删除组件"><a href="#添加和删除组件" class="headerlink" title="添加和删除组件"></a>添加和删除组件</h3><blockquote><p> 添加:回调<code>dpg.add_</code>xxx</p></blockquote><blockquote><p>删除：<code>dpg.delete_item(&quot;</code>tag<code>&quot;)</code></p><p>注：删除容器时，默认情况下会删除该容器及其子项，除非<code>delete_item</code>中<code>children_only</code>设置为True时不会删除该容器</p></blockquote><h3 id="属性编辑"><a href="#属性编辑" class="headerlink" title="属性编辑"></a>属性编辑</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(width=<span class="number">500</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_button(enabled=<span class="literal">True</span>, label=<span class="string">&quot;Press me&quot;</span>, tag=<span class="string">&quot;item&quot;</span>)</span><br><span class="line">    dpg.configure_item(<span class="string">&quot;item&quot;</span>, enabled=<span class="literal">False</span>, label=<span class="string">&quot;New Label&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><code>dpg.configure_item</code>编辑属性</li><li><code>dpg.get_item_configuration</code>获取属性（字典类型）</li></ul><h3 id="值注册器"><a href="#值注册器" class="headerlink" title="值注册器"></a>值注册器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.value_registry():</span><br><span class="line">    dpg.add_bool_value(default_value=<span class="literal">True</span>, tag=<span class="string">&quot;bool_value&quot;</span>)</span><br><span class="line">    dpg.add_string_value(default_value=<span class="string">&quot;Default string&quot;</span>, tag=<span class="string">&quot;string_value&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_checkbox(label=<span class="string">&quot;Radio Button1&quot;</span>, source=<span class="string">&quot;bool_value&quot;</span>)</span><br><span class="line">    dpg.add_checkbox(label=<span class="string">&quot;Radio Button2&quot;</span>, source=<span class="string">&quot;bool_value&quot;</span>)</span><br><span class="line"></span><br><span class="line">    dpg.add_input_text(label=<span class="string">&quot;Text Input 1&quot;</span>, source=<span class="string">&quot;string_value&quot;</span>)</span><br><span class="line">    dpg.add_input_text(label=<span class="string">&quot;Text Input 2&quot;</span>, source=<span class="string">&quot;string_value&quot;</span>, password=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><ul><li>在<code>with dpg.value_register():</code>中定义</li><li>定义：<code>dpg.add_</code>类型{ bool(布尔) , string(字符串) }<code>_value(default_value=</code>默认值<code>, tag=&quot;</code>tag<code>&quot;)</code></li><li>使用：<code>dpg.add_</code>xxx<code>(</code>…<code> , source=&quot;</code>对应的tag<code>&quot;)</code></li></ul><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dearpygui.dearpygui <span class="keyword">as</span> dpg</span><br><span class="line"></span><br><span class="line">dpg.create_context()</span><br><span class="line"><span class="comment"># start</span></span><br><span class="line">dpg.show_documentation()</span><br><span class="line">dpg.show_style_editor()</span><br><span class="line">dpg.show_debug()</span><br><span class="line">dpg.show_about()</span><br><span class="line">dpg.show_metrics()</span><br><span class="line">dpg.show_font_manager()</span><br><span class="line">dpg.show_item_registry()</span><br><span class="line"><span class="comment"># end</span></span><br><span class="line">dpg.create_viewport(title=<span class="string">&#x27;Custom Title&#x27;</span>, width=<span class="number">800</span>, height=<span class="number">600</span>)</span><br><span class="line">dpg.setup_dearpygui()</span><br><span class="line">dpg.show_viewport()</span><br><span class="line">dpg.start_dearpygui()</span><br><span class="line">dpg.destroy_context()</span><br></pre></td></tr></table></figure><p>其中几个：</p><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>dpg.show_style_editor()</code></td><td align="center">样式编辑器</td></tr><tr><td align="left"><code>dpg.show_item_registry()</code></td><td align="center">组件信息查看器</td></tr><tr><td align="left"><code>dpg.show_font_manager()</code></td><td align="center">字体管理器</td></tr><tr><td align="left"><code>dpg.show_metrics()</code></td><td align="center">性能监视器</td></tr></tbody></table><h3 id="渲染循环"><a href="#渲染循环" class="headerlink" title="渲染循环"></a>渲染循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dearpygui.dearpygui <span class="keyword">as</span> dpg</span><br><span class="line">dpg.create_context()</span><br><span class="line">dpg.create_viewport(title=<span class="string">&#x27;Custom Title&#x27;</span>, width=<span class="number">600</span>, height=<span class="number">200</span>)</span><br><span class="line">dpg.setup_dearpygui()</span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Example Window&quot;</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;Hello, world&quot;</span>)</span><br><span class="line">dpg.show_viewport()</span><br><span class="line"><span class="comment"># here ↓</span></span><br><span class="line"><span class="keyword">while</span> dpg.is_dearpygui_running():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;每一帧都会运行这里&quot;</span>)</span><br><span class="line">    dpg.render_dearpygui_frame()</span><br><span class="line"><span class="comment"># here ↑</span></span><br><span class="line">dpg.destroy_context()</span><br></pre></td></tr></table></figure><p><code>dpg.is_dearpygui_running()</code>判断 dpg 是否运行<br><code>dpg.render_dearpygui_frame()</code>让 dpg 渲染一帧</p><hr><hr><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><hr><h2 id="简单组件"><a href="#简单组件" class="headerlink" title="简单组件"></a>简单组件</h2><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>dpg.add_button(label=&quot;</code>名称<code>&quot;)</code></td><td align="center">按钮</td></tr><tr><td align="left"><code>dpg.add_slider_</code>int&#x2F;float<code>(label=&quot;</code>名称<code>&quot;, width=限制)</code></td><td align="center">滑块</td></tr><tr><td align="left"><code>dpg.add_text(&quot;</code>xxx<code>&quot;)</code></td><td align="center">文本</td></tr><tr><td align="left"><code>dpg.add_input_text(label=&quot;</code>xxx<code>&quot;)</code></td><td align="center">文本输入</td></tr><tr><td align="left"><code>dpg.add_checkbox(label=&quot;</code>xx<code>&quot;, callback=</code>xxx<code>)</code></td><td align="center">复选框</td></tr><tr><td align="left"><code>dpg.add_color_picker(label=&quot;</code>xxx<code>&quot;, callback=</code>xxx<code>)</code></td><td align="center">颜色选择</td></tr></tbody></table><h2 id="容器和上下文管理器"><a href="#容器和上下文管理器" class="headerlink" title="容器和上下文管理器"></a>容器和上下文管理器</h2><table><thead><tr><th>核心代码</th><th>上下文管理器</th><th align="center">翻译</th></tr></thead><tbody><tr><td><code>add_table</code></td><td><code>with table(…):</code></td><td align="center">表格</td></tr><tr><td><code>add_table_row</code></td><td><code>with table_row(…):</code></td><td align="center">表格_行</td></tr><tr><td><code>add_window</code></td><td><code>with window(…):</code></td><td align="center">窗口</td></tr><tr><td><code>add_menu_bar</code></td><td><code>with menu_bar(…):</code></td><td align="center">菜单栏</td></tr><tr><td><code>add_child</code></td><td><code>with child(…):</code></td><td align="center">子项</td></tr><tr><td><code>add_clipper</code></td><td><code>with clipper(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_collapsing_header</code></td><td><code>with collapsing_header(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_colormap_registry</code></td><td><code>with colormap_registry(…):</code></td><td align="center">color map 注册表 <code>？</code></td></tr><tr><td><code>add_group</code></td><td><code>with group(…):</code></td><td align="center">组</td></tr><tr><td><code>add_node</code></td><td><code>with node(…):</code></td><td align="center">节点 <code>？</code></td></tr><tr><td><code>add_node_attribute</code></td><td><code>with node_attribute(…):</code></td><td align="center">节点属性 <code>？</code></td></tr><tr><td><code>add_node_editor</code></td><td><code>with node_editor(…):</code></td><td align="center">节点编辑器 <code>？</code></td></tr><tr><td><code>add_staging_container</code></td><td><code>with staging_container(…):</code></td><td align="center">staging 容器 <code>？</code></td></tr><tr><td><code>add_tab_bar</code></td><td><code>with tab_bar(…):</code></td><td align="center">标签栏&#x2F;选项卡栏</td></tr><tr><td><code>add_tab</code></td><td><code>with tab(…):</code></td><td align="center">标签&#x2F;选项卡</td></tr><tr><td><code>add_tree_node</code></td><td><code>with tree_node(…):</code></td><td align="center">树状节点<code>？</code></td></tr><tr><td><code>add_tooltip</code></td><td><code>with tooltip(…):</code></td><td align="center">工具提示</td></tr><tr><td><code>add_popup</code></td><td><code>with popup(…):</code></td><td align="center">弹出</td></tr><tr><td><code>add_drag_payload</code></td><td><code>with payload(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_drawlist</code></td><td><code>with drawlist(…):</code></td><td align="center">绘图列表</td></tr><tr><td><code>add_draw_layer</code></td><td><code>with draw_layer(…):</code></td><td align="center">绘图层</td></tr><tr><td><code>add_viewport_drawlist</code></td><td><code>with viewport_drawlist(…):</code></td><td align="center">视口绘图列表？&#96;</td></tr><tr><td><code>add_file_dialog</code></td><td><code>with file_dialog(…):</code></td><td align="center">文件对话框</td></tr><tr><td><code>add_filter_set</code></td><td><code>with filter_set(…):</code></td><td align="center">筛选器</td></tr><tr><td><code>add_font</code></td><td><code>with font(…):</code></td><td align="center">字体</td></tr><tr><td><code>add_font_registry</code></td><td><code>with font_registry(…):</code></td><td align="center">字体注册</td></tr><tr><td><code>add_handler_registry</code></td><td><code>with handler_registry(…):</code></td><td align="center">handler 注册器<code>？</code></td></tr><tr><td><code>add_plot</code></td><td><code>with plot(…):</code></td><td align="center"><code>？</code></td></tr><tr><td><code>add_subplots</code></td><td><code>with subplots(…):</code></td><td align="center">子plot<code>？</code></td></tr><tr><td><code>add_texture_registry</code></td><td><code>with texture_registry(…):</code></td><td align="center">纹理注册器</td></tr><tr><td><code>add_value_registry</code></td><td><code>with value_registry(…):</code></td><td align="center">值注册器</td></tr><tr><td><code>add_theme</code></td><td><code>with theme(…):</code></td><td align="center">主题</td></tr><tr><td><code>add_item_pool</code></td><td><code>with item_pool(…):</code></td><td align="center">组件池<code>？</code></td></tr><tr><td><code>add_template_registry</code></td><td><code>with template_registry(…):</code></td><td align="center">模板注册器</td></tr></tbody></table><p>demo:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Main&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> dpg.menu_bar():</span><br><span class="line">        <span class="keyword">with</span> dpg.menu(label=<span class="string">&quot;Themes&quot;</span>):</span><br><span class="line">            dpg.add_menu_item(label=<span class="string">&quot;Dark&quot;</span>)</span><br><span class="line">            dpg.add_menu_item(label=<span class="string">&quot;Light&quot;</span>)</span><br><span class="line">            dpg.add_menu_item(label=<span class="string">&quot;Classic&quot;</span>)</span><br><span class="line">            <span class="keyword">with</span> dpg.menu(label=<span class="string">&quot;Other Themes&quot;</span>):</span><br><span class="line">                dpg.add_menu_item(label=<span class="string">&quot;Purple&quot;</span>)</span><br><span class="line">                dpg.add_menu_item(label=<span class="string">&quot;Gold&quot;</span>)</span><br><span class="line">                dpg.add_menu_item(label=<span class="string">&quot;Red&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> dpg.menu(label=<span class="string">&quot;Tools&quot;</span>):</span><br><span class="line">            dpg.add_menu_item(label=<span class="string">&quot;Show Logger&quot;</span>)</span><br><span class="line">            dpg.add_menu_item(label=<span class="string">&quot;Show About&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> dpg.menu(label=<span class="string">&quot;Oddities&quot;</span>):</span><br><span class="line">            dpg.add_button(label=<span class="string">&quot;A Button&quot;</span>)</span><br><span class="line">            dpg.add_simple_plot(label=<span class="string">&quot;Menu plot&quot;</span>, default_value=(<span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">2.5</span>, <span class="number">8.9</span>), height=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">w = dpg.add_window(label=<span class="string">&quot;Main&quot;</span>)</span><br><span class="line">mb = dpg.add_menu_bar(parent=w)</span><br><span class="line">themes = dpg.add_menu(label=<span class="string">&quot;Themes&quot;</span>, parent=mb)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Dark&quot;</span>, parent=themes)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Light&quot;</span>, parent=themes)</span><br><span class="line">other_themes = dpg.add_menu(label=<span class="string">&quot;Other Themes&quot;</span>, parent=themes)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Purple&quot;</span>, parent=other_themes)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Gold&quot;</span>, parent=other_themes)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Red&quot;</span>, parent=other_themes)</span><br><span class="line">tools = dpg.add_menu(label=<span class="string">&quot;Tools&quot;</span>, parent=mb)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Show Logger&quot;</span>, parent=tools)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Show About&quot;</span>, parent=tools)</span><br><span class="line">oddities = dpg.add_menu(label=<span class="string">&quot;Oddities&quot;</span>, parent=mb)</span><br><span class="line">dpg.add_button(label=<span class="string">&quot;A Button&quot;</span>, parent=oddities)</span><br><span class="line">dpg.add_simple_plot(label=<span class="string">&quot;A menu plot&quot;</span>, default_value=(<span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">2.5</span>, <span class="number">8.9</span>), height=<span class="number">80</span>, parent=oddities)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dpg.add_window(label=<span class="string">&quot;Main&quot;</span>, tag=<span class="string">&quot;w&quot;</span>)</span><br><span class="line">dpg.add_menu_bar(parent=<span class="string">&quot;w&quot;</span>, tag=<span class="string">&quot;mb&quot;</span>)</span><br><span class="line">dpg.add_menu(label=<span class="string">&quot;Themes&quot;</span>, parent=<span class="string">&quot;mb&quot;</span>, tag=<span class="string">&quot;themes&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Dark&quot;</span>, parent=<span class="string">&quot;themes&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Light&quot;</span>, parent=<span class="string">&quot;themes&quot;</span>)</span><br><span class="line">dpg.add_menu(label=<span class="string">&quot;Other Themes&quot;</span>, parent=<span class="string">&quot;themes&quot;</span>, tag=<span class="string">&quot;other_themes&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Purple&quot;</span>, parent=<span class="string">&quot;other_themes&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Gold&quot;</span>, parent=<span class="string">&quot;other_themes&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Red&quot;</span>, parent=<span class="string">&quot;other_themes&quot;</span>)</span><br><span class="line">dpg.add_menu(label=<span class="string">&quot;Tools&quot;</span>, parent=<span class="string">&quot;mb&quot;</span>, tag=<span class="string">&quot;tools&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Show Logger&quot;</span>, parent=<span class="string">&quot;tools&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Show About&quot;</span>, parent=<span class="string">&quot;tools&quot;</span>)</span><br><span class="line">dpg.add_menu(label=<span class="string">&quot;Oddities&quot;</span>, parent=<span class="string">&quot;mb&quot;</span>, tag=<span class="string">&quot;Oddities&quot;</span>)</span><br><span class="line">dpg.add_button(label=<span class="string">&quot;A Button&quot;</span>, parent=<span class="string">&quot;Oddities&quot;</span>)</span><br><span class="line">dpg.add_simple_plot(label=<span class="string">&quot;A menu plot&quot;</span>, default_value=(<span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">2.5</span>, <span class="number">8.9</span>), height=<span class="number">80</span>, parent=<span class="string">&quot;Oddities&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dpg.push_container_stack(dpg.add_window(label=<span class="string">&quot;Main&quot;</span>))</span><br><span class="line">dpg.push_container_stack(dpg.add_menu_bar())</span><br><span class="line">dpg.push_container_stack(dpg.add_menu(label=<span class="string">&quot;Themes&quot;</span>))</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Dark&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Light&quot;</span>)</span><br><span class="line">dpg.pop_container_stack()</span><br><span class="line">dpg.push_container_stack(dpg.add_menu(label=<span class="string">&quot;Tools&quot;</span>))</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Show Logger&quot;</span>)</span><br><span class="line">dpg.add_menu_item(label=<span class="string">&quot;Show About&quot;</span>)</span><br><span class="line">dpg.pop_container_stack()</span><br><span class="line"><span class="comment"># remove menu_bar from container stack</span></span><br><span class="line">dpg.pop_container_stack()</span><br><span class="line"><span class="comment"># remove window from container stack</span></span><br><span class="line">dpg.pop_container_stack()</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure><h2 id="容器槽"><a href="#容器槽" class="headerlink" title="容器槽"></a>容器槽</h2><table><thead><tr><th align="left">代码</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left"><code>is_item_container</code></td><td align="center">检查是否为容器类型</td></tr><tr><td align="left"><code>get_item_slot</code></td><td align="center">返回项目的槽</td></tr><tr><td align="left"><code>get_item_parent</code></td><td align="center">返回项目的父UUID</td></tr><tr><td align="left"><code>get_item_children</code></td><td align="center">返回项的子项</td></tr><tr><td align="left"><code>reorder_items</code></td><td align="center">在一次调用中重新排序子项</td></tr><tr><td align="left"><code>move_item_up</code></td><td align="center">将组件在其槽内上移</td></tr><tr><td align="left"><code>move_item_down</code></td><td align="center">将组件在其槽内下移</td></tr><tr><td align="left"><code>move_item</code></td><td align="center">在容器之间移动组件</td></tr><tr><td align="left"><code>set_item_children</code></td><td align="center">将一个舞台移到一个组件的子槽中</td></tr></tbody></table><h2 id="绘图API"><a href="#绘图API" class="headerlink" title="绘图API"></a>绘图API</h2><ul><li><p>绘图命令可以添加到<code>DrawList</code>、<code>VIEPORT_DrawList</code>或窗口等容器中</p></li><li><p>创建一个绘图列表项 <code>add_drawlist</code> ，可以调用绘制命令来添加项</p></li><li><p>坐标系是右手坐标系，原点位于左上角，x轴指向左侧，y轴指向下方，z轴指向屏幕</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;xxx&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> dpg.drawlist(width=xxx, height=xxx):</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><h3 id="图层"><a href="#图层" class="headerlink" title="图层"></a>图层</h3><ul><li>在<code>with dpg.draw_layer():</code>中添加内容</li><li><code>dpg.draw_layer():</code>内可添加tag</li></ul><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><ul><li><p>可以显示PNG、JPEG或BMP类型的图像</p></li><li><p>使用DRAW_IMAGE添加图像。</p></li></ul><p>使用 <strong>pmin</strong> 和 <strong>pmax</strong> 我们可以定义矩形的左上角和右下角区域</p><p>图像将缩放以适合指定区域。</p><p>使用 <code>uv_min</code> 和 <code>uv_max</code> 我们可以指定规格化的纹理坐标，以仅使用图像上区域的一部分。默认为<code>uv_min= [0,0]</code> 和<code>UV_max= [1,1]</code>将在<code>UV_MIN=[0,0]</code>时显示整个图像,<code>UV_max= [0.5,0.5]</code>将仅显示绘图的第一个四分之一。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载图片</span></span><br><span class="line">width, height, channels, data = dpg.load_image(<span class="string">&#x27;xxx.png&#x27;</span>) <span class="comment"># 0: width, 1: height, 2: channels, 3: data</span></span><br><span class="line"><span class="comment">#注册图片</span></span><br><span class="line"><span class="keyword">with</span> dpg.texture_registry():</span><br><span class="line">    dpg.add_static_texture(width, height, data, tag=<span class="string">&quot;image_id&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> dpg.drawlist(width=<span class="number">700</span>, height=<span class="number">700</span>):</span><br><span class="line">        <span class="comment"># 绘制*3</span></span><br><span class="line">        dpg.draw_image(<span class="string">&quot;image_id&quot;</span>, (<span class="number">0</span>, <span class="number">400</span>), (<span class="number">200</span>, <span class="number">600</span>), uv_min=(<span class="number">0</span>, <span class="number">0</span>), uv_max=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">        dpg.draw_image(<span class="string">&quot;image_id&quot;</span>, (<span class="number">400</span>, <span class="number">300</span>), (<span class="number">600</span>, <span class="number">500</span>), uv_min=(<span class="number">0</span>, <span class="number">0</span>), uv_max=(<span class="number">0.5</span>, <span class="number">0.5</span>))</span><br><span class="line">        dpg.draw_image(<span class="string">&quot;image_id&quot;</span>, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">300</span>, <span class="number">300</span>), uv_min=(<span class="number">0</span>, <span class="number">0</span>), uv_max=(<span class="number">2.5</span>, <span class="number">2.5</span>))</span><br></pre></td></tr></table></figure><ol><li>加载图片：四个变量 <code>= dpg.load_image(&#39;</code>图片路径<code>&#39;)</code></li><li>注册图片：<code>with dpg.texture_registry():</code>\n <code>dpg.add_static_texture(</code>前面四个变量<code>, tag=&quot;</code>图片id<code>&quot;)</code></li><li>使用图片：<code> dpg.draw_image(&quot;</code>图片id<code>&quot;,</code>左上、右下位置，uv规格化<code>)</code></li></ol><h3 id="窗口与视口"><a href="#窗口与视口" class="headerlink" title="窗口与视口"></a>窗口与视口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.viewport_drawlist():</span><br><span class="line">    dpg.draw_circle((<span class="number">100</span>, <span class="number">100</span>), <span class="number">25</span>, color=(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))   <span class="comment"># 置顶</span></span><br><span class="line">    </span><br><span class="line">dpg.add_viewport_drawlist(front=<span class="literal">False</span>, tag=<span class="string">&quot;viewport_back&quot;</span>)</span><br><span class="line">dpg.draw_circle((<span class="number">200</span>, <span class="number">200</span>), <span class="number">25</span>, color=(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), parent=<span class="string">&quot;viewport_back&quot;</span>)   <span class="comment"># 置底</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, width=<span class="number">300</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;Move the window over the drawings to see the effects.&quot;</span>, wrap=<span class="number">300</span>)</span><br><span class="line">    dpg.draw_circle((<span class="number">100</span>, <span class="number">100</span>), <span class="number">25</span>, color=(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))   <span class="comment"># 窗口内</span></span><br></pre></td></tr></table></figure><ul><li>窗口内：跟随窗口</li><li>一般<code>dpg.viewport_drawlist</code>内：置顶</li><li>带有<code>viewport_back</code>tag的<code>dpg.viewport_drawlist</code>内：置底</li></ul><h2 id="文件和目录选择器"><a href="#文件和目录选择器" class="headerlink" title="文件和目录选择器"></a>文件和目录选择器</h2><p>(dpg内部)</p><p>可用于选择单个文件、多个文件或目录，当用户单击 <strong>Ok</strong> 按钮，则运行对话框的回调。</p><p>信息通过APP_DATA参数传递，例如：文件路径 文件名 当前路径 当前过滤器(文件类型过滤器)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">callback</span>(<span class="params">sender, app_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Sender: &quot;</span>, sender)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;App Data: &quot;</span>, app_data)</span><br><span class="line"></span><br><span class="line">dpg.add_file_dialog(directory_selector=<span class="literal">True</span>, show=<span class="literal">False</span>, callback=callback, tag=<span class="string">&quot;file_dialog_id&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, width=<span class="number">800</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Directory Selector&quot;</span>, callback=<span class="keyword">lambda</span>: dpg.show_item(<span class="string">&quot;file_dialog_id&quot;</span>))</span><br></pre></td></tr></table></figure><blockquote><p>Sender:  xxx</p><p>App Data:  </p><p>{‘file_path_name’: ‘xxx’,      —文件路径</p><p>‘file_name’: ‘xxx’,      —文件名</p><p>‘current_path’: ‘xxx’,      —当前路径</p><p>‘current_filter’: ‘xxx’,      —当前过滤器</p><p>‘min_size’: [xxx, xxx],      —最大大小</p><p>‘max_size’: [xxx, xxx],      —最小大小</p><p>‘selections’: {‘xxx’: ‘xxx’}}     —选择该文件&#x2F;目录的相对路径和绝对路径</p></blockquote><ul><li><code>callback=lambda: dpg.show_item(&quot;file_dialog_id&quot;)</code></li></ul><h3 id="扩展名"><a href="#扩展名" class="headerlink" title="扩展名"></a>扩展名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.file_dialog(directory_selector=<span class="literal">False</span>, show=<span class="literal">False</span>, callback=callback, <span class="built_in">id</span>=<span class="string">&quot;file_dialog_id&quot;</span>):</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.*&quot;</span>)</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;&quot;</span>, color=(<span class="number">150</span>, <span class="number">255</span>, <span class="number">150</span>, <span class="number">255</span>))</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;Source files (*.cpp *.h *.hpp)&#123;.cpp,.h,.hpp&#125;&quot;</span>, color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.h&quot;</span>, color=(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), custom_text=<span class="string">&quot;[header]&quot;</span>)</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.py&quot;</span>, color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>), custom_text=<span class="string">&quot;[Python]&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>懒得写了，自己看 :D</li></ul><h3 id="加点别的"><a href="#加点别的" class="headerlink" title="加点别的"></a>加点别的</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dearpygui.dearpygui <span class="keyword">as</span> dpg</span><br><span class="line">dpg.create_context()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">callback</span>(<span class="params">sender, app_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Sender: &quot;</span>, sender)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;App Data: &quot;</span>, app_data)</span><br><span class="line"><span class="keyword">with</span> dpg.file_dialog(directory_selector=<span class="literal">False</span>, show=<span class="literal">False</span>, callback=callback, tag=<span class="string">&quot;file_dialog_tag&quot;</span>):</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.*&quot;</span>)</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;&quot;</span>, color=(<span class="number">150</span>, <span class="number">255</span>, <span class="number">150</span>, <span class="number">255</span>))</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.cpp&quot;</span>, color=(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.h&quot;</span>, color=(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">    dpg.add_file_extension(<span class="string">&quot;.py&quot;</span>, color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> dpg.group(horizontal=<span class="literal">True</span>):</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;fancy file dialog&quot;</span>)</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;file&quot;</span>)</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;dialog&quot;</span>)</span><br><span class="line">    dpg.add_date_picker()</span><br><span class="line">    <span class="keyword">with</span> dpg.child_window(height=<span class="number">100</span>):</span><br><span class="line">        dpg.add_selectable(label=<span class="string">&quot;bookmark 1&quot;</span>)</span><br><span class="line">        dpg.add_selectable(label=<span class="string">&quot;bookmark 2&quot;</span>)</span><br><span class="line">        dpg.add_selectable(label=<span class="string">&quot;bookmark 3&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, width=<span class="number">800</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;File Selector&quot;</span>, callback=<span class="keyword">lambda</span>: dpg.show_item(<span class="string">&quot;file_dialog_tag&quot;</span>))</span><br><span class="line">dpg.create_viewport(title=<span class="string">&#x27;Custom Title&#x27;</span>, width=<span class="number">800</span>, height=<span class="number">600</span>)</span><br><span class="line">dpg.setup_dearpygui()</span><br><span class="line">dpg.show_viewport()</span><br><span class="line">dpg.start_dearpygui()</span><br><span class="line">dpg.destroy_context()</span><br></pre></td></tr></table></figure><ul><li>在里面加组或子窗口</li></ul><h3 id="选择多个文件"><a href="#选择多个文件" class="headerlink" title="选择多个文件"></a>选择多个文件</h3><p>通过在<code>dpg.file_dialog</code>设置file_count（数量限制）关键字来选择多个文件</p><p>Ctrl&#x2F;Shift 选择</p><h2 id="过滤器-x2F-搜寻"><a href="#过滤器-x2F-搜寻" class="headerlink" title="过滤器&#x2F;搜寻"></a>过滤器&#x2F;搜寻</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">callback</span>(<span class="params">sender, filter_string</span>):</span><br><span class="line">    dpg.set_value(<span class="string">&quot;filter_id&quot;</span>, filter_string)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;about&quot;</span>, width =<span class="number">500</span>, height=<span class="number">300</span>):</span><br><span class="line">    dpg.add_input_text(label=<span class="string">&quot;Filter (inc, -exc)&quot;</span>, callback=callback)</span><br><span class="line">    <span class="keyword">with</span> dpg.filter_set(<span class="built_in">id</span>=<span class="string">&quot;filter_id&quot;</span>):</span><br><span class="line">        dpg.add_text(<span class="string">&quot;aaa1.c&quot;</span>, filter_key=<span class="string">&quot;aaa1.c&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;bbb1.c&quot;</span>, filter_key=<span class="string">&quot;bbb1.c&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;ccc1.c&quot;</span>, filter_key=<span class="string">&quot;ccc1.c&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;aaa2.cpp&quot;</span>, filter_key=<span class="string">&quot;aaa2.cpp&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;bbb2.cpp&quot;</span>, filter_key=<span class="string">&quot;bbb2.cpp&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;ccc2.cpp&quot;</span>, filter_key=<span class="string">&quot;ccc2.cpp&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;abc.h&quot;</span>, filter_key=<span class="string">&quot;abc.h&quot;</span>, bullet=<span class="literal">True</span>)</span><br><span class="line">        dpg.add_text(<span class="string">&quot;hello, world&quot;</span>, filter_key=<span class="string">&quot;hello, world&quot;</span>, bullet=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><p>设置：</p><p><code> with dpg.filter_set(id=&quot;</code>id<code>&quot;):</code></p><p><code>dpg.add_</code>xxx<code>(</code>…<code>, filter_key=&quot;</code>xxx<code>&quot;, bullet=True)</code></p></blockquote><blockquote><p>使用：</p><p><code>dpg.add_input_text(</code>…<code>, callback=xxx)</code></p><p>callback:</p><p><code>def </code>xxx<code>(</code>…<code>,filter_string):</code></p><p><code> dpg.set_value(&quot;</code>id<code>&quot;, filter_string)</code></p></blockquote><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>默认字体：ProggyClean.ttf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册字体</span></span><br><span class="line"><span class="keyword">with</span> dpg.font_registry():</span><br><span class="line">    <span class="comment"># .ttf or .otf file</span></span><br><span class="line">    default_font = dpg.add_font(<span class="string">&quot;xxx.otf&quot;</span>, <span class="number">20</span>)</span><br><span class="line">    second_font = dpg.add_font(<span class="string">&quot;xxx.otf&quot;</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Font Example&quot;</span>, height=<span class="number">200</span>, width=<span class="number">200</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Default font&quot;</span>)</span><br><span class="line">    b2 = dpg.add_button(label=<span class="string">&quot;Secondary font&quot;</span>)</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;default&quot;</span>)</span><br><span class="line"></span><br><span class="line">    dpg.bind_font(default_font)   <span class="comment"># 设为默认</span></span><br><span class="line">    dpg.bind_item_font(b2, second_font)   <span class="comment"># 专门指定</span></span><br></pre></td></tr></table></figure><blockquote><p>注册：</p><p>默认情况下，仅添加基本拉丁语和拉丁语补充字形(0x0020-0x00FF)</p><p><code>with dpg.font_registry():</code></p><p>xxx<code> = dpg.add_font(&quot;</code>path<code>&quot;, </code>pixel[px]<code>)</code></p><hr><p>添加其他字形：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.font(<span class="string">&quot;xxx.otf&quot;</span>, <span class="number">20</span>) <span class="keyword">as</span> font:</span><br><span class="line">        <span class="comment"># 添加默认字形</span></span><br><span class="line">        dpg.add_font_range_hint(dpg.mvFontRangeHint_Default)</span><br><span class="line">        <span class="comment"># 其他字形</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Japanese</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Korean</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Chinese_Full</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Chinese_Simplified_Common</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Cyrillic</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Thai</span></span><br><span class="line">        <span class="comment">#        mvFontRangeHint_Vietnamese</span></span><br><span class="line">        dpg.add_font_range_hint(dpg.mvFontRangeHint_Japanese)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添加区间字形</span></span><br><span class="line">        dpg.add_font_range(<span class="number">0x3100</span>, <span class="number">0x3ff0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添加指定字形</span></span><br><span class="line">        dpg.add_font_chars([<span class="number">0x3105</span>, <span class="number">0x3107</span>, <span class="number">0x3108</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 刷新区间字形</span></span><br><span class="line">        dpg.add_char_remap(<span class="number">0x3084</span>, <span class="number">0x0025</span>)</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>设置：</p><p>设为默认：<code>dpg.bind_font(</code>xxx<code>)</code> </p><p>专门指定：<code>dpg.bind_item_font(</code>item<code>, </code>xxx<code>)</code></p></blockquote><p>附：<a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters">Unicode Characters</a></p><h2 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h2><p>视口菜单栏：<code>with dpg.viewport_menu_bar():</code></p><p>窗口菜单栏：<code>with dpg.menu_bar():</code></p><p>里面的内容：</p><blockquote><p><code>with dpg.menu(label=&quot;</code>xxx<code>&quot;):</code></p><blockquote><p><code>dpg.add_menu_item</code></p><p>其他组件也可以</p></blockquote></blockquote><blockquote><p><code>dpg.add_menu_item(label=&quot;</code>xxx<code>&quot;, callback=</code>xxx<code>)</code></p></blockquote><h2 id="node-编辑器"><a href="#node-编辑器" class="headerlink" title="node 编辑器"></a>node 编辑器</h2><p>它有4个主要组成部分</p><blockquote><p>node编辑器:node所在的区域</p><p>node:包含属性的自由浮动“窗口”</p><p>属性:带有Pins的小部件集合，用于创建指向&#x2F;来自的链接，可以是输入、输出或静态</p><p>链接:属性之间的连接</p></blockquote><p>属性可以包含任何UI项。当用户单击并拖动node的属性时，将运行编辑器的回调。DPG将属性的标记通过 <em>app_data</em> 回调参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接属性时运行回调</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">link_callback</span>(<span class="params">sender, app_data</span>):</span><br><span class="line">    <span class="comment"># app_data -&gt; (link_id1, link_id2)</span></span><br><span class="line">    dpg.add_node_link(app_data[<span class="number">0</span>], app_data[<span class="number">1</span>], parent=sender)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 断开属性时运行回调</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delink_callback</span>(<span class="params">sender, app_data</span>):</span><br><span class="line">    <span class="comment"># app_data -&gt; link_id</span></span><br><span class="line">    dpg.delete_item(app_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, width=<span class="number">400</span>, height=<span class="number">400</span>):</span><br><span class="line">    <span class="keyword">with</span> dpg.node_editor(callback=link_callback, delink_callback=delink_callback):</span><br><span class="line">        <span class="keyword">with</span> dpg.node(label=<span class="string">&quot;Node 1&quot;</span>):</span><br><span class="line">            <span class="keyword">with</span> dpg.node_attribute(label=<span class="string">&quot;Node A1&quot;</span>):</span><br><span class="line">                dpg.add_input_float(label=<span class="string">&quot;F1&quot;</span>, width=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> dpg.node_attribute(label=<span class="string">&quot;Node A2&quot;</span>, attribute_type=dpg.mvNode_Attr_Output):</span><br><span class="line">                dpg.add_input_float(label=<span class="string">&quot;F2&quot;</span>, width=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> dpg.node(label=<span class="string">&quot;Node 2&quot;</span>):</span><br><span class="line">            <span class="keyword">with</span> dpg.node_attribute(label=<span class="string">&quot;Node A3&quot;</span>):</span><br><span class="line">                dpg.add_input_float(label=<span class="string">&quot;F3&quot;</span>, width=<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> dpg.node_attribute(label=<span class="string">&quot;Node A4&quot;</span>, attribute_type=dpg.mvNode_Attr_Output):</span><br><span class="line">                dpg.add_input_float(label=<span class="string">&quot;F4&quot;</span>, width=<span class="number">200</span>)</span><br></pre></td></tr></table></figure><blockquote><p>在<code>with dpg.node_editor(callback=link_callback, delink_callback=delink_callback):</code>内添加内容<br>在<code>with dpg.node(label=&quot;</code>xxx<code>&quot;):</code>内添加node<br>在<code>with dpg.node_attribute(label=&quot;</code>xxx<code>&quot;):</code>内添加属性</p></blockquote><h3 id="选择查询"><a href="#选择查询" class="headerlink" title="选择查询"></a>选择查询</h3><p>检索选定的node和链接(并使用以下命令清除此选择)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dpg.get_selected_nodes(editor_id)</span><br><span class="line">dpg.get_selected_links(editor_id)</span><br><span class="line">dpg.clear_selected_nodes(editor_id)</span><br><span class="line">dpg.clear_selected_links(editor_id)</span><br></pre></td></tr></table></figure><h3 id="属性类型"><a href="#属性类型" class="headerlink" title="属性类型"></a>属性类型</h3><p>以下常量可用于 attribute_type 属性的参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mvNode_Attr_Input <span class="comment"># (默认)</span></span><br><span class="line">mvNode_Attr_Output</span><br><span class="line">mvNode_Attr_Static</span><br></pre></td></tr></table></figure><h3 id="属性形状"><a href="#属性形状" class="headerlink" title="属性形状"></a>属性形状</h3><p>以下常量可用于shape节点属性的参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mvNode_PinShape_Circle</span><br><span class="line">mvNode_PinShape_CircleFilled <span class="comment">#(默认)</span></span><br><span class="line">mvNode_PinShape_Triangle</span><br><span class="line">mvNode_PinShape_TriangleFilled</span><br><span class="line">mvNode_PinShape_Quad</span><br><span class="line">mvNode_PinShape_QuadFilled</span><br></pre></td></tr></table></figure><h2 id="绘制图表"><a href="#绘制图表" class="headerlink" title="绘制图表"></a>绘制图表</h2><p>地块由多个组件组成。</p><p>Y轴：这是一个容器，是添加到绘图中的所有数据系列的父级。打印一次可以有多个Y轴(最多3个)。</p><p>X轴：这是x数据刻度(只允许1个x轴)。</p><p>系列：要显示的数据的容器。需要将数据系列添加为要在绘图上显示的Y轴的子项。有许多不同类型的数据系列可用。系列还可以包含当右键单击图例中的系列标签作为上下文菜单时将显示的UI项</p><p>图例(可选)：</p><p>这是一个普通的图例，ALOS允许用户切换哪些数据序列是可见的。</p><p>绘图具有一些内置功能：</p><blockquote><p>切换数据系列：单击所需数据系列的图例名称进行切换<br>设置：双击鼠标右键<br>平移绘图：在绘图上单击并拖动<br>平移轴：在轴上单击并拖动<br>缩放：滚动鼠标滚轮<br>缩放轴：悬停轴和滚动鼠标滚轮<br>缩放区域：单击鼠标右键并拖动<br>最大化显示：双击<br>缩放轴区域：按住Shift键并单击鼠标右键并拖动</p></blockquote><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sindatax = []</span><br><span class="line">sindatay = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">500</span>):</span><br><span class="line">    sindatax.append(i / <span class="number">1000</span>)</span><br><span class="line">    sindatay.append(<span class="number">0.5</span> + <span class="number">0.5</span> * sin(<span class="number">50</span> * i / <span class="number">1000</span>))</span><br></pre></td></tr></table></figure><p>使用<code>.append()</code></p><p>创建视图：<code>with dpg.plot(label=&quot;</code>xxx<code>&quot;, height=</code>xxx<code>, width=</code>xxx<code>):</code></p><p>可选择创建图例：<code>dpg.add_plot_legend()</code></p><p>创建x、y轴：<code>dpg.add_plot_axis(dpg.mvXAxis, label=&quot;x&quot;)</code>和<code>dpg.add_plot_axis(dpg.mvYAxis, label=&quot;y&quot;, tag=&quot;y_axis&quot;)</code></p><p>添加系列（内容，可添加多个）：<code>dpg.add_line_series(</code>数据（前面的sindatax和sindatay）<code>, label=&quot;</code>x<code>&quot;, parent=&quot;</code>y<code>&quot;)</code></p><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><ul><li><code>dpg.add_line_series</code>中添加tag</li><li><code>dpg.set_value(&#39;</code>tag<code>&#39;, [</code>x和y<code>])</code></li><li><code>dpg.set_item_label(&#39;</code>tag<code>&#39;, &quot;</code>值<code>&quot;)</code></li></ul><h3 id="轴限制"><a href="#轴限制" class="headerlink" title="轴限制"></a>轴限制</h3><p>以下命令可用于控制地块轴限制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set_axis_limits(...)</span><br><span class="line">get_axis_limits(...)</span><br><span class="line">set_axis_limits_auto(...)</span><br><span class="line">fit_axis_data(...)</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, width=<span class="number">400</span>, height=<span class="number">400</span>):</span><br><span class="line">    <span class="keyword">with</span> dpg.group(horizontal=<span class="literal">True</span>):</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;fit y&quot;</span>, callback=<span class="keyword">lambda</span>: dpg.fit_axis_data(<span class="string">&quot;y_axis&quot;</span>))</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;unlock x limits&quot;</span>, callback=<span class="keyword">lambda</span>: dpg.set_axis_limits_auto(<span class="string">&quot;x_axis&quot;</span>))</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;unlock y limits&quot;</span>, callback=<span class="keyword">lambda</span>: dpg.set_axis_limits_auto(<span class="string">&quot;y_axis&quot;</span>))</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;print limits x&quot;</span>, callback=<span class="keyword">lambda</span>: <span class="built_in">print</span>(dpg.get_axis_limits(<span class="string">&quot;x_axis&quot;</span>)))</span><br><span class="line">        dpg.add_button(label=<span class="string">&quot;print limits y&quot;</span>, callback=<span class="keyword">lambda</span>: <span class="built_in">print</span>(dpg.get_axis_limits(<span class="string">&quot;y_axis&quot;</span>)))</span><br><span class="line">    <span class="keyword">with</span> dpg.plot(label=<span class="string">&quot;Bar Series&quot;</span>, height=-<span class="number">1</span>, width=-<span class="number">1</span>):</span><br><span class="line">        dpg.add_plot_legend()</span><br><span class="line">        <span class="comment"># create x axis</span></span><br><span class="line">        dpg.add_plot_axis(dpg.mvXAxis, label=<span class="string">&quot;Student&quot;</span>, no_gridlines=<span class="literal">True</span>, tag=<span class="string">&quot;x_axis&quot;</span>)</span><br><span class="line">        dpg.set_axis_limits(dpg.last_item(), <span class="number">9</span>, <span class="number">33</span>)</span><br><span class="line">        dpg.set_axis_ticks(dpg.last_item(), ((<span class="string">&quot;S1&quot;</span>, <span class="number">11</span>), (<span class="string">&quot;S2&quot;</span>, <span class="number">21</span>), (<span class="string">&quot;S3&quot;</span>, <span class="number">31</span>)))</span><br><span class="line">        <span class="comment"># create y axis</span></span><br><span class="line">        dpg.add_plot_axis(dpg.mvYAxis, label=<span class="string">&quot;Score&quot;</span>, tag=<span class="string">&quot;y_axis&quot;</span>)</span><br><span class="line">        dpg.set_axis_limits(<span class="string">&quot;y_axis&quot;</span>, <span class="number">0</span>, <span class="number">110</span>)</span><br><span class="line">        <span class="comment"># add series to y axis</span></span><br><span class="line">        dpg.add_bar_series([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>], [<span class="number">100</span>, <span class="number">75</span>, <span class="number">90</span>], label=<span class="string">&quot;Final Exam&quot;</span>, weight=<span class="number">1</span>, parent=<span class="string">&quot;y_axis&quot;</span>)</span><br><span class="line">        dpg.add_bar_series([<span class="number">11</span>, <span class="number">21</span>, <span class="number">31</span>], [<span class="number">83</span>, <span class="number">75</span>, <span class="number">72</span>], label=<span class="string">&quot;Midterm Exam&quot;</span>, weight=<span class="number">1</span>, parent=<span class="string">&quot;y_axis&quot;</span>)</span><br><span class="line">        dpg.add_bar_series([<span class="number">12</span>, <span class="number">22</span>, <span class="number">32</span>], [<span class="number">42</span>, <span class="number">68</span>, <span class="number">23</span>], label=<span class="string">&quot;Course Grade&quot;</span>, weight=<span class="number">1</span>, parent=<span class="string">&quot;y_axis&quot;</span>)</span><br><span class="line">dpg.create_viewport(title=<span class="string">&#x27;Custom Title&#x27;</span>, width=<span class="number">800</span>, height=<span class="number">600</span>)</span><br><span class="line">dpg.setup_dearpygui()</span><br><span class="line">dpg.show_viewport()</span><br><span class="line">dpg.start_dearpygui()</span><br><span class="line">dpg.destroy_context()</span><br></pre></td></tr></table></figure><h3 id="自定义轴标签"><a href="#自定义轴标签" class="headerlink" title="自定义轴标签"></a>自定义轴标签</h3><p>可以使用设置轴标签<code>set_axis_ticks</code>，可以使用<code>reset_axis_ticks</code>重置它们</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create x axis</span></span><br><span class="line">dpg.add_plot_axis(dpg.mvXAxis, label=<span class="string">&quot;Student&quot;</span>, no_gridlines=<span class="literal">True</span>)</span><br><span class="line">dpg.set_axis_ticks(dpg.last_item(), ((<span class="string">&quot;S1&quot;</span>, <span class="number">11</span>), (<span class="string">&quot;S2&quot;</span>, <span class="number">21</span>), (<span class="string">&quot;S3&quot;</span>, <span class="number">31</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># create y axis</span></span><br><span class="line">dpg.add_plot_axis(dpg.mvYAxis, label=<span class="string">&quot;Score&quot;</span>, tag=<span class="string">&quot;yaxis_tag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add series to y axis</span></span><br><span class="line">dpg.add_bar_series([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>], [<span class="number">100</span>, <span class="number">75</span>, <span class="number">90</span>], label=<span class="string">&quot;Final Exam&quot;</span>, weight=<span class="number">1</span>, parent=<span class="string">&quot;yaxis_tag&quot;</span>)</span><br><span class="line">dpg.add_bar_series([<span class="number">11</span>, <span class="number">21</span>, <span class="number">31</span>], [<span class="number">83</span>, <span class="number">75</span>, <span class="number">72</span>], label=<span class="string">&quot;Midterm Exam&quot;</span>, weight=<span class="number">1</span>, parent=<span class="string">&quot;yaxis_tag&quot;</span>)</span><br><span class="line">dpg.add_bar_series([<span class="number">12</span>, <span class="number">22</span>, <span class="number">32</span>], [<span class="number">42</span>, <span class="number">68</span>, <span class="number">23</span>], label=<span class="string">&quot;Course Grade&quot;</span>, weight=<span class="number">1</span>, parent=<span class="string">&quot;yaxis_tag&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="多个y轴"><a href="#多个y轴" class="headerlink" title="多个y轴"></a>多个y轴</h3><p>（最多3个y轴）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create y axis 1</span></span><br><span class="line">dpg.add_plot_axis(dpg.mvYAxis, label=<span class="string">&quot;y1&quot;</span>)</span><br><span class="line">dpg.add_line_series(sindatax, sindatay, label=<span class="string">&quot;y1 lines&quot;</span>, parent=dpg.last_item())</span><br><span class="line"><span class="comment"># create y axis 2</span></span><br><span class="line">dpg.add_plot_axis(dpg.mvYAxis, label=<span class="string">&quot;y2&quot;</span>)</span><br><span class="line">dpg.add_stem_series(sindatax, sindatay, label=<span class="string">&quot;y2 stem&quot;</span>, parent=dpg.last_item())</span><br><span class="line"><span class="comment"># create y axis 3</span></span><br><span class="line">dpg.add_plot_axis(dpg.mvYAxis, label=<span class="string">&quot;y3 scatter&quot;</span>)</span><br><span class="line">dpg.add_scatter_series(sindatax, sindatay, label=<span class="string">&quot;y3&quot;</span>, parent=dpg.last_item())</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>使用<code>dpg.add_plot_annotation()</code>标记</p><p>内容：</p><ul><li><code>label</code>：里面的文字</li><li><code>default_value=(</code>x<code>, </code>y<code>)</code>：默认值</li><li><code>offset=(</code>x<code>, </code>y<code>)</code>：偏移，离指向的位置，用直线指出，可省略</li><li><code>color=[</code>rgba<code>]</code>：标记的颜色</li><li><code>clamped</code>：固定（当视角不包含该点时标签在边缘显示），可省略（默认<code>True</code>）</li></ul><h3 id="可拖动的点和线"><a href="#可拖动的点和线" class="headerlink" title="可拖动的点和线"></a>可拖动的点和线</h3><ul><li>点：<code>dpg.add_drag_point()</code>（用元组表示坐标）</li><li>线：<code>dpg.add_drag_line()</code>（用浮点数表示坐标）</li></ul><p>内容：</p><ul><li><code>label</code>：里面的文字</li><li><code>color=[</code>rgba<code>]</code>：标记的颜色</li><li><code>default_value</code>：默认值</li><li><code>callback</code>：回调（获取：<code>dpg.get_value(sender)</code>）</li><li><code>vertical</code>：（线）纵向，默认<code>True</code></li></ul><h3 id="自定义右键菜单"><a href="#自定义右键菜单" class="headerlink" title="自定义右键菜单"></a>自定义右键菜单</h3><ul><li>右击图例中对应项时弹出的菜单</li><li>在<code>dpg.add_line_series</code>后添加组件，并<code>parent=</code>指向其</li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpg.add_line_series(sindatax, sindatay, label=<span class="string">&quot;series 1&quot;</span>, parent=<span class="string">&quot;yaxis&quot;</span>, tag=<span class="string">&quot;series_1&quot;</span>)</span><br><span class="line"></span><br><span class="line">dpg.add_button(label=<span class="string">&quot;Delete Series 1&quot;</span>, parent=dpg.last_item(), callback=<span class="keyword">lambda</span>: dpg.delete_item(<span class="string">&quot;series_1&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>详见下面的<code>## 主题</code></p><ol><li>在前面加<code>with dpg.theme(tag=&quot;</code>xxx<code>&quot;):</code></li><li>添加主题的对象<code>with dpg.theme_component(</code>dpg.mvStemSeries&#x2F;dpg.mvScatterSeries&#x2F;…<code>):</code></li><li>主题的内容</li><li>在图标里用<code>dpg.bind_item_theme(&quot;</code>图表系列tag<code>&quot;, &quot;</code>主题tag<code>&quot;)</code>应用</li></ol><p>主题的内容：</p><ul><li>颜色：<code>dpg.add_theme_color(dpg.mvPlotCol_Line, (</code>rgb<code>), category=dpg.mvThemeCat_Plots)</code></li><li>点的形状：<code>dpg.add_theme_style(dpg.mvPlotStyleVar_Marker, dpg.mvPlotMarker_</code>Diamond&#x2F;Square&#x2F;…<code>, category=dpg.mvThemeCat_Plots)</code></li><li>点的大小：<code>dpg.add_theme_style(dpg.mvPlotStyleVar_MarkerSize, </code>int<code>, category=dpg.mvThemeCat_Plots)</code></li></ul><h2 id="弹出窗口"><a href="#弹出窗口" class="headerlink" title="弹出窗口"></a>弹出窗口</h2><ul><li>右键菜单：在<code>with dpg.popup(</code>链接到组件（例如<code>dpg.last_item()</code>）<code>)</code></li><li>全屏警示框：设置<code>modal=True</code>（默认<code>False</code>）</li></ul><p>按键：<code>mousebutton=</code>添加</p><ol><li><code>dpg.mvMouseButton_Left</code>左键</li><li><code>dpg.mvMouseButton_right</code>右键（默认）</li><li><code>_mvMouseButton_Middle_</code>中键</li><li><code>_mvMouseButton_X1_</code>X1</li><li><code>_mvMouseButton_X2_</code>X2</li></ol><p>将窗口作为弹出窗口：</p><ul><li>创建：<code>with dpg.window(label=&quot;</code>xxx<code>&quot;, modal=True, show=False, tag=&quot;</code>tag<code>&quot;, no_title_bar=True):</code></li><li>调用：<code>callback=lambda: dpg.configure_item(&quot;</code>tag<code>&quot;, show=True)</code></li></ul><h2 id="简易图表"><a href="#简易图表" class="headerlink" title="简易图表"></a>简易图表</h2><p>添加：<code>dpg.add_simple_plot(label=&quot;</code>xxx<code>&quot;, default_value=(</code>int&#x2F;float<code>), height=</code>xxx<code>)</code></p><p>参数：</p><ul><li>柱状（默认线状）：<code>histogram=True&quot;</code></li><li>覆盖在图表顶部的文字：<code>overlay=&quot;</code>xxx<code>&quot;</code></li></ul><p>更新数值：<code> dpg.set_value(&quot;</code>tag<code>&quot;, </code>更新后列表<code>)</code></p><h2 id="暂存"><a href="#暂存" class="headerlink" title="暂存"></a>暂存</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">stage_items</span>():   <span class="comment"># 存入</span></span><br><span class="line">    <span class="keyword">with</span> dpg.stage(tag=<span class="string">&quot;stage1&quot;</span>):</span><br><span class="line">        dpg.add_text(<span class="string">&quot;hello, i was added from a stage&quot;</span>, tag=<span class="string">&quot;text_tag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">present_stage_items</span>():   <span class="comment"># 导出</span></span><br><span class="line">    dpg.move_item(<span class="string">&quot;text_tag&quot;</span>, parent=<span class="string">&quot;main_win&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, tag=<span class="string">&quot;main_win&quot;</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;stage items&quot;</span>, callback=stage_items)</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;present stages items&quot;</span>, callback=present_stage_items)</span><br></pre></td></tr></table></figure><ul><li>存储：在<code>dpg.stage():</code>内添加有tag的组件</li><li>清理：使用<code>dpg.unstage(&quot;</code>tag<code>&quot;)</code>和<code>dpg.pop_container_stack()</code></li></ul><h2 id="使用类-class-包装项"><a href="#使用类-class-包装项" class="headerlink" title="使用类(class)包装项"></a>使用类(class)包装项</h2><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Window</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, label</span>):</span><br><span class="line">        self._children = []</span><br><span class="line">        <span class="keyword">with</span> dpg.stage() <span class="keyword">as</span> stage:</span><br><span class="line">            self.<span class="built_in">id</span> = dpg.add_window(label=label)</span><br><span class="line">        self.stage = stage</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_child</span>(<span class="params">self, child</span>):</span><br><span class="line">        dpg.move_item(child.<span class="built_in">id</span>, parent=self.<span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">submit</span>(<span class="params">self</span>):</span><br><span class="line">        dpg.unstage(self.stage)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Button</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, label</span>):</span><br><span class="line">        <span class="keyword">with</span> dpg.stage():</span><br><span class="line">            self.<span class="built_in">id</span> = dpg.add_button(label=label)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_callback</span>(<span class="params">self, callback</span>):</span><br><span class="line">        dpg.set_item_callback(self.<span class="built_in">id</span>, callback)</span><br><span class="line"></span><br><span class="line">my_button = Button(<span class="string">&quot;Press me&quot;</span>)</span><br><span class="line">my_button.set_callback(<span class="keyword">lambda</span>: <span class="built_in">print</span>(<span class="string">&quot;I&#x27;ve been pressed!&quot;</span>))</span><br><span class="line"></span><br><span class="line">my_window = Window(<span class="string">&quot;Tutorial&quot;</span>)</span><br><span class="line">my_window.add_child(my_button)</span><br><span class="line">my_window.submit()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Button</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, label</span>):</span><br><span class="line">        <span class="keyword">with</span> dpg.stage() <span class="keyword">as</span> self._staging_container_id:</span><br><span class="line">            self._<span class="built_in">id</span> = dpg.add_button(label=label)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_callback</span>(<span class="params">self, callback</span>):</span><br><span class="line">        dpg.set_item_callback(self._<span class="built_in">id</span>, callback)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_label</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> dpg.get_item_label(self._<span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">submit</span>(<span class="params">self, parent</span>):</span><br><span class="line">        dpg.push_container_stack(parent)</span><br><span class="line">        dpg.unstage(self._staging_container_id)</span><br><span class="line">        dpg.pop_container_stack()</span><br><span class="line"></span><br><span class="line">my_button = Button(<span class="string">&quot;Press me&quot;</span>)</span><br><span class="line">my_button.set_callback(<span class="keyword">lambda</span>: <span class="built_in">print</span>(<span class="string">&quot;I&#x27;ve been pressed!&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_button.get_label())</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, tag=<span class="string">&quot;main_win&quot;</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">my_button.submit(<span class="string">&quot;main_win&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><h3 id="基础工作"><a href="#基础工作" class="headerlink" title="基础工作"></a>基础工作</h3><ul><li>创建：<code>with dpg.table():</code></li><li>添加列：<code>dpg.add_table_column(</code>label<code>)</code>（最多64）</li><li>添加行内容：<code>with dpg.table_row():</code>（添加组件）</li><li>添加单元格：<code>with dpg.table_cell():</code>（行和列内）（相当于在这一行这一列里<code>&lt;br/&gt;</code>）</li></ul><h3 id="边框-x2F-背景"><a href="#边框-x2F-背景" class="headerlink" title="边框&#x2F;背景"></a>边框&#x2F;背景</h3><p>在<code>dpg.table(</code>加上以下内容<code>)</code></p><table><thead><tr><th align="left">关键字</th><th align="center">解释</th></tr></thead><tbody><tr><td align="left"><code>borders_innerH</code></td><td align="center">内边框H</td></tr><tr><td align="left"><code>borders_innerV</code></td><td align="center">内边框V</td></tr><tr><td align="left"><code>borders_outerH</code></td><td align="center">外边框H</td></tr><tr><td align="left"><code>borders_outerV</code></td><td align="center">外边框V</td></tr><tr><td align="left"><code>row_background</code></td><td align="center">每一行颜色交错</td></tr></tbody></table><p>（H：横向，V：竖向）</p><h3 id="列标题"><a href="#列标题" class="headerlink" title="列标题"></a>列标题</h3><p>在<code>dpg.table(</code>中把<code>header_row</code>设置为<code>True</code> <code>)</code></p><p>将显示<code>dpg.add_table_column()</code>的<code>label</code></p><h3 id="列选项"><a href="#列选项" class="headerlink" title="列选项"></a>列选项</h3><table><thead><tr><th align="left">关键字</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="left"><code>init_width_or_weight</code></td><td align="center">0.0</td><td align="center">设置列的起始宽度(固定策略)或比例(拉伸)</td></tr><tr><td align="left"><code>default_hide</code></td><td align="center">False</td><td align="center">默认为隐藏&#x2F;禁用列</td></tr><tr><td align="left"><code>default_sort</code></td><td align="center">False</td><td align="center">默认为排序列</td></tr><tr><td align="left"><code>width_stretch</code></td><td align="center">False</td><td align="center">列将被拉伸。最好是禁用水平滚动（如果表格的尺寸是<code>_SizingStretchSame</code>或<code>_SizingStretchProp</code>则默认）。</td></tr><tr><td align="left"><code>width_fixed</code></td><td align="center">False</td><td align="center">列将不会被拉伸。最好是启用水平滚动（如果表的尺寸是<code>_SizingFixedFit</code>且表可调整大小，则默认）</td></tr><tr><td align="left"><code>no_resize</code></td><td align="center">False</td><td align="center">禁用手动调整大小</td></tr><tr><td align="left"><code>no_reorder</code></td><td align="center">False</td><td align="center">禁用此列的手动重新排序，这也将防止其他列与此列交叉</td></tr><tr><td align="left"><code>no_hide</code></td><td align="center">False</td><td align="center">禁用隐藏&#x2F;禁用此列的功能</td></tr><tr><td align="left"><code>no_clip</code></td><td align="center">False</td><td align="center">禁用此列的剪裁</td></tr><tr><td align="left"><code>no_sort</code></td><td align="center">False</td><td align="center">禁用此列的排序</td></tr><tr><td align="left"><code>no_sort_ascending</code></td><td align="center">False</td><td align="center">禁用按升序排序的功能</td></tr><tr><td align="left"><code>no_sort_descending</code></td><td align="center">False</td><td align="center">禁用按降序排序的功能</td></tr><tr><td align="left"><code>no_header_width</code></td><td align="center">False</td><td align="center">禁用页眉文本宽度对自动列宽的影响</td></tr><tr><td align="left"><code>prefer_sort_ascending</code></td><td align="center">True</td><td align="center">在此列上首次排序时将初始排序方向设置为升序(默认)</td></tr><tr><td align="left"><code>prefer_sort_descending</code></td><td align="center">False</td><td align="center">在此列上首次排序时，将初始排序方向设置为降序</td></tr><tr><td align="left"><code>indent_enabled</code></td><td align="center">False</td><td align="center">输入单元格时使用当前缩进值(第0列默认)</td></tr><tr><td align="left"><code>indent_disable</code></td><td align="center">False</td><td align="center">输入单元格时忽略当前的缩进值（默认为列&gt;0）。在单元格内的缩进变化仍将被尊重(?)</td></tr></tbody></table><p>###列排序</p><ol><li>在<code>dpg.table</code>添加属性<code>sortable=True</code>和<code>callback</code></li><li>不要排序的列添加属性<code>no_sort=True</code>（默认<code>False</code>）</li><li>自定义排序</li></ol><p>排序回调示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sort_callback</span>(<span class="params">sender, sort_specs</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># sort_specs scenarios:</span></span><br><span class="line">    <span class="comment">#   1. no sorting -&gt; sort_specs == None</span></span><br><span class="line">    <span class="comment">#   2. single sorting -&gt; sort_specs == [[column_id, direction]]</span></span><br><span class="line">    <span class="comment">#   3. multi sorting -&gt; sort_specs == [[column_id, direction], [column_id, direction], ...]</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># notes:</span></span><br><span class="line">    <span class="comment">#   1. direction is ascending if == 1</span></span><br><span class="line">    <span class="comment">#   2. direction is ascending if == -1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># no sorting case</span></span><br><span class="line">    <span class="keyword">if</span> sort_specs <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    rows = dpg.get_item_children(sender, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create a list that can be sorted based on first cell</span></span><br><span class="line">    <span class="comment"># value, keeping track of row and value used to sort</span></span><br><span class="line">    sortable_list = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        first_cell = dpg.get_item_children(row, <span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">        sortable_list.append([row, dpg.get_value(first_cell)])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_sorter</span>(<span class="params">e</span>):</span><br><span class="line">        <span class="keyword">return</span> e[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    sortable_list.sort(key=_sorter, reverse=sort_specs[<span class="number">0</span>][<span class="number">1</span>] &lt; <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create list of just sorted row ids</span></span><br><span class="line">    new_order = []</span><br><span class="line">    <span class="keyword">for</span> pair <span class="keyword">in</span> sortable_list:</span><br><span class="line">        new_order.append(pair[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    dpg.reorder_items(sender, <span class="number">1</span>, new_order)</span><br></pre></td></tr></table></figure><h3 id="裁剪"><a href="#裁剪" class="headerlink" title="裁剪"></a>裁剪</h3><p>优化性能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">clipper_toggle</span>(<span class="params">sender</span>):</span><br><span class="line">    dpg.configure_item(<span class="string">&quot;table_clip&quot;</span>, clipper=dpg.get_value(sender))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_checkbox(label=<span class="string">&quot;clipper&quot;</span>, callback=clipper_toggle, default_value=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> dpg.table(header_row=<span class="literal">False</span>, tag=<span class="string">&quot;table_clip&quot;</span>, clipper=<span class="literal">True</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            dpg.add_table_column()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30000</span>):</span><br><span class="line">            <span class="keyword">with</span> dpg.table_row():</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">                    dpg.add_text(<span class="string">f&quot;Row<span class="subst">&#123;i&#125;</span> Column<span class="subst">&#123;j&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><ol><li><code>dpg.table</code>添加属性<code>clipper=True</code></li><li>添加<code>dpg.configure_item(&quot;</code>tag<code>&quot;, clipper=True)</code></li></ol><h2 id="纹理"><a href="#纹理" class="headerlink" title="纹理"></a>纹理</h2><p>提供3种类型的纹理：静态的、原始纹理、动态的</p><p>可以在以下组件中使用纹理：<code>mvDrawImage</code>、<code>mvImage</code>、<code>mvImageButton</code>、<code>mvImageSeries</code></p><p>它们总是一维列表或数组</p><p>使用关键字Show将打开纹理注册表</p><h3 id="静态纹理"><a href="#静态纹理" class="headerlink" title="静态纹理"></a>静态纹理</h3><p>用于不经常更改的图像，通常在启动时加载</p><p>如果需要更新它们，您可以删除并重新创建它们。它们可以是列表、元组、NumPy数组，以及支持具有连续数据的Python缓冲区协议的任何类型</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">texture_data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span> * <span class="number">100</span>):</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line">    texture_data.append(<span class="number">0</span>)</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.texture_registry(show=<span class="literal">True</span>):</span><br><span class="line">    dpg.add_static_texture(width=<span class="number">100</span>, height=<span class="number">100</span>, default_value=texture_data, tag=<span class="string">&quot;texture_tag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_image(<span class="string">&quot;texture_tag&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="动态纹理"><a href="#动态纹理" class="headerlink" title="动态纹理"></a>动态纹理</h3><p>用于<strong>每帧可以更改</strong>的中小型纹理</p><p>可以使用<code>set_value</code>更新这些选项，但宽度和高度必须与第一次创建纹理时相同</p><p>除了执行安全检查和转化外，这些纹理与原始纹理相似</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">texture_data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span> * <span class="number">100</span>):</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line">    texture_data.append(<span class="number">0</span>)</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.texture_registry(show=<span class="literal">True</span>):</span><br><span class="line">    dpg.add_dynamic_texture(width=<span class="number">100</span>, height=<span class="number">100</span>, default_value=texture_data, tag=<span class="string">&quot;texture_tag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_update_dynamic_textures</span>(<span class="params">sender, app_data, user_data</span>):</span><br><span class="line">    new_color = dpg.get_value(sender)</span><br><span class="line">    new_color[<span class="number">0</span>] = new_color[<span class="number">0</span>] / <span class="number">255</span></span><br><span class="line">    new_color[<span class="number">1</span>] = new_color[<span class="number">1</span>] / <span class="number">255</span></span><br><span class="line">    new_color[<span class="number">2</span>] = new_color[<span class="number">2</span>] / <span class="number">255</span></span><br><span class="line">    new_color[<span class="number">3</span>] = new_color[<span class="number">3</span>] / <span class="number">255</span></span><br><span class="line"></span><br><span class="line">    new_texture_data = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span> * <span class="number">100</span>):</span><br><span class="line">        new_texture_data.append(new_color[<span class="number">0</span>])</span><br><span class="line">        new_texture_data.append(new_color[<span class="number">1</span>])</span><br><span class="line">        new_texture_data.append(new_color[<span class="number">2</span>])</span><br><span class="line">        new_texture_data.append(new_color[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">    dpg.set_value(<span class="string">&quot;texture_tag&quot;</span>, new_texture_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_image(<span class="string">&quot;texture_tag&quot;</span>)</span><br><span class="line">    dpg.add_color_picker((<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), label=<span class="string">&quot;Texture&quot;</span>, no_side_preview=<span class="literal">True</span>, alpha_bar=<span class="literal">True</span>, width=<span class="number">200</span>, callback=_update_dynamic_textures)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="原始纹理"><a href="#原始纹理" class="headerlink" title="原始纹理"></a>原始纹理</h3><p>使用方式与动态纹理相同，但只接受数组(NumPy、PYTHON等)且不执行任何安全检查。</p><p>这些纹理用于需要每帧更新大型纹理的高性能应用程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> array</span><br><span class="line"></span><br><span class="line">texture_data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span> * <span class="number">100</span>):</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line">    texture_data.append(<span class="number">0</span>)</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line">    texture_data.append(<span class="number">255</span> / <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">raw_data = array.array(<span class="string">&#x27;f&#x27;</span>, texture_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.texture_registry(show=<span class="literal">True</span>):</span><br><span class="line">    dpg.add_raw_texture(width=<span class="number">100</span>, height=<span class="number">100</span>, default_value=raw_data, <span class="built_in">format</span>=dpg.mvFormat_Float_rgba, tag=<span class="string">&quot;texture_tag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_dynamic_texture</span>(<span class="params">sender, app_data, user_data</span>):</span><br><span class="line">    new_color = dpg.get_value(sender)</span><br><span class="line">    new_color[<span class="number">0</span>] = new_color[<span class="number">0</span>] / <span class="number">255</span></span><br><span class="line">    new_color[<span class="number">1</span>] = new_color[<span class="number">1</span>] / <span class="number">255</span></span><br><span class="line">    new_color[<span class="number">2</span>] = new_color[<span class="number">2</span>] / <span class="number">255</span></span><br><span class="line">    new_color[<span class="number">3</span>] = new_color[<span class="number">3</span>] / <span class="number">255</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span> * <span class="number">100</span> * <span class="number">4</span>):</span><br><span class="line">        raw_data[i] = new_color[i % <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_image(<span class="string">&quot;texture_tag&quot;</span>)</span><br><span class="line">    dpg.add_color_picker((<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), label=<span class="string">&quot;Texture&quot;</span>, no_side_preview=<span class="literal">True</span>, alpha_bar=<span class="literal">True</span>, width=<span class="number">200</span>, callback=update_dynamic_texture)</span><br></pre></td></tr></table></figure><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>支持：</p><table><thead><tr><th align="left">格式化</th><th align="center">静态纹理</th><th align="center">动态纹理</th><th align="center">原始纹理</th></tr></thead><tbody><tr><td align="left"><code>mvFormat_Float_rgba</code></td><td align="center">✅</td><td align="center">✅</td><td align="center">✅</td></tr><tr><td align="left"><code>mvFormat_Float_rgb</code></td><td align="center"></td><td align="center"></td><td align="center">✅</td></tr><tr><td align="left"><code>mvFormat_Int_rgba</code></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left"><code>mvFormat_Int_rgba</code></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="加载图像"><a href="#加载图像" class="headerlink" title="加载图像"></a>加载图像</h3><p>使用<code>load_image</code>文件加载图像数据</p><p>此函数返回一个元组，其中</p><blockquote><p>0-&gt;宽度</p><p>1-&gt;高度</p><p>2-&gt;途径</p><p>3-&gt;DATA(一维数组，mvBuffer)</p><p>如果失败，则返回 None 。</p></blockquote><p>接受的文件类型包括：</p><ul><li>JPEG(无12位&#x2F;通道JPEG或采用算术编码的JPEG)</li><li>PNG</li><li>BMP</li><li>PSD</li><li>GIF</li><li>HDR</li><li>PIC</li><li>PPM</li><li>PGM</li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">width, height, channels, data = dpg.load_image(<span class="string">&quot;xxx.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.texture_registry(show=<span class="literal">True</span>):</span><br><span class="line">    dpg.add_static_texture(width=width, height=height, default_value=data, tag=<span class="string">&quot;texture_tag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_image(<span class="string">&quot;texture_tag&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="保存图像"><a href="#保存图像" class="headerlink" title="保存图像"></a>保存图像</h3><p>使用<code>save_image</code>将图像数据保存到文件。</p><p>该图像是从左到右、从上到下存储的像素的矩形。每个像素最多包含4个数据分量，每个通道8位交织，顺序如下：1&#x3D;Y、2&#x3D;YA、3&#x3D;RGB、4&#x3D;RGBA（y表示单色）</p><p>PNG创建的输出文件具有与输入相同数量的组件，BMP格式将文件格式中的Y扩展为RGB且不输出Alpha。</p><p>接受的文件类型包括：</p><ul><li>PNG</li><li>JPG</li><li>BMP</li><li>TGA</li><li>HDR</li></ul><p>文件类型由扩展名决定。必须为小写(PNG、JPG、BMP、TGA、HDR)。</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">width, height = <span class="number">255</span>, <span class="number">255</span></span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(width*height):</span><br><span class="line">    data.append(<span class="number">255</span>)</span><br><span class="line">    data.append(<span class="number">255</span>)</span><br><span class="line">    data.append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>):</span><br><span class="line">    dpg.add_button(label=<span class="string">&quot;Save Image&quot;</span>, callback=<span class="keyword">lambda</span>:dpg.save_image(file=<span class="string">&quot;newImage.png&quot;</span>, width=width, height=height, data=data, components=<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">dpg.show_viewport()</span><br><span class="line"><span class="keyword">while</span> dpg.is_dearpygui_running():</span><br><span class="line">    dpg.render_dearpygui_frame()</span><br></pre></td></tr></table></figure><h2 id="主题-1"><a href="#主题-1" class="headerlink" title="主题"></a>主题</h2><p>主题是由以下内容组成的容器：</p><blockquote><p>主题组件：是主题中的容器，可以指定主题颜色&#x2F;样式的目标项目类型</p><p>主题颜色：添加到主题组件并设置颜色的项</p><p>主题样式：添加到主题组件并设置样式的项目</p></blockquote><p>主题可以：</p><blockquote><p>绑定为默认主题。这将在所有窗口中产生全局效果</p><p>绑定到一个容器。如果适用的主题组件在该主题中，将应用到它的子项</p><p>如果主题中有适用的主题组件，则绑定到项类型、项容器或特定项</p><p>主题组件必须具有指定的项目类型。这可以是<code>MvAll</code>适用于所有组件或特定组件类型。</p></blockquote><p>样式和颜色项目有一个命名的常量，并将该常量应用于其组件的命名项目类型。风格和颜色项目必须有一个命名的类别，常量在名称中包含其类别</p><p>主题颜色和样式分为以下类别：</p><blockquote><p><code>mvThemeCat_Plots</code> ：与绘图关联的项目。标识的样式&#x2F;颜色常量：<code> mvPlotCol_*</code>或<code>mvPlotStyle_*</code></p><p><code>mvThemeCat_Nodes</code> ：与bode关联的项。标识的样式&#x2F;颜色常量： <code>mvNodeCol_*</code>或<code>mvNodeStyle_*</code></p><p><code>mvThemeCat_Core</code> ：所有其他在dearpygui内组件。标识的样式&#x2F;颜色常量 ：<code>mvThemeCol_*</code>或<code>mvThemeStyle_*</code></p></blockquote><p>可参考<code>dpg.show_style_editor() </code></p><h3 id="默认主题-全局"><a href="#默认主题-全局" class="headerlink" title="默认主题(全局)"></a>默认主题(全局)</h3><p>将在所有窗口中全局应用该主题，并适用于子窗口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.theme() <span class="keyword">as</span> global_theme:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> dpg.theme_component(dpg.mvAll):</span><br><span class="line">        dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (<span class="number">255</span>, <span class="number">140</span>, <span class="number">23</span>), category=dpg.mvThemeCat_Core)</span><br><span class="line">        dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, <span class="number">5</span>, category=dpg.mvThemeCat_Core)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> dpg.theme_component(dpg.mvInputInt):</span><br><span class="line">        dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (<span class="number">140</span>, <span class="number">255</span>, <span class="number">23</span>), category=dpg.mvThemeCat_Core)</span><br><span class="line">        dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, <span class="number">5</span>, category=dpg.mvThemeCat_Core)</span><br><span class="line"></span><br><span class="line">dpg.bind_theme(global_theme)</span><br></pre></td></tr></table></figure><h3 id="只特定于组件"><a href="#只特定于组件" class="headerlink" title="只特定于组件"></a>只特定于组件</h3><p>将主题应用于特定组件，将覆盖该指定项之前的任何主题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> dpg.window(label=<span class="string">&quot;Tutorial&quot;</span>, pos=(<span class="number">20</span>, <span class="number">50</span>), width=<span class="number">275</span>, height=<span class="number">225</span>) <span class="keyword">as</span> win1:</span><br><span class="line">    t = dpg.add_input_text(default_value=<span class="string">&quot;some text&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">with</span> dpg.theme() <span class="keyword">as</span> item_theme:</span><br><span class="line">    <span class="keyword">with</span> dpg.theme_component(dpg.mvAll):</span><br><span class="line">        dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (<span class="number">200</span>, <span class="number">200</span>, <span class="number">100</span>), category=dpg.mvThemeCat_Core)</span><br><span class="line">        dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, <span class="number">0</span>, category=dpg.mvThemeCat_Core)</span><br><span class="line"></span><br><span class="line">dpg.bind_item_theme(t, item_theme)</span><br></pre></td></tr></table></figure><h3 id="主题的优先顺序"><a href="#主题的优先顺序" class="headerlink" title="主题的优先顺序"></a>主题的优先顺序</h3><p>应用的主题的优先顺序按以下顺序排列:</p><ol><li>具体组件</li><li>继承的容器</li><li>全局</li></ol><h3 id="禁用组件的主题"><a href="#禁用组件的主题" class="headerlink" title="禁用组件的主题"></a>禁用组件的主题</h3><p>每个组件都有单独的禁用主题，在禁用时会使用该主题</p><p>如果未设置禁用主题，则将使用默认禁用主题</p><ol><li>组件加<code>enabled=False</code></li><li><code>with dpg.theme_xxx():</code>添加参数<code>enabled_state=False</code></li></ol><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><h4 id="图表图形"><a href="#图表图形" class="headerlink" title="图表图形"></a>图表图形</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvPlotMarker_None</code></td><td align="center">无</td></tr><tr><td align="left"><code>mvPlotMarker_Circle</code></td><td align="center">圆圈</td></tr><tr><td align="left"><code>mvPlotMarker_Square</code></td><td align="center">方形</td></tr><tr><td align="left"><code>mvPlotMarker_Diamond</code></td><td align="center">钻石形</td></tr><tr><td align="left"><code>mvPlotMarker_Up</code></td><td align="center">上</td></tr><tr><td align="left"><code>mvPlotMarker_Down</code></td><td align="center">下</td></tr><tr><td align="left"><code>mvPlotMarker_Left</code></td><td align="center">左</td></tr><tr><td align="left"><code>mvPlotMarker_Right</code></td><td align="center">右</td></tr><tr><td align="left"><code>mvPlotMarker_Cross</code></td><td align="center">叉号</td></tr><tr><td align="left"><code>mvPlotMarker_Plus</code></td><td align="center">加号</td></tr><tr><td align="left"><code>mvPlotMarker_Asterisk</code></td><td align="center">星号</td></tr></tbody></table><h4 id="支持颜色的"><a href="#支持颜色的" class="headerlink" title="支持颜色的"></a>支持颜色的</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvThemeCol_Text</code></td><td align="center">文本</td></tr><tr><td align="left"><code>mvThemeCol_TabActive</code></td><td align="center">激活Tab</td></tr><tr><td align="left"><code>mvThemeCol_SliderGrabActive</code></td><td align="center">滑块抓取活动</td></tr><tr><td align="left"><code>mvThemeCol_TextDisabled</code></td><td align="center">已禁用的文本</td></tr><tr><td align="left"><code>mvThemeCol_TabUnfocused</code></td><td align="center">未聚焦Tab</td></tr><tr><td align="left"><code>mvThemeCol_Button</code></td><td align="center">按钮</td></tr><tr><td align="left"><code>mvThemeCol_WindowBg</code></td><td align="center">窗口背景</td></tr><tr><td align="left"><code>mvThemeCol_TabUnfocusedActive</code></td><td align="center">激活未聚焦Tab</td></tr><tr><td align="left"><code>mvThemeCol_ButtonHovered</code></td><td align="center">被鼠标悬停的按钮</td></tr><tr><td align="left"><code>mvThemeCol_ChildBg</code></td><td align="center">子背景</td></tr><tr><td align="left"><code>mvThemeCol_DockingPreview</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ButtonActiv</code></td><td align="center">被点击的按钮</td></tr><tr><td align="left"><code>mvThemeCol_Border</code></td><td align="center">边缘</td></tr><tr><td align="left"><code>mvThemeCol_DockingEmptyBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_Header</code></td><td align="center">标题</td></tr><tr><td align="left"><code>mvThemeCol_PopupBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_PlotLines</code></td><td align="center">图表的线</td></tr><tr><td align="left"><code>mvThemeCol_HeaderHovered</code></td><td align="center">被悬停的标题</td></tr><tr><td align="left"><code>mvThemeCol_BorderShadow</code></td><td align="center">边缘阴影</td></tr><tr><td align="left"><code>mvThemeCol_PlotLinesHovered</code></td><td align="center">被悬停的图表的线</td></tr><tr><td align="left"><code>mvThemeCol_HeaderActive</code></td><td align="center">激活的标题<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_FrameBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_PlotHistogram</code></td><td align="center">图表直方图</td></tr><tr><td align="left"><code>mvThemeCol_Separator</code></td><td align="center">分隔符</td></tr><tr><td align="left"><code>mvThemeCol_FrameBgHovered</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_PlotHistogramHovered</code></td><td align="center">被悬停的图表直方图</td></tr><tr><td align="left"><code>mvThemeCol_SeparatorHovered</code></td><td align="center">被悬停的分隔符</td></tr><tr><td align="left"><code>mvThemeCol_FrameBgActive</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TableHeaderBg</code></td><td align="center">表头背景</td></tr><tr><td align="left"><code>mvThemeCol_SeparatorActive</code></td><td align="center">激活的分隔符<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TitleBg</code></td><td align="center">标题背景</td></tr><tr><td align="left"><code>mvThemeCol_SeparatorTableBorderStrong</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ResizeGrip</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TitleBgActive</code></td><td align="center">激活的标题背景<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TableBorderLight</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ResizeGripHovered</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TitleBgCollapsed</code></td><td align="center">崩溃的标题背景<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_TableRowBg</code></td><td align="center">表格行背景</td></tr><tr><td align="left"><code>mvThemeCol_ResizeGripActive</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_MenuBarBg</code></td><td align="center">菜单栏背景</td></tr><tr><td align="left"><code>mvThemeCol_TableRowBgAlt</code></td><td align="center">表格行背景符号<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_Tab</code></td><td align="center">Tab</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarBg</code></td><td align="center">滚动栏背景</td></tr><tr><td align="left"><code>mvThemeCol_TextSelectedBg</code></td><td align="center">文本选择背景</td></tr><tr><td align="left"><code>mvThemeCol_TabHovered</code></td><td align="center">被悬停的Tab</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarGrab</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_DragDropTarget</code></td><td align="center">拖动目标</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarGrabHovered</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_NavHighlight</code></td><td align="center">导航栏高亮</td></tr><tr><td align="left"><code>mvThemeCol_ScrollbarGrabActive</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_NavWindowingHighlight</code></td><td align="center">导航栏窗口高亮<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_CheckMark</code></td><td align="center">打勾<code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_NavWindowingDimBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_SliderGrab</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvThemeCol_ModalWindowDimBg</code></td><td align="center"><code>？</code></td></tr></tbody></table><h4 id="图表颜色"><a href="#图表颜色" class="headerlink" title="图表颜色"></a>图表颜色</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvPlotCol_Line</code></td><td align="center">线</td></tr><tr><td align="left"><code>mvPlotCol_LegendBg</code></td><td align="center">图例背景</td></tr><tr><td align="left"><code>mvPlotCol_YAxisGrid</code></td><td align="center">Y轴网格</td></tr><tr><td align="left"><code>mvPlotCol_Fill</code></td><td align="center">填充</td></tr><tr><td align="left"><code>mvPlotCol_LegendBorder</code></td><td align="center">图例边框</td></tr><tr><td align="left"><code>mvPlotCol_YAxis2</code></td><td align="center">Y轴2</td></tr><tr><td align="left"><code>mvPlotCol_MarkerOutline</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_LegendText</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_YAxisGrid2</code></td><td align="center">Y轴网格2</td></tr><tr><td align="left"><code>mvPlotCol_MarkerFill</code></td><td align="center">标记填充</td></tr><tr><td align="left"><code>mvPlotCol_TitleText</code></td><td align="center">标题文本</td></tr><tr><td align="left"><code>mvPlotCol_YAxis3</code></td><td align="center">Y轴3</td></tr><tr><td align="left"><code>mvPlotCol_ErrorBar</code></td><td align="center">错误栏</td></tr><tr><td align="left"><code>mvPlotCol_InlayText</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_YAxisGrid3</code></td><td align="center">Y轴网格3</td></tr><tr><td align="left"><code>mvPlotCol_FrameBg</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotCol_XAxis</code></td><td align="center">X轴</td></tr><tr><td align="left"><code>mvPlotCol_Selection</code></td><td align="center">选择器</td></tr><tr><td align="left"><code>mvPlotCol_PlotBg</code></td><td align="center">图表背景</td></tr><tr><td align="left"><code>mvPlotCol_XAxisGrid</code></td><td align="center">X轴网格</td></tr><tr><td align="left"><code>mvPlotCol_Query</code></td><td align="center">查询</td></tr><tr><td align="left"><code>mvPlotCol_PlotBorder</code></td><td align="center">图表边框</td></tr><tr><td align="left"><code>mvPlotCol_YAxis</code></td><td align="center">Y轴</td></tr><tr><td align="left"><code>mvPlotCol_Crosshairs</code></td><td align="center">十字线（坐标）</td></tr></tbody></table><h4 id="node颜色"><a href="#node颜色" class="headerlink" title="node颜色"></a>node颜色</h4><table><thead><tr><th align="left">参数</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvNodeCol_NodeBackground</code></td><td align="center">Node背景</td></tr><tr><td align="left"><code>mvNodeCol_TitleBarSelected</code></td><td align="center">已选择标题栏</td></tr><tr><td align="left"><code>mvNodeCol_BoxSelector</code></td><td align="center">盒子选择器</td></tr><tr><td align="left"><code>mvNodeCol_NodeBackgroundHovered</code></td><td align="center">被悬停的Node背景</td></tr><tr><td align="left"><code>mvNodeCol_Link</code></td><td align="center">链接</td></tr><tr><td align="left"><code>mvNodeCol_BoxSelectorOutline</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvNodeCol_NodeBackgroundSelected</code></td><td align="center">已选择Note背景</td></tr><tr><td align="left"><code>mvNodeCol_LinkHovered</code></td><td align="center">被悬停的链接</td></tr><tr><td align="left"><code>mvNodeCol_GridBackground</code></td><td align="center">网格背景</td></tr><tr><td align="left"><code>mvNodeCol_NodeOutline</code></td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvNodeCol_LinkSelected</code></td><td align="center">已选择背景</td></tr><tr><td align="left"><code>mvNodeCol_GridLine</code></td><td align="center">网格线</td></tr><tr><td align="left"><code>mvNodeCol_TitleBar</code></td><td align="center">标题栏</td></tr><tr><td align="left"><code>mvNodeCol_Pin</code></td><td align="center">钉</td></tr><tr><td align="left"><code>mvNodeCol_PinHovered</code></td><td align="center">已悬停的钉</td></tr><tr><td align="left"><code>mvNodeCol_TitleBarHovered</code></td><td align="center">已悬停的标题栏</td></tr></tbody></table><h4 id="核心样式"><a href="#核心样式" class="headerlink" title="核心样式"></a>核心样式</h4><table><thead><tr><th align="left">参数</th><th align="center">组件</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvStyleVar_Alpha</code></td><td align="center">1</td><td align="center">透明度</td></tr><tr><td align="left"><code>mvStyleVar_WindowPadding</code></td><td align="center">2</td><td align="center">窗口填充</td></tr><tr><td align="left"><code>mvStyleVar_WindowRounding</code></td><td align="center">1</td><td align="center">窗口圆角</td></tr><tr><td align="left"><code>mvStyleVar_WindowBorderSize</code></td><td align="center">1</td><td align="center">窗口边缘大小</td></tr><tr><td align="left"><code>mvStyleVar_WindowMinSize</code></td><td align="center">2</td><td align="center">窗口最小大小</td></tr><tr><td align="left"><code>mvStyleVar_WindowTitleAlign</code></td><td align="center">2</td><td align="center">窗口标题对齐</td></tr><tr><td align="left"><code>mvStyleVar_ChildRounding</code></td><td align="center">1</td><td align="center">子边距</td></tr><tr><td align="left"><code>mvStyleVar_ChildBorderSize</code></td><td align="center">1</td><td align="center">子边缘大小</td></tr><tr><td align="left"><code>mvStyleVar_PopupRounding</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_PopupBorderSize</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_FramePadding</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_FrameRounding</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_FrameBorderSize</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_ItemSpacing</code></td><td align="center">2</td><td align="center">组件间隔</td></tr><tr><td align="left"><code>mvStyleVar_ItemInnerSpacing</code></td><td align="center">2</td><td align="center">组件内间隔</td></tr><tr><td align="left"><code>mvStyleVar_IndentSpacing</code></td><td align="center">1</td><td align="center">缩进间隔</td></tr><tr><td align="left"><code>mvStyleVar_CellPadding</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_ScrollbarSize</code></td><td align="center">1</td><td align="center">滚动条大小</td></tr><tr><td align="left"><code>mvStyleVar_ScrollbarRounding</code></td><td align="center">1</td><td align="center">滚动条圆角</td></tr><tr><td align="left"><code>mvStyleVar_GrabMinSize</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_GrabRounding</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvStyleVar_TabRounding</code></td><td align="center">1</td><td align="center">Tab圆角</td></tr><tr><td align="left"><code>mvStyleVar_ButtonTextAlign</code></td><td align="center">2</td><td align="center">按钮文本对齐</td></tr><tr><td align="left"><code>mvStyleVar_SelectableTextAlign</code></td><td align="center">2</td><td align="center">可选文本对齐</td></tr></tbody></table><h4 id="打印样式"><a href="#打印样式" class="headerlink" title="打印样式"></a>打印样式</h4><table><thead><tr><th align="left">参数</th><th align="center">组件</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvPlotStyleVar_LineWeight</code></td><td align="center">1</td><td align="center">线宽</td></tr><tr><td align="left"><code>mvPlotStyleVar_Marker</code></td><td align="center">1</td><td align="center">标记</td></tr><tr><td align="left"><code>mvPlotStyleVar_MarkerSize</code></td><td align="center">1</td><td align="center">标记大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_MarkerWeight</code></td><td align="center">1</td><td align="center">标记宽</td></tr><tr><td align="left"><code>mvPlotStyleVar_FillAlpha</code></td><td align="center">1</td><td align="center">填充透明度</td></tr><tr><td align="left"><code>mvPlotStyleVar_ErrorBarSize</code></td><td align="center">1</td><td align="center">错误栏大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_ErrorBarWeight</code></td><td align="center">1</td><td align="center">错误栏宽度</td></tr><tr><td align="left"><code>mvPlotStyleVar_DigitalBitHeight</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_DigitalBitGap</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotBorderSize</code></td><td align="center">1</td><td align="center">图表边框大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorAlpha</code></td><td align="center">1</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MajorTickLen</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorTickLen</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MajorTickSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorTickSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MajorGridSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_MinorGridSize</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotPadding</code></td><td align="center">2</td><td align="center">图表填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LabelPadding</code></td><td align="center">2</td><td align="center">标签填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LegendPadding</code></td><td align="center">2</td><td align="center">图例填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LegendInnerPadding</code></td><td align="center">2</td><td align="center">内图例填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_LegendSpacing</code></td><td align="center">2</td><td align="center">图例边距</td></tr><tr><td align="left"><code>mvPlotStyleVar_MousePosPadding</code></td><td align="center">2</td><td align="center">鼠标位置填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_AnnotationPadding</code></td><td align="center">2</td><td align="center">注释填充</td></tr><tr><td align="left"><code>mvPlotStyleVar_FitPadding</code></td><td align="center">2</td><td align="center"><code>？</code></td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotDefaultSize</code></td><td align="center">2</td><td align="center">图表默认大小</td></tr><tr><td align="left"><code>mvPlotStyleVar_PlotMinSize</code></td><td align="center">2</td><td align="center">图表最小大小</td></tr></tbody></table><h4 id="Node样式"><a href="#Node样式" class="headerlink" title="Node样式"></a>Node样式</h4><table><thead><tr><th align="left">参数</th><th align="center">组件</th><th align="center">意</th></tr></thead><tbody><tr><td align="left"><code>mvNodeStyleVar_GridSpacing</code></td><td align="center">1</td><td align="center">网格间距</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodeCornerRounding</code></td><td align="center">1</td><td align="center">Node边角圆角</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodePaddingHorizontal</code></td><td align="center">1</td><td align="center">Node横向填充</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodePaddingVertical</code></td><td align="center">1</td><td align="center">Node竖向填充</td></tr><tr><td align="left"><code>mvNodeStyleVar_NodeBorderThickness</code></td><td align="center">1</td><td align="center">边缘大小</td></tr><tr><td align="left"><code>mvNodeStyleVar_LinkThickness</code></td><td align="center">1</td><td align="center">链接厚度</td></tr><tr><td align="left"><code>mvNodeStyleVar_LinkLineSegmentsPerLength</code></td><td align="center">1</td><td align="center">链接线长</td></tr><tr><td align="left"><code>mvNodeStyleVar_LinkHoverDistance</code></td><td align="center">1</td><td align="center">链接悬停距离</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinCircleRadius</code></td><td align="center">1</td><td align="center">钉 圆半径</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinQuadSideLength</code></td><td align="center">1</td><td align="center">钉 四边形长</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinTriangleSideLength</code></td><td align="center">1</td><td align="center">钉 三角形边长</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinLineThickness</code></td><td align="center">1</td><td align="center">钉 线条厚度</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinHoverRadius</code></td><td align="center">1</td><td align="center">钉 悬停半径</td></tr><tr><td align="left"><code>mvNodeStyleVar_PinOffset</code></td><td align="center">1</td><td align="center">钉 偏移</td></tr></tbody></table><h2 id="工具提示"><a href="#工具提示" class="headerlink" title="工具提示"></a>工具提示</h2><p>是当项目悬停时显示的窗口，可以保存任何其他组件的容器，必须具有父参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dpg.add_text(<span class="string">&quot;Hover me&quot;</span>, tag=<span class="string">&quot;tooltip_parent&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> dpg.tooltip(<span class="string">&quot;tooltip_parent&quot;</span>):</span><br><span class="line">    dpg.add_text(<span class="string">&quot;A tooltip&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DearPyGui-笔记&quot;&gt;&lt;a href=&quot;#DearPyGui-笔记&quot; class=&quot;headerlink&quot; title=&quot;DearPyGui 笔记&quot;&gt;&lt;/a&gt;DearPyGui 笔记&lt;/h1&gt;&lt;p&gt;一个好用的 Python GUI模块&lt;/p&gt;
&lt;p&gt;基于原文</summary>
      
    
    
    
    <category term="Dev" scheme="https://for-the-zero.github.io/categories/Dev/"/>
    
    
    <category term="Python" scheme="https://for-the-zero.github.io/tags/Python/"/>
    
    <category term="Dev" scheme="https://for-the-zero.github.io/tags/Dev/"/>
    
  </entry>
  
  <entry>
    <title>关于</title>
    <link href="https://for-the-zero.github.io/2023/01/14/%E5%85%B3%E4%BA%8E/"/>
    <id>https://for-the-zero.github.io/2023/01/14/%E5%85%B3%E4%BA%8E/</id>
    <published>2023-01-14T06:46:00.000Z</published>
    <updated>2023-05-01T14:30:48.195Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center"><img src="/img/avatar.png"></th><th align="center">for_the_zero<br>我，站长<br>一只中学牲</th><th align="center">——————–</th></tr></thead><tbody><tr><td align="center">就……凭兴趣搞的</td><td align="center">但是要是内容有更新，我不一定会改<br>例如上面那行</td><td align="center">我不太会搞</td></tr><tr><td align="center">写过:<br>scratch(不想搞了)<br>python(边写边学)<br>html(不怎么会)</td><td align="center">偶尔写几篇文章<br>文笔不好，但文章重要的是内容</td><td align="center">内容啥都有</td></tr><tr><td align="center">内容可能是→</td><td align="center">自己感兴趣的<br>教程<br>问题解决<br>乱发的<br>……</td><td align="center">评论区：issues</td></tr></tbody></table><hr><p>博客：</p><table><thead><tr><th align="center">Github Pages</th><th align="center">Netlify</th><th align="center">Vercel</th></tr></thead><tbody><tr><td align="center"><a href="//for-the-zero.github.io">link</a></td><td align="center"><a href="//ftz-blog.netlify.app">link</a></td><td align="center"><a href="//ftz-blog.vercel.app">link</a></td></tr><tr><td align="center">较慢</td><td align="center">国内推荐</td><td align="center">国外推荐（国内被墙）</td></tr></tbody></table><p>网盘：</p><table><thead><tr><th align="center">Github Pages</th><th align="center">Vercel</th></tr></thead><tbody><tr><td align="center"><a href="//for-the-zero.github.io/MyDrive">link</a></td><td align="center"><a href="//ftz-drive.vercel.app">link</a></td></tr></tbody></table><hr><p>联系作者：</p><table><thead><tr><th align="center">平台</th><th align="center">链接或id</th></tr></thead><tbody><tr><td align="center">哔哩哔哩</td><td align="center">for_the_zero</td></tr><tr><td align="center">邮箱</td><td align="center"><a href="mailto:forthezero@outlook.com">forthezero@outlook.com</a></td></tr><tr><td align="center">GitHub</td><td align="center">for-the-zero</td></tr><tr><td align="center">稽木世界(scratch社区,不怎么玩了)</td><td align="center">forthezero</td></tr><tr><td align="center">别的</td><td align="center">我想想</td></tr></tbody></table><hr><p>其他看<a href="/2023/01/12/Test-1/">上一篇</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;/img/avatar.png&quot;&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;for_the_zero&lt;br&gt;我，站长&lt;br&gt;一只中学牲&lt;/th&gt;
&lt;th align=&quot;ce</summary>
      
    
    
    
    <category term="其他" scheme="https://for-the-zero.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="其他" scheme="https://for-the-zero.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>终于搭好了</title>
    <link href="https://for-the-zero.github.io/2023/01/12/Test-1/"/>
    <id>https://for-the-zero.github.io/2023/01/12/Test-1/</id>
    <published>2023-01-12T13:13:00.000Z</published>
    <updated>2023-05-01T14:28:03.219Z</updated>
    
    <content type="html"><![CDATA[<h4 id="终于把这玩意搭建好了"><a href="#终于把这玩意搭建好了" class="headerlink" title="终于把这玩意搭建好了"></a><strong>终于</strong>把这玩意搭建好了</h4><p>使用了Hexo和Github Pages</p><p>主题是<a href="https://github.com/viosey/hexo-theme-material">hexo-theme-material</a>，但是我涟漪效果呢？！</p><hr><p>由于<del>不会搞</del>懒得搞，有些功能是摆设，例如首页的<strong>搜索</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;终于把这玩意搭建好了&quot;&gt;&lt;a href=&quot;#终于把这玩意搭建好了&quot; class=&quot;headerlink&quot; title=&quot;终于把这玩意搭建好了&quot;&gt;&lt;/a&gt;&lt;strong&gt;终于&lt;/strong&gt;把这玩意搭建好了&lt;/h4&gt;&lt;p&gt;使用了Hexo和Github Pages&lt;</summary>
      
    
    
    
    <category term="其他" scheme="https://for-the-zero.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="其他" scheme="https://for-the-zero.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
