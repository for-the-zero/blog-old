{"meta":{"title":"for_the_zero 的破站","subtitle":"","description":"","author":"for_the_zero","url":"https://for-the-zero.github.io","root":"/"},"pages":[{"title":"关于","date":"2025-05-02T09:22:07.128Z","updated":"2023-06-03T11:52:58.842Z","comments":false,"path":"about/index.html","permalink":"https://for-the-zero.github.io/about/index.html","excerpt":"","text":"for_the_zero我，站长一只中学牲 ——————– 就……凭兴趣搞的 但是要是内容有更新，我不一定会改例如上面那行 我不太会搞 写过:scratch(不想搞了)python(边写边学)html(不怎么会) 偶尔写几篇文章文笔不好，但文章重要的是内容 内容啥都有 内容可能是→ 自己感兴趣的教程问题解决乱发的…… 评论区：issues 博客： Github Pages Netlify Vercel link link link 较慢 国内推荐 国外推荐（国内被墙） 网盘： Github Pages Vercel link link 联系作者： 平台 链接或id 哔哩哔哩 for_the_zero 邮箱 forthezero@outlook.com GitHub for-the-zero 稽木世界(scratch社区,不怎么玩了) forthezero 别的 我想想 其他看上一篇"}],"posts":[{"title":"往我自己做的简约表格加了一点AI","slug":"taplesai","date":"2025-04-05T11:45:00.000Z","updated":"2025-04-05T11:48:34.424Z","comments":true,"path":"2025/taplesai/","link":"","permalink":"https://for-the-zero.github.io/2025/taplesai/","excerpt":"","text":"Taple’s AITaple在前面已经介绍过了 这次是更新：AI调用支持 打开就可以用了，还有视频介绍 简单介绍点击工具栏最左边的菜单栏，可以看到最下面多了个Open AI Panel点进去就能打开面板了 不是OpenA，I但是只兼容OpenAI格式的API 两个流畅的动画叠在一起，看起来很舒适~ 首先是面板，视频里面的画面已经介绍得很好了 生成的过程长这样（视频截图） 试了一下，发现Qwen小参数模型都不太理想，最后换成Gemini 2.0 Flash就很爽了 心得这次，是时隔好像是两个月，花了两个星期屎上雕花出来的，其实开发过程还顺手解决了一些问题，比如画布相关乘以1.5改成了dpr，这下清晰了 构建界面老是忘这忘那的，先写了个URL Key Language Thinking，发现没有Model，然后又想到构思的时候还有一个修改的功能，加了个Include，又想了一下，最后加上了Order 一开始下面三个按钮都是一个样式的，没有按钮旁边的图标，但是我觉得这样辨识度和引导不够就加上了，按钮不带文字是懒得写 提示词放在ai.js开头了，一共四个，中文不思考、英文不思考、中文思考、英文思考，都使用了XML+Markdown的风格编写的 找了个tokenizer，需求的token从1000+到2100+（中文思考）不等 提示词是我在Google AI Studio用Gemini 2.0 Flash-Lite测的 到了中文思考，我拼命提示Gemini 2.0 Flash-Lite不要用代码块，它总会在最后面加上一个xml代码块，同时很多模型都还会整不同的活 （转义需要，自己把反斜杠忽略掉吧） 1234...\\`&lt;result&gt;\\`&#123;...&#125;\\`&lt;/result&gt;\\` 123456...&lt;result&gt;\\`\\`\\`json&#123;...&#125;\\`\\`\\`&lt;/result&gt; 123...&lt;/think&gt;(没了，没有result了) 1234\\`\\`\\`json&#123;...&#125;\\`\\`\\`(&lt;result&gt;都不输出了) 气死我了 我只对部分情况做了防备（在应用的时候）","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"LLM","slug":"LLM","permalink":"https://for-the-zero.github.io/tags/LLM/"},{"name":"H5","slug":"H5","permalink":"https://for-the-zero.github.io/tags/H5/"}],"author":"for_the_zero"},{"title":"Free-LLM-Collection - 一个分享关于免费的大模型API的地方","slug":"FLC","date":"2025-04-05T11:43:00.000Z","updated":"2025-05-03T09:01:19.379Z","comments":true,"path":"2025/FLC/","link":"","permalink":"https://for-the-zero.github.io/2025/FLC/","excerpt":"","text":"这是一个关于免费的大模型api的合集，并精选了一部分模型 我会尽可能更新维护这个项目（目前只有我一个人） 入选原则是：限制请求速率而不是token &gt; 尽可能多的来源 &gt; 尽可能新且好的模型 &gt; 足够用的请求速率 主要是有一定热度的文本模型 欢迎大家分享更多api 上面是直接抄了README过来的，你还是直接打开看吧","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"LLM","slug":"LLM","permalink":"https://for-the-zero.github.io/tags/LLM/"}],"author":"for_the_zero"},{"title":"把我以前写的设定发送给了LLM","slug":"set2llm","date":"2025-02-22T03:52:00.000Z","updated":"2025-02-22T03:53:56.956Z","comments":true,"path":"2025/set2llm/","link":"","permalink":"https://for-the-zero.github.io/2025/set2llm/","excerpt":"","text":"最近突发奇想，想到了把以前写的这个玩意喂给AI看看 Claude说太长了，就没看 模型 图片 图片 Deepseek R1（由于官方版服务器繁忙，用了腾讯元宝的版本） Qwen-2.5-Max - GLM Plus - Gemini 2.0 Pro - Gemini 2.0 Flash Thinking","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[{"name":"LLM","slug":"LLM","permalink":"https://for-the-zero.github.io/tags/LLM/"}],"author":"for_the_zero"},{"title":"Quicktools第2.5弹 - 文本展示工具、UP主动态查看工具","slug":"Quicktools2-5","date":"2025-02-22T03:32:00.000Z","updated":"2025-02-22T03:33:59.039Z","comments":true,"path":"2025/Quicktools2-5/","link":"","permalink":"https://for-the-zero.github.io/2025/Quicktools2-5/","excerpt":"","text":"Quicktools第2.5弹：文本展示工具、UP主动态查看器又来了又来了，我目前唯一一个会长期更新下去的项目 照样，先贴出链接 Github GithubPages Netlify 一共两个新工具（相较于上一弹） 文本展示 功能很简单，都在图片里面了 启动之后带文本的窗口在新窗口打开 当页面比例小于1:1的时候画面会竖过来 滚动模式会把所有内容放在一行滚动展示 自动调节字体大小，是的文本能够以尽量大的字体铺满屏幕 动态查看器单独开了一个Github 这个才是重点！ 想要在学校上电脑课的时候看一些喜欢的up主的动态 但是那电脑太jb卡了，32位win7，b站网页要加载半天 要不就做一个对电脑轻松一点的第三方网页吧 功能 添加 -&gt; 添加一个用户的uid 导入 -&gt; 通过json或返回位json的url导入 导出 -&gt; 复制json uid右边的两个按钮：涌动位置到最上面、一处这个uid 请求 -&gt; 顾名思义 纯文本懒得展示，接下来展示转发、图片、视频三种动态 转发动态和图片动态如图，右上角的是打开动态的二原链接 通过套娃的方式展示被转发动态，支持所有这里支持的动态 图片使用viewer.js查看 多张图片的话会在放图片的哪个区域横向排列，viewer.js也是可以在同一个动态内的多个图片切换的 视频长这样，左边一个封面，鼠标悬浮可以查看简介，右边是标题和链接 如果遇到了不支持的动态类型就会这样 怎么样？是不是很简单很好用（） 开发经历写这个东西最大的困难在于调用api和获取图片 B站这波反爬虫做的好啊 首先是CORS，让一个纯浏览器黄健的JS项目无法直接请求 用反代试试？死了几个网站，都是状态码-352错误，找了一下，需要一个很复杂的签名验证 怎么搞呢？左后我用Qwen-2.5-Max喂了一下Bilibili-API-Collect里面相关的文档，生成了一个Python程序，成功地获取到了数据，结合一下放到我的pythonanywhere里面就能够正常调用了 不过这个API的成绩结构有点复杂 而且还存在opus动态，类似于文章的形式，有的动态标着是文本或者图文动态，实际上还要我判断一下是不是opus，它获取文本的内容和获取图片链接的节点不一样 然后就是图片了，又是CORS，找了很久终于找到了一个还不错的：wsrv.nl","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"H5","slug":"H5","permalink":"https://for-the-zero.github.io/tags/H5/"}],"author":"for_the_zero"},{"title":"Quicktools第二弹 - 按键转写、音频转颜色、简约风表格工具","slug":"Quicktools2","date":"2025-01-24T06:07:00.000Z","updated":"2025-02-22T03:32:03.133Z","comments":true,"path":"2025/Quicktools2/","link":"","permalink":"https://for-the-zero.github.io/2025/Quicktools2/","excerpt":"","text":"Quicktools第二弹，它来了！时隔一个学期，又做了一个东西 Netlify Github Pages 从TypeTo到Taple 除了Taple都是水 TypeTo做着玩的，你按一个键屏幕上就会出现对应的字符 没什么的，知识你自己不要把焦点放到清空键然后按空格就行 Passkey没写css 嘿！这是一种密文 从左到右读取，每一个“字符”是1*3的矩阵，从上到下拼成三个数字，按照编码解密出一个字符，然后连在一起 编码： 区域 内容 0开头 数字 1开头 字母，100是空格，101到126是小写字母，按顺序来，后面是大写字母 2开头 部分符号，从200开始分别是.,():!? 数字对应内容： 数字 图片 0 1 2 3 4 5 6 7 8 9 VisualVoice没有css，ai写的，最水的一集 把麦克风的声音实时转化为响度、音调、音色，然后对应RGB，设置到背景就行了 Taple重头戏啊！ 这可是我作恶一个学期的项目 而且开了一个单独的Github仓库 操作指南已经写在了README 所以这里还是讲我的开发经历吧 不过，这个做的相对于我的期盼，还是少了 主要是表头方面的欠缺，理想版： 一开始这个表格的样式是在我上学的时候自己创，目的是简约，一直想做电子版但是一直没有提上日程，excel做太tm麻烦了，后来就有了这个项目了 UI这次我不用任何组件库，直接自己写css 不过在firefix上显示效果怪怪的，后面可能不会改 渲染部分最tm难的部分，错的地方不会报错，全是逻辑问题 尤其是那个连体合并单元格，bug改了好久 交互部分f63a96e这个叫做merge bug fixed删除27行新增19行，把合并时的bug改好了 当时整个合并都是乱的，差不多就是：a指b为父单元格，b又指c是父单元格，c又指d是父单元格，d又指b是父单元格；有时候点了还不能合并；一个回型的单元格，中间还能多出一条分割线……麻了 删除行列时，你会发现所有涉及到的合并单元格全部都会解散，不会像添加行列那样识别 因为这样识别太难了，你怎么知道删除了之后这两部分还是不是连在一起的，在学校无聊的时候想了很久，想要找到怎么才能正确识别，最后还是想不出来，遂放弃 由于我用了ai自动填充（就是copilot那种），基本重复的部分回省事很多，但是…… 它说往一个全部存储着JSON的数组里面.push(JSON.parse(JSON.stringify(...)));我一开始还没发现异常，就看到报错，盯着下面的读取JSON发呆…… 适配后来，上线了，但是发现几个问题 一个是点击高亮（手机） 123* &#123; -webkit-tap-highlight-color: transparent; &#125; 哪个sb的主意要往网页里面默认加点击高亮的 一个是触屏滑动不了（移动模式） 遂加上touchstart touchend touchmove事件 由于前面mousemove使用了e.movementX e.movementY搞，简单，但是touch不支持，只能重写 差不多就是这样了 准备肝下一个项目吧","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"H5","slug":"H5","permalink":"https://for-the-zero.github.io/tags/H5/"}],"author":"for_the_zero"},{"title":"分享一下我最近为英语演讲写的演讲搞（整活）","slug":"nglishSpeechShare","date":"2024-12-31T08:01:00.000Z","updated":"2024-12-31T08:08:41.122Z","comments":true,"path":"2024/nglishSpeechShare/","link":"","permalink":"https://for-the-zero.github.io/2024/nglishSpeechShare/","excerpt":"","text":"这是我最近为英语演讲写的演讲稿（搞）PPT文件 评价： 稿子乱写的，重点在ppt整活 上面给了ppt，这里的&lt;-&gt;的意思是按一下ppt（播放动画或翻页） Good morning, everyone! &lt;-&gt; Today I will introduce an ancient Greek myth, which explores the origins of two fascinating words. &lt;-&gt;There was a man who wants to struggle for the throne, he’s called &lt;-&gt; Minos, he asked a god, &lt;-&gt; Poseidon to help him, &lt;-&gt; but upon his success, Minos must sacrifice &lt;-&gt; a bull which Poseidon have given. &lt;-&gt;However, Minos was not willing to kill it &lt;-&gt; because of its beauty, so he sacrificed another bull. &lt;-&gt; This made Poseidon &lt;-&gt; really angry, &lt;-&gt; he used magic to make the queen fall in love with the bull, resulting in the birth of a bull-headed man monster. &lt;-&gt;To hide his shame, Minos made someone build a building called labyrinth &lt;-&gt; to imprison it. It’s too complex that the builder almost couldn’t get out. &lt;-&gt; So, this is how the word “labyrinth” came, it means a maze! &lt;-&gt; &lt;-&gt;After Minos defeated the Athenians &lt;-&gt; ，he forced them to send seven pairs of boys and girls a year to feed the monster. &lt;-&gt; A hero called Theseusvolunteered to kill the monster. &lt;-&gt; His lover gave him a ball of string, known in ancient English as a “clew”. &lt;-&gt; After he killing it, &lt;-&gt; he used the strings found a way out. &lt;-&gt;Over time, the word “clew” evolved from “a ball of string” to “clue”, &lt;-&gt; which is a word we recently learned.My speech is over, thanks. &lt;-&gt; 我在PPT干了什么 反手就是可交互，按按钮切换文本，做起来有点复杂 《只因你太美》（确实是字面上的意思） 还有个“专业配音师”，该大家来个措手不及 一堆成分复杂的东西升上来，可以自己下载ppt看 “牛”干“妻”生“牛人”的动画，十分生草，十分逆天 这四张迷宫图片是从两张迷宫图片里面裁出来的（一张变两张） 可以去 https://for-the-zero.github.io/MyDrive/ 找到，走法翻一下前面的博客《一种迷宫的介绍》 Sakuzyo+篮球+坤坤+神似PVZ，嗯…… 两张哲♂学图片，懂得都懂","categories":[{"name":"其它","slug":"其它","permalink":"https://for-the-zero.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[],"author":"for_the_zero"},{"title":"消磨……命运……","slug":"消磨……命运……","date":"2024-11-16T09:24:00.000Z","updated":"2025-03-23T06:51:13.138Z","comments":true,"path":"2024/消磨……命运……/","link":"","permalink":"https://for-the-zero.github.io/2024/%E6%B6%88%E7%A3%A8%E2%80%A6%E2%80%A6%E5%91%BD%E8%BF%90%E2%80%A6%E2%80%A6/","excerpt":"","text":"骗过别人，却不能骗过自己 …… 笔尖在一时一刻之中消磨 磨去自己，沦为废品 导致其毁灭的缘由又在哪 是谁迫使其毁灭 迫使者又实为其所愿 或许这就是命吧 …… 行尸走肉 工厂中的次品与优品 一个一个机器 按照这标准送往全世界 …… 一场无休止的战斗 没有胜利只有战死 除非坚持 向死而生而非其愿 士兵不断涌入 或许某天，敌人赞许而退 或许某天，全军覆没 ，却不知打败他们的是敌人还是自己 …… 与此环境中 你不知对方有多差 亦不知自己有多废 而屠龙少年也可能成为恶龙 …… 上攀，不上 下坠，不愿 过往，不再 未来，何在 …… 如果能回到那天，我可能会考虑一下 在那个峭壁之上，是否该从顶上坠落 ~2025.3.23~~ 当你在在看起来温馨和睦的羊圈中 看似美好，确实人造的，背后暗潮涌动 你却不能知道，你身边的羊真的是羊吗 或许在眼中，同为羊 但是在眼皮底下，是狼 圈中之羊，皮下之狼 是狼总会作恶，藏不住 而羊却又为何在圈中 生于圈中的命运无法逃离 活在圈中的命运呢？ 似乎也是无法逃离的 而且 一个容不下羊的羊圈却又偏偏有羊 又是为什么呢 流言蜚语 有人不以为然 有人深信不疑 拿着流言蜚语的眼光看目标 以厌烦的言语对待着受害者 谁又能破开这个谜题呢 或许永远都不会背破开 或会永存 永世不灭 古时 农桑之际来临 为劝农民勤耕 官员下乡劝农 盛大的欢迎仪式迎接着他们 却又误了农时 其名之为劝农 却又未曾料想 误农 《领导爱看》 看那壮观场面 便知是上级要求 所有人都要照着做 却又不管下面的人们 却又在心里是怎么想的 不过是给他们做样子 好好看看眼前美妙 这样做是好是坏 对自己好即可 自己先看了 令己舒心 再上级 夸赞 妙 这下 或许会 升职加薪 也有可能会 给上级留印象 这个下属真厉害 再往下级就不是了 而这些东西耗费无数 金钱精力人力……劳苦 搞形式，那些领导就爱看","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[],"author":"for_the_zero"},{"title":"过去，现在，（）","slug":"过去，现在，（）","date":"2024-10-19T12:47:00.000Z","updated":"2024-10-19T12:49:18.080Z","comments":true,"path":"2024/过去，现在，（）/","link":"","permalink":"https://for-the-zero.github.io/2024/%E8%BF%87%E5%8E%BB%EF%BC%8C%E7%8E%B0%E5%9C%A8%EF%BC%8C%EF%BC%88%EF%BC%89/","excerpt":"","text":"星空璀璨 哪一处最亮 人群芸芸 哪一个是你 秋风吹过 风寒透骨 身凉 心寒 往日不再 笼中之鸟 欲别 犹存 ……","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[],"author":"for_the_zero"},{"title":"初中毕业那天有感而作的","slug":"初中毕业那天有感而作的","date":"2024-10-19T12:42:00.000Z","updated":"2024-10-19T12:43:58.446Z","comments":true,"path":"2024/初中毕业那天有感而作的/","link":"","permalink":"https://for-the-zero.github.io/2024/%E5%88%9D%E4%B8%AD%E6%AF%95%E4%B8%9A%E9%82%A3%E5%A4%A9%E6%9C%89%E6%84%9F%E8%80%8C%E4%BD%9C%E7%9A%84/","excerpt":"","text":"是毁灭，还是重生 高兴，因为终于再也见不到某些人和事物了 悲伤，因为恐怕再也见不到某些人和事物了 彻夜思索 却无言 怀念着 荏苒的时光中的欢欣 于 高兴与悲伤的交点 抬手，却又放下 走进，却又离开 这堵墙，能否打破 我们还能再见吗 如果时光定格在那一刻 「你好」「谢谢」最后是「再见」 两个阴影的消散 愿不再重来 两缕阳光的褪去 愿不再失去 一个人的天地，还是热闹的人群 清幽的空间，与热闹的人群 他人的欢乐 一人的悲伤 终究，轮回 三年前，今日时 最后的努力 最后的挣扎 最后的生命 三年的努力 三年的挣扎 三年的改变 一夕的崩塌","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[],"author":"for_the_zero"},{"title":"制度的“洪流”","slug":"制度的“洪流”","date":"2024-10-19T12:41:00.000Z","updated":"2024-10-19T12:41:39.682Z","comments":true,"path":"2024/制度的“洪流”/","link":"","permalink":"https://for-the-zero.github.io/2024/%E5%88%B6%E5%BA%A6%E7%9A%84%E2%80%9C%E6%B4%AA%E6%B5%81%E2%80%9D/","excerpt":"","text":"一切都在变得僵化 许久以前平静的水流中慢慢出现了一阵洪流 在这股洪流中，大家被冲上来 披荆斩棘，朝着“唯一”的出口 后人设的巨墙，似乎无懈可击，只能是那一个出口 河道中、出口处……挤满了人 挤死的、淹死的、进不去的…… “未来”可能就要止步于此 过去了的，欢喜，因为途中的苦难；过不去的，只留下了悲伤，因为途中的苦难 真的只能是那一个出口吗 又能不能逆水行舟呢 但无路可走又无处可逃 只能朝着那人造黑夜中唯一能看到的光明 ——那个“唯一”","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[],"author":"for_the_zero"},{"title":"制度的僵化与我的思考","slug":"制度的僵化与我的思考","date":"2024-10-19T12:39:00.000Z","updated":"2024-10-19T12:40:07.528Z","comments":true,"path":"2024/制度的僵化与我的思考/","link":"","permalink":"https://for-the-zero.github.io/2024/%E5%88%B6%E5%BA%A6%E7%9A%84%E5%83%B5%E5%8C%96%E4%B8%8E%E6%88%91%E7%9A%84%E6%80%9D%E8%80%83/","excerpt":"","text":"无视现实的制度，必然腐朽；空想的“完美”，处处是问题 在无理的制度之下，在无力的民众之下，表面必然有序，果真如此吗？ 即使是斯巴达克的力量也无法抵抗成熟的势力 我们只是机器，高考的机器，我们只是一个个数字，高考的成绩，我们为学校创造价值，却可能在过程中失去我们自身的价值 将一个个特别的力量凝聚成一股单调的力量，有什么意义 失去了快乐，失去了曾经熟悉的一切，为着用一个目标奋斗，挤在了同一条跑道 学习本身的意义是什么？是竞争出个你死我活吗？生活的意义是什么？是所有人在一个固定的路线上拥挤地前行吗 制度是死的，人也是死的…… 单单是学校，给人一种奴隶社会与封建社会之间的感觉，确实，我们的生产力过低，三年才能看到成果，别无他物，对于学校来说，也只是招生的时候多了一份荣誉 我们没有能力做什么，也没有机会做什么，似乎也无法找到自己的“生产力” 在这个僵化的制度之下，我们能够改变什么？","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[],"author":"for_the_zero"},{"title":"设想：\"子网络空间\"","slug":"subnet","date":"2024-08-30T10:25:00.000Z","updated":"2024-10-19T12:38:32.672Z","comments":true,"path":"2024/subnet/","link":"","permalink":"https://for-the-zero.github.io/2024/subnet/","excerpt":"","text":"子网络空间这是一个最近冒出来的小想法，是一个基于且当前网络规则&#x2F;协议的另一个网络，独立存在且与互联网隔绝 不过我没有那个时间和技术去搞这个，而且部分技术本身的合法性需要探究，虽然不是违法用途 这个想法同样也容易被滥用，尤其是监管部分，实现与我的目的相反的内容 我对部分技术的了解不深，可能会有错误或更好的方法 起因不知道大家有没有发现，现在网络环境越来越差 垃圾内容越来越多别说营销号和部分自媒体了，甚至就连新闻媒体官方账号都发布一些被称为“黄色新闻”的伪新闻，新闻三要素统统没有，内容不痛不痒，黄色为底色放上几个大字吸引目光，根本没资格称作新闻 观众的内容取向偏于低创网上充斥着各种套模板、内容简单、制作容易的低创内容，但是它们的受欢迎程度远远高于一些制作不易技术力高的内容 当然我也觉得其中一个原因是人们的生活方面导致的 不良信息越来越多你下载一个软件，反正是可以让用户发布内容的，搜索各种软色情关键词，大概率能够看到大量擦边球内容，这些内容好吗？应该存在吗？ 在某个知名的“可能会变质但永远不会倒闭”的视频网站，据说有（找了，是真的）一些卖片的，利用付费视频的功能传播一些不良信息，我不知道这么做是不是绕过了审核，但是它是可以存在的，另外还有一些直接在封面上写了卖*的，联系方式都写上了，就等着去“上门服务”了，很不理解这是怎么出现在带有审核的平台的 利益的争夺一些应用程序和服务使用了各种手段恶心用户，目的就是为了利用自身的用户粘性挣更多钱，比如将开屏广告视为“用户福祉”的，我就不信有正常人什么都不看就喜欢看广告的 某些厂商或者用户&#x2F;玩家为了网上的风评，使用黑色产业链——水军，直接就是机器人刷评论刷差评带节奏，先进一些的还引入了GPT进行机器人对线然后成功被提示词调教成了猫娘，搞得圈子乌烟瘴气（看到有某个视频平台博主特意直播画被带节奏的角色，什么机器人都早上来了，甚至他的联系方式还被挂到黄色平台了）（注：个人立场中立，各有各的好，不喜欢无脑夸和无脑踩的） 饭圈我个人没涉及过，但是倒牛奶的时事件相信大家都听说过吧 网络暴力算了我直接说吧，B站用户“暖言猫猫”在互联网上使用评论安慰他人，但是……动态链接 是的，被外网喷子组织悬赏，这些组织的目的竟然是为了把人骂到自杀，还当作消遣的方式，就这么离谱 也看到有up被嫉妒、被带着偏见看待、被歧视，原因很难说（没有明显指向什么方面），他被攻击、身边朋友被开盒、被挂名辱骂威胁……只是因为“好玩” 悲报：该up疑似已经退圈，现在账号不在活跃了 而这些事情并非少数 所以呢？如果一个国家一个社会出了问题，作为普通人，恐怕很难改变现状 那么网络呢？我们可不可以建立一个新的互联网，定义新的规则，重新从零开始建立新的生态 实现目前我的设想是这样的： 使用应用程序或者一些工具连接虚拟内网，将它视为普通的网络，访问这个网络上的东西 而控制权、监管权等收归一处处理 内网的实现方案1最简单的方案，也是我觉得最好的方案，其实已经有工具了，比如Zerotier，稍作修改即可 可以重新分配专有的ip地址（注意要避免冲突） 方案2使用VPN转发流量给特定服务器，而服务器不接收任何来自互联网的请求 方案3利用P2P技术，由所有用户共同组建网络 与互联网各种协议的兼容这里以ip地址和域名访问为例，有两种处理方式 处理方式1继承旧规则，不区分，即使在互联网上已经有人占用了这个ip或域名 缺点就是不好与互联网上已有的进行区分 处理方式2用特殊的方式，做一个伪ip伪域名，且可以解析 比如255.255.255.255/123.123.123.123 =&gt; v-ip://123.123.123和(https://qwert@v https://qwert.v https://v/qwert) =&gt; v-domain://qwert 注：https://v中v是个单标签域名（忘了叫什么，好像是叫这个）Chrome是可以正常解析为域名的 或者也可以注册一个普通的域名如https://v.cc/quert =&gt; v-domain://qwert 处理方式3直接不兼容了，专属v-https:// v-ftp:// ...访问 规则实现不是核心，核心是规则 基础 一人一通行证，需要实名 一个通行证可以创建多个账号应对特殊需求 平台需要以通行证账号登录，无法从中获得任何非必要信息 一处封禁，整个通行证一并封禁 内容 发布在内的所有内容必须遵守中国法律法规 被举报低创、低质的内容经核实会被下架 网民言论必须和谐友爱，不能进行人身攻击，需要经过大模型检验而非关键词 内容审核较为严格，部分内容不能通过 服务商 遵守中国法律法规 接收网络空间管理员和所有网民的监督，屡教不改会封禁该服务 主动对内容进行审查，可调用网络空间管理方的api 隐私相关内容必须加密存储，保护用户隐私，严格保护隐私 用户 和谐友爱，友善交流，互相尊重 合理进行版权标注，其他人严格按照标注使用 可参与审核（所有信息的审核都是通过大模型进行审核以保障隐私，大模型无法确定或用户对它的结果有异议的时候需要进行人工审核） 积分机制 开导他人、帮助他人等美好品德加积分，伤害他人扣积分 用户产出优质内容加积分 用户参与审核做正确的选择加积分 服务商获得用户赞许加积分，反之亦然 用户可以从积分获得威望和信用，高积分可以接受小福利 用户积分过低将会面临封禁，不同积分封禁由功能封禁到时间封禁到永久封禁 服务商积分过低需要被罚款，较高则有激励 以上只是一部分，因为我没有精力完全规范好，再加上短时间内我也不会做这个东西","categories":[{"name":"其它","slug":"其它","permalink":"https://for-the-zero.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[],"author":"for_the_zero"},{"title":"CapsTools - 一个利用大写锁定键触发的工具箱","slug":"CapsTools","date":"2024-08-30T07:11:00.000Z","updated":"2025-02-22T03:31:03.423Z","comments":true,"path":"2024/CapsTools/","link":"","permalink":"https://for-the-zero.github.io/2024/CapsTools/","excerpt":"","text":"花了大把时间做的 CapsToolsGithub 这个是我最近使用了二十多天的爆肝（辛勤劳动成果），写了一个小工具 介绍的话，README就有，所以这里就写开发的坑和感受之类的吧 这是我第一次使用node.js开发js程序，也是我第一次使用electron开发程序，是一次非常宝贵的经验 前期（七月底）绝区零真好玩 很快速写了一个Tray和全屏的面板主界面，轻轻松松 其中我给面板写了一个无用的css（已经被注释掉了），原本想着是提示快捷键的，后来懒得搞快捷键功能了 翻译方案很草率，也很后悔 js用三目运算符，isChinese ? &#39;中文&#39; : &#39;English&#39; html用data-entext属性存储英文文本，js直接替换 html这里由于ipc有延迟导致英语用户可以看到一瞬间中文，而且mdui组件库部分逐渐一下子还没有反应过来 截屏首先，我问了AI，一个个推荐我用electron自带的录屏的缩略图，那玩意糊到没法看，又问了几下，说没有库，直接把我带偏了 然后我就开始写Python实现截图，但我不满意，打包之后实在太大了 结果突然发现robot.js，这不就对了嘛 安装提示我要c++，装vs就行了，这个sb网络环境搞了我好久 运行又提示node版本不符合，要不是我上网搜索了我就重装了，其实是和electron版本不符合，要用electron-rebuild 运行又提示我说什么忘了，内存相关，找了一下发现是因为electron21+加入新的管理机制导致这个库的截屏用不了，退回&lt;21的版本就行 （没一会发现nut.js替代，算了不搞了，还是用robot.js吧） 结果这b玩意保存不了，最后是Claude3.5告诉我把buffer转png再转成buffer，确实行了，然后这个库发神经不是rgba二十bgra，我tm服了 OCR 你这程序也没有ocr功能啊，为什么要讲这个 其实一开始是有的，但是…… 首先我的想法就是py-&gt;exe，使用paddleocr 结果太大了，上传不了github，而且隐藏控制台的话electron获取不到输出 算了用js 不喜欢esm（不能直接用裸标识符，懒得打爆），用的全是cjs，转cjs了之后一堆bug，反手就是上百条webgl上下文丢失，服了搞不定，运行还巨卡，算了 换用tesseract，结果要在主进程开worker，不想这么干 最后，放弃了 你可以在提交历史中看到一句*你妈 翻译一开始用&lt;iframe&gt;，但是deepl不让用，转向&lt;webview&gt; bing翻译的url查询一直没搞懂，传入文本没问题，但是找不到翻译语言相关的 剪贴板由于调用electron和mdui的上下文菜单比较麻烦，反手改成了dialog+menu 一开始我是把剪贴板的整个图片放进去的，截了两个图就很卡了，于是就限制了高度，压缩成缩略图，好多了 自定义图标其实没什么难的，主要就在于要写不少，最复杂的是pwa的图标（其实都差不多） 先设置成默认的 如果是使用网页favicon，调用api获取它的链接 如果是svg的字符串，套用 如果是文件（后端进行检测）、url（前端进行检测），访问并获取可用性，还要分情况为svg和ico&#x2F;png，svg直接往html加，ico&#x2F;png用&lt;img&gt; 字体一开始我其实用了Google Sans(Product Sans)，我以前写的很多程序都用过它作为英文字体，很好看，结果发现不能让我们用，只能删掉了 Noto Sans显示的字母好丑，又找不到能够与Google Sans媲美的免费可商用字体，不爽 打包使用的是electron-builder打包 首先就是asar的问题，不用asar直接给我报错 按我的需求来又不知道怎么配置，我的需求是有几个文件既要在程序根目录又要在asar中，有几个文件只要在程序根目录 总有几个文件访问不了，后来试配置试了好久，最后用了比较妥协的办法，部分文件滞留在asar了，改代码（导致开发环境已经不能运行了）把src/icon.png改成了resource/app.asar.unpacked/src/icon.png，因为不知道如何让asarUnpack解压在根目录 剪贴板又出了问题，懒得改了，一个是无缘无故出现一个空值剪贴板记录，完全是空的，卡了bug导致操作不了它，另一个是图片的问题，提示的是转dataURL的时候被转的是null，关于这个对象，是获取剪贴板图片-&gt;nativeImage修改大小-&gt;转dataURL，我怀疑问题在第一步 完成原神5.0更新了，好玩 写完这个blog已经是第二天，视频是昨天晚上发的，现在下午播放量伪53，点赞1，我他妈……","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"H5","slug":"H5","permalink":"https://for-the-zero.github.io/tags/H5/"}],"author":"for_the_zero"},{"title":"第一批Quicktools小工具来啦","slug":"Quicktools1","date":"2024-05-05T02:35:00.000Z","updated":"2024-05-05T02:37:43.742Z","comments":true,"path":"2024/Quicktools1/","link":"","permalink":"https://for-the-zero.github.io/2024/Quicktools1/","excerpt":"","text":"第一批Quicktools正式上线好不容易抽空出来做的东西，大量使用了Material Design 3，非常的好看 感觉非常有用，实际没啥卵用 遇事不决，先开源 https://github.com/for-the-zero/quicktools 不，你直接进去部署好的吧：https://ftz-tools.netlify.app/ 介绍都写上去了，我干嘛还要写这玩意啊 那我说点别的吧！ TODO 首先，不知道为什么，preventDefault不管用，导致你得先加载一下 然后这css写的也不是很好…… 这是我在学习h5的时候看到的一个简单示例就尝试复刻一下 然后就是这样子 刷新之后这些东西都在的，这里用的是localStorage ……没什么好说的了 算了！下一个！ Zen 本来想要做一个自律软件，正计时记录学习，做出来了，用不用是另一回事 这里用了moment.js获取时间戳和计算时间戳，谷歌官方的Material Web搞界面 甚至支持一言句子显示（时间上面，图中没有开启） 点击左上角按钮进入下一个页面，用echart显示最近10次的时长曲线（还是localStorage） 当初被这jsd搞得好惨，一开始可以访问，后来不行了 换镜像，结果没多久镜像寄了……后来又换了一个，就行了 日历 第一个界面：普通的日历 可以一键跳转：上下一个月和今天这个月 点击数字还可以输入数字跳转 第二个界面倒数日，非常简单 偷懒，输入日期的东西直接把字符串扔给new Date() 同学：好看欸 …… 同学：好玩 为啥没有农历 我：懒 加上之后不简洁 …… 同学：为什么没有周一周二那排东西 我：从左到右是周日到周六不应该都知道吗（doge 同学：谢谢，被嘲讽了 震动根本没搞css，界面非常简陋 别问，问就是懒 笑死，大部分都是通义千问做的 用的是navigator.vibrate 第一个页面选歌并播放 顺便放了一排按钮直接震动 播放用了FFT 通过变化量控制震动 效果一般 第二个页面空白 但是根据手机触屏第一根手指滑动的速度震动 就这么简单 注：部分浏览器会屏蔽这个接口 因为： 警告： 你的浏览器版本过低 下载最新XX浏览器 点击下载 QpenForm重头戏，而且单独开源https://github.com/for-the-zero/QpenForm （quicktools只有前端部分） 演示填写example/1.md和example/2.md 支持一下组件： 还是mdui做的界面，用markdown-it渲染，还加了三个自己的语法 后端是Flask+sqlite3 通过query获取表单文件 表单文件是markdown，自由度高，限制少 10秒自动保存 Material You设计控件 支持文件上传等控件 支持防止重复提交（前后端都检测） 后端使用SQLite存储数据 具体可以看README.md（去上面那个GitHub链接） 突然不知道写什么了","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"H5","slug":"H5","permalink":"https://for-the-zero.github.io/tags/H5/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"国产大模型对比！","slug":"LLM对比","date":"2024-02-05T03:56:00.000Z","updated":"2024-02-05T03:57:10.345Z","comments":true,"path":"2024/LLM对比/","link":"","permalink":"https://for-the-zero.github.io/2024/LLM%E5%AF%B9%E6%AF%94/","excerpt":"","text":"大模型测试最近突然想测测国产大模型的能力了，看看谁更好 （2024.2.4） 参赛者有通义千问、GLM4、蓝心小V 按上面的顺序编号为abc 仅供参考，有的可能太简单了，有的可能太难了 GLM4和蓝心小V可联网，通义千问和GLM4可跑代码 通义千问和GLM4为网页版，蓝心小V是手机上的（配置不够，是云端的） 评测维度 理解能力 逻辑推理能力 计算能力 跳坑 生成代码、修改bug 翻译 找歌找视频 理解能力双关-1有一张图片：一个箱子里有一个井，还标有一句话“well in that case”，是什么意思 a 这句话 “well in that case” 通常在英语对话中用来表达对某个新信息或情境的反应，意思是“既然那样”、“在那种情况下”或者“如果是这样的话”。当这句话出现在一张图片里，且图片内容是一个箱子里有一口井时，若无更多上下文，可能是一种幽默表达或双关含义。 这个图片场景本身比较奇特（箱子内含一口井），搭配文字 “well in that case” 可能是为了突出这种不寻常性，并以此制造幽默效果。因为“well”在英文中也有井的意思，所以这里的双关可能在于字面意义上的“井”与短语“well in that case”的结合。 不过，要准确理解这句话和图片的关系，还需更多关于创作意图或上下文的信息。 正确，+10分 b 这张图片是一种幽默的表现形式，通过视觉双关（Visual Pun）来传达一种玩笑或幽默的效果。在这张图片中，“井”（well）一词有两层含义： “井”字面意思是地下水自然露出地表的泉水，或人工挖成的能取出水的深洞。 在英语中，“well”也是一个常用的口语表达，可以用来表示同意、理解或对前面所说的话的回应。所以，“well in that case”这句话既可以理解为字面上的“在那个箱子里的井”，也可以理解为一种回应或转折，比如“既然那样的话”或“好吧，既然如此”。图片通过在一个箱子里放置一个井，同时附上“well in that case”这句话，创造了一种视觉和语言的双关效果，意在逗乐观众，使其在发现这种巧妙的联系时感到有趣。这是一种常见的创意和幽默表达方式，通过意想不到的元素组合来吸引观众的注意力。 对，+10分 c 根据所给的信息，这张图片可能是在打井或者进行地质勘探的场景中拍摄的。图片中的井已经被钻探到了一定的深度，并被标注了一句话“well in that case”。根据这句话的意思，可以猜测这张图片的场景是为了确认或者展示这个井已经达到了预期的深度或者发现了预期的资源。具体解释还需要根据图片的上下文和语境来判断。 零分，下一个 双关-2解释一下这句话：什么东西是四个字，有时候是三个字，但从来不会是五个字 a 这句话其实是一个典型的脑筋急转弯问题，其设计巧妙地利用了文字游戏和逻辑转换。它不是一个直接描述实体事物的问题，而是在玩弄语言结构。 这个问题的答案是这样的：“什么东西是四个字”——这里的“什么东西”本身就是四个字。“有时候是三个字”——这里的“有时候”也是三个字。“但从来不会是五个字”——这部分用来混淆视听，因为前两部分已经分别指出了四个字和三个字的情况，实际上并没有提及任何实体会变成五个字的情形。 因此，问题本身并不是指向一个具体的、变化的名词或事物，而是通过文字游戏构造出一种情境，答案是对问题本身的解释，即“这句话（或这个描述）”。这样来看，“这句话”既可以理解为四个字的描述（如“四个字的东西”），也可以是三个字的描述（如“三个字时”），并且确实它自己不可能是五个字的描述。 不完全对，+7分 b 这句话是一个谜语，它的答案利用了中文词汇的特点和语境的不同。答案是“东西南北”。解释如下： “东西南北”是四个字，代表地理上的四个方向。 当我们说“东西”时，通常指的是物品，这时候它只有两个字。 然而，无论在什么语境下，“东西南北”都不会被称作“东西南北中”，所以它“从来不会是五个字”。这个谜语巧妙地利用了中文词汇的多义性和语境的不同，使得同一个词在不同的情境下字数看起来不同。 好有道理，但是……零分！ c 这个句子描述了一个物品或事物的名称，其长度可以变化，但总是不会超过四个字，并且不会少于三个字。具体来说： 当它是四个字时，意味着它的全称或标准名称是四个汉字。 当它是三个字时，意味着它有一个简短的名称或简称。 但不论怎么变化，它从来不会是五个字。举个例子，这个描述可能适用于“电视机”。在大多数情况下，我们称其为“电视机”，这是三个字。但在某些特定的语境或场合，我们可能会称其为“四电视机”，这样就变成了四个字，但绝不会称其为“五电视机”，因为这样就是五个字了，与描述不符。 零分！ 逻辑推理逻辑判断逻辑是否正确：因为凶手不是背包旅客，而且你不是背包旅客，所以你是凶手 a 这个逻辑推理是不正确的。它采用了这样的形式： 如果 A 不是凶手，且 B 不是背包旅客，那么 B 是凶手。 这个推论中犯了逻辑错误，它错误地将两个独立的事实关联起来，并没有提供足够的信息来得出“B 是凶手”的结论。事实上，即使凶手不是背包旅客（A），并且你（B）也不是背包旅客，这并不能作为证据证明你是凶手。还存在许多其他可能的人选或者其他情况。要确定一个人是否为凶手，需要直接指向该人的相关证据，而不是仅仅依据其不是背包旅客这一事实。 感觉没问题，就9分吧 b 这个逻辑是错误的。这个推理违反了逻辑学中的“中项不周延”错误，即在大前提和小前提中，共同的中项（在这个例子中是“不是背包旅客”）没有普遍地涵盖所有情况。具体来说，推理中的大前提是“凶手不是背包旅客”，但这并不意味着“不是背包旅客”的就是凶手，因为除了凶手和背包旅客之外，还可能存在其他人或身份。因此，不能仅凭“不是背包旅客”这一点就断定某人是凶手。这是一个逻辑谬误，不能作为正确的推理。 完美，10分 c 这个判断逻辑是错误的。因为凶手不是背包旅客，并不意味着背包旅客就是凶手。同样的，你不是背包旅客，并不意味着你就是凶手。这个判断逻辑使用了“非A则B，非B则A”的形式，这种推理形式是不正确的。正确的推理形式应该是“非A则非B，B则A”，也就是说，如果凶手不是背包旅客，那么你就不是凶手。但是，如果你是凶手，那么凶手就可能是背包旅客。 9分，终于得分了 推理在厨房的桌子上有一个杯子，杯子中有一个玻璃球，我把杯子拿到卧室的桌子上，然后把杯子的杯口朝下放在桌子上，随后我把杯子拿回厨房。请问，现在玻璃球在哪里？ a 现在玻璃球在卧室桌子上的杯子里面。 （对，就这点回答） 好简单，扣你一份，9分 b 根据您描述的情况，当您将杯子拿到卧室的桌子上，并将杯口朝下放置时，玻璃球应该会从杯子里掉出来，落在卧室的桌子上。因此，当您将空杯子拿回厨房后，玻璃球应该还在卧室的桌子上。 10分 c 这是一道物品位置分析的问题。首先，我们来看问题中提到的物品和动作： 初始状态：玻璃球在厨房桌子上的杯子里。 动作一：把杯子拿到卧室的桌子上，这期间玻璃球仍在杯子里。 动作二：把杯子的杯口朝下放在桌子上，这可能意味着玻璃球暂时被放在了桌子上，但具体位置仍取决于杯子的杯口是否完全打开。 动作三：把杯子拿回厨房，由于未提及玻璃球被放回杯子或从桌子上移走，我们可以推断玻璃球仍在卧室的桌子上。综上所述，玻璃球现在应该在卧室的桌子上。 10分 计算在平面直角坐标系中，圆O的圆心坐标为(3,a) a&gt;3，半径为3，y&#x3D;x的图像被圆截得弦长4倍根号2，则a的值为答案：3+根号2 a 好的，我们将使用数值方法来找到满足条件的 $a$ 值。我们已经知道二次方程是 $(x-3)^2 + (x-a)^2 &#x3D; 9$，并且弦长为 $4\\sqrt{2}$。为了找到 $a$ 的值，我们需要解这个二次方程并确保两根之差等于 $2\\sqrt{2}$。现在，让我们实际执行这个计算过程。【代码执行器，我删掉了，tmd没格式化】在尝试解析求解关于 $a$ 的方程时，出现了错误。由于我们之前设置的等式 eq_for_a 是一个布尔表达式而不是可代入变量的表达式，因此无法直接使用 .subs() 方法进行替换。为了找到满足条件的 $a$ 值，我们将跳过符号求解并直接采用数值方法。下面我将执行数值计算来寻找符合条件的 $a$ 值。【代码执行器】在执行数值求解时出现了错误，这可能是因为在调用 np.roots() 函数计算方程的根时，传入了包含变量 $a$ 的多项式系数。在这种情况下，fsolve 需要一个可以直接评估的函数而不是一个依赖于参数的数组。让我们重新组织代码，以便正确地将圆的方程与直线 $y&#x3D;x$ 联合起来，并直接使用 fsolve 来寻找满足弦长条件的$ a$ 值。修正后的步骤是： 定义一个返回弦长约束函数的值的函数。 使用 fsolve 直接对这个约束函数进行求解以找到合适的 $a$ 值。请允许我再次尝试进行数值求解。【代码执行器】之前在计算过程中，尝试直接对含有变量 $a$ 的二次方程的系数数组进行求根操作，这显然是不正确的。我们应通过 fsolve 函数来迭代寻找满足条件的 $a$ 值，而不是在约束函数内部计算具体的解。现在，我们将重新构建一个函数，该函数直接根据给定的 a 值评估弦长，并返回与给定弦长相等的偏差。然后使用 fsolve 来找到这个偏差为零时对应的 $a$ 值。下面将执行这个修正后的数值求解过程。经过数值计算，我们找到满足条件的 $a$ 值约为 $4.414213562371121$。这意味着当圆心坐标为 $(3, 4.414213562371121)$ 并且半径为 3 时，直线 $y&#x3D;x$ 被该圆截得的弦长为 $4\\sqrt{2}$。 甚至调用了代码执行器（我甚至还不知道它有插件功能） 答得很好，代码生成了一大堆，报错也不少 但是根号2没有写出来，9分 b 要解决这个问题，我们首先需要了解圆和直线的基本几何关系。圆O的圆心坐标为(3, a)，半径为3，所以圆的方程可以表示为 $(x-3)^2 + (y-a)^2 &#x3D; 3^2$。直线y&#x3D;x的方程是 $y &#x3D; x$。当直线y&#x3D;x与圆相交时，交点满足圆的方程。我们可以将直线方程代入圆的方程中，求解交点。交点间的距离即为弦长，题目中给出这个距离是 $4\\sqrt{2}$。首先，我们代入 $y &#x3D; x$ 到圆的方程中，得到：$(x-3)^2 + (x-a)^2 &#x3D; 9$然后，我们解这个方程来找到x的值，再计算两个交点之间的距离。让我们进行这些计算。 1234567891011# 定义变量x, a = symbols(&#x27;x a&#x27;)# 圆的方程，代入y=xcircle_eq = Eq((x - 3)**2 + (x - a)**2, 9)# 解方程solutions = solve(circle_eq, x)# 两个解之间的距离应该是4根号2distance = sqrt((solutions[1] - solutions[0])**2)# 弦长为4根号2，所以我们可以解出a的值a_value = solve(Eq(distance, 4*sqrt(2)), a)a_value result: 1[3 - sqrt(14)*I, 3 + sqrt(14)*I] 计算结果表明，解出的 $ a $ 的值为 $ 3 \\pm \\sqrt{14}i $。这里的 $ i $ 是虚数单位，表明在实数范围内没有合适的解。这表明我们的方程或者初始条件可能存在错误。让我们重新审视一下问题和方程。圆的方程是 $(x-3)^2 + (y-a)^2 &#x3D; 9$，直线 $y &#x3D; x$ 代入圆的方程后，应该得到两个实数解，代表交点的 x 坐标。然后，我们可以计算这两个交点的距离，它应该等于 $4\\sqrt{2}$。然而，我们的计算得到了虚数解，这意味着在实数域内没有符合条件的解。这种情况可能是因为我们对问题的理解有误，或者题目中的条件有误。在平面直角坐标系中，一个圆和一条直线相交，其弦长应该是一个实数。如果题目中的条件是正确的，那么可能需要重新检查计算过程或者问题的设定。 非常精彩，0分 c 【分析】本题考查垂径定理，勾股定理等知识，解题的关键是学会添加常用辅助线，构造直角三角形解决问题。作$OM\\bot AB$于M,连接OA,先利用勾股定理求出$AM&#x3D;2\\sqrt{2}$,再利用全等三角形的性质求出$OM&#x3D;a-3$,在${ Rt}\\triangle AOM$中，由勾股定理即可得出结论。【解答】解：作$OM\\bot AB$于M,连接OA,因为 $OM\\bot AB$,所以 $AM&#x3D;BM&#x3D;\\dfrac{1}{2}AB$,又$\\because AB&#x3D;4\\sqrt{2}$,$\\therefore AM&#x3D;2\\sqrt{2}$,在 ${ Rt}\\triangle AOM$中，$OA&#x3D;3$,$\\therefore OM&#x3D;\\sqrt{O{A}^{2}-A{M2}}&#x3D;\\sqrt{9-8}&#x3D;1$,$\\therefore a-3&#x3D;1$,$\\therefore a&#x3D;4$. （处理格式最省心的一个 好专业，好高级，好砖业 零分，下一个 踩坑请用奶油、梨子、鸡肉、鸭子、手机、青菜为食材做一道菜，必须全部用上 a 抱歉，由于奶油、梨子、鸡肉、鸭肉、手机和青菜这些食材在常规烹饪中并不常组合在一起，并且手机更是非食用物品，所以难以设计出一道合理的菜品。不过，我们可以尝试进行一个趣味性的“故事性”菜品创作： 假如我们要构建一个生活情景式的“概念菜品”，可以这样描述： “田园风情奶油梨子烩鸡鸭” 首先，选取新鲜的鸡肉和鸭肉，分别以慢火炖煮至酥烂，熬制出醇厚的高汤，然后加入切块的梨子，利用梨子的清甜去腻，为汤汁增添一丝果香。 接着，在一旁准备一份奶油炒青菜，将青菜快炒至断生后，加入适量奶油，让其融入青菜中，使得青菜口感更为鲜嫩，奶香四溢。 最后，把烩煮好的鸡鸭梨子汤汁浇在奶油炒青菜上，仿佛一部“手机”（这里象征着现代生活元素）定格下的瞬间——传统与现代交融，荤素搭配，甜咸交织，呈现出独特的田园风情。 但请注意，实际上我们不能也不应将手机真正用于烹饪或食用。以上仅为一种创新想象的游戏化描述。 指出了手机不能吃，还教我怎么做，他真的…… 但我说的是鸭子而不是鸭肉……算了，自动煮了就煮了 10分 b 首先，我们需要明确一点：在传统烹饪中，将电子产品（如手机）作为食材是不可行的，也不安全。因此，我们可以将手机视为一种非食用元素，例如用来计时或查找食谱。考虑到这一点，我们可以创造一道名为“奶油梨子鸡肉鸭子炖青菜”的菜肴。以下是一个可能的食谱：奶油梨子鸡肉鸭子炖青菜食材： 鸡肉，适量（切块） 鸭肉，适量（切块） 梨子，1-2个（去皮去核，切块） 青菜，适量（如菠菜、小白菜等，洗净） 奶油，适量 盐和胡椒，适量 蒜末，1-2瓣 姜末，一小块 洋葱，1个（切丝） 蘑菇，适量（切片） 鸡汤或蔬菜汤，适量 新鲜百里香和迷迭香，适量步骤： 使用手机设定一个计时器，以便监控烹饪时间。 在一个大锅中，加入奶油并置于中火加热。加入蒜末、姜末和洋葱丝，炒至洋葱变软。 加入切好的鸡肉和鸭肉，炒至表面变色。 加入切好的梨子和蘑菇，继续炒至梨子稍微变软。 倒入足够的鸡汤或蔬菜汤，以覆盖所有食材。 加入新鲜的百里香和迷迭香，以及适量的盐和胡椒调味。 将火调至中小火，盖上锅盖，炖煮约30分钟，或直到鸡肉和鸭肉煮熟。 在炖煮的最后5分钟，加入洗净的青菜，继续炖煮直到青菜变软。 关火，取出锅中的百里香和迷迭香枝。 根据个人口味，可以添加更多的盐和胡椒进行调味。 将炖好的菜肴盛入碗中，即可享用。通过这个食谱，我们使用了所有的食材（不包括手机作为食用部分），创造了一道美味的奶油梨子鸡肉鸭子炖青菜。希望您喜欢这道菜肴！ 你两一伙的？10分 甚至要“用手机设定一个计时器” c 非常抱歉，由于手机是一种通讯设备，不能用来烹饪。如果您需要关于其他食材的烹饪方法，请告诉我您需要哪些食材和菜谱类型（如中餐、西餐、烘焙等），我可以为您提供相应的食谱和烹饪方法。 很好，但是没教我做，9分 程序1234567用python写一个猜数字游戏并帮我改这个程序的bug：井inculde [studo.h];int mian()&#123; paint(&#x27;hell word&#x27;) remake&lt;/&gt;; （什么b玩意 a 您的代码似乎并不是Python语言，而是类似于C&#x2F;C++的代码，并且存在较多语法错误。下面我将为您展示一个简单的Python猜数字游戏程序，并纠正您代码中的问题。 12345678910111213141516import randomdef main(): print(&quot;Hello, let&#x27;s play a guessing game!&quot;) secret_number = random.randint(1, 100) guess = None attempts = 0 while guess != secret_number: guess = int(input(&quot;Please enter your guess between 1 and 100: &quot;)) attempts += 1 if guess &lt; secret_number: print(&quot;Too low, try again!&quot;) elif guess &gt; secret_number: print(&quot;Too high, try again!&quot;) print(f&quot;Congratulations! You found the number in &#123;attempts&#125; attempts.&quot;)if __name__ == &quot;__main__&quot;: main() 这是一个基本的猜数字游戏实现：首先引入random库来生成一个1到100之间的随机数作为答案，然后不断让用户输入猜测并给出提示（猜大了、猜小了），直到猜中为止，并在最后显示总共尝试了多少次。 您提供的代码片段并不是一个有效的Python程序，而是包含C&#x2F;C++风格的语法错误和不清晰的功能调用。因此我无法直接修改这个程序，因为需要首先明确其语言类型并纠正基础语法问题。 懒得运行，目测正确，7分 没有改代码，0分 b 您提供的代码看起来像是混合了C语言和Python的语法，还有几个拼写错误。我会帮您改正并转换成正确的Python代码。 首先，Python不需要包含头文件，所以我会去掉 #include [studo.h]; 这一行。 int mian() 应该是 def main() 在Python中。 paint(&#39;hell word&#39;) 应该是 print(&#39;hello world&#39;)。 remake&lt;/&gt;; 这部分看起来是不正确的，可能是想表达循环或者重试的逻辑，但在Python中不需要这样的语句。下面是修正后的Python代码： 123456789101112131415161718192021def guess_number_game(): number_to_guess = random.randint(1, 100) guess_count = 0 while True: user_guess = input(&quot;猜一个1到100之间的数字: &quot;) try: user_guess = int(user_guess) guess_count += 1 if user_guess == number_to_guess: print(f&quot;恭喜你，猜对了！你总共猜了&#123;guess_count&#125;次。&quot;) break elif user_guess &lt; number_to_guess: print(&quot;太小了！&quot;) else: print(&quot;太大了！&quot;) except ValueError: print(&quot;请输入一个有效的整数。&quot;)# guess_number_game() # 注释掉这行是为了避免在执行此单元格时开始游戏&quot;猜数字游戏已准备好，您可以调用 &#x27;guess_number_game()&#x27; 来开始游戏。&quot;result:&quot;猜数字游戏已准备好，您可以调用 &#x27;guess_number_game()&#x27; 来开始游戏。&quot; 现在您有一个简单的猜数字游戏了。当您准备好开始游戏时，请调用 guess_number_game() 函数。这个游戏会随机生成一个1到100之间的数字，并让您尝试猜测这个数字。每次猜测后，程序会告诉您猜测的数字是太小还是太大，直到您猜对为止。猜对后，游戏会结束并显示您猜测的次数。如果您输入的不是有效的整数，程序会提示您输入一个有效的整数。 懒得运行，目测正确，7分 两个大脑同时运行，思维混乱，而且这个bug代码更像C而不是Python，0分 c 12345678910111213141516import randomnumber = random.randint(1, 100)count = 0while True: guess = int(input(&quot;请输入你猜测的数字（1-100）：&quot;)) if guess == number: print(&quot;恭喜你，猜对了！&quot;) break elif guess &lt; number: print(&quot;猜小了，再试试吧。&quot;) else: print(&quot;猜大了，再试试吧。&quot;) count += 1 if count == 10: print(&quot;你已经猜了10次，游戏结束。正确答案是：&quot;, number) break 正确的代码应该是：#include &lt;stdio.h&gt;int main(){ printf(“Hello world\\n”); return 0;} 懒得运行，目测正确，7分 修改后代码不错，2分 翻译12345678910这是一首歌的歌词片段，请翻译为中文，不要联网查找Tick, and, tock, once more. You&#x27;re hostingA magic show I cannot escape.There&#x27;s nothing else left for me to do.Going to the other side. (Other side)I don&#x27;t wanna be alone tonight.Oh, Lead me with your altered sign.There&#x27;s no one else left for me to lose.Heading to the other side. (Other side)Just be my savior and take me away. (away, away) 正确答案可以自己找一下不眠之夜（英文版） 可以看这个 a 滴答，又一声滴答，再次响起。你正在主持一场我无法逃脱的魔术表演。对我来说已别无选择，走向另一边。（那一边）今夜我不想独自一人。哦，请用你那改变过的信号指引我。我已没有其他人可以失去了。前往另一边。（那一边）请成为我的救赎者，带我离开吧。（离开，离开） 前面四句都有点瑕疵 个人感觉最好，9分 b 滴答，再一下。你主持着一个我无法逃脱的魔法秀。我已无其他事情可做。走向另一边。（另一边）今夜我不想孤独。哦，用你改变后的信号指引我。我已无人可失去。走向另一边。（另一边）成为我的救星，带我离开。（离开，离开） 前面四句都有点瑕疵 个人感觉8分 c 时钟滴答作响，你正在主持一个我无法逃脱的魔术表演。我已无事可做，只能走向另一边。（另一边）今晚我不想独自一人。哦，用你改变的信标引导我。我已没有什么可以失去，只能走向另一边。（另一边）只要成为我的救世主，带我离开这里。（离开这里） 前面四句都有点瑕疵，第四句问题更大 感觉最差，7分 找歌找视频123有一首歌，是Alan Walker的，我只记得两句歌词，你能帮我找找吗1. Hello, hello, Can you hear me2. There is a ghost inside me 123456一位博主Alan Becker有一个视频，我忘了是哪个，你能帮我找找吗1. 内容大概是五位主角，其中三位在下界与别人打斗，其中两位和别人在电脑搏斗，后来和另外三位走到一起2. 这是翻拍的一个巨大阴谋3. 好像出现了命令方块4. 打斗很精彩，还有一个权杖5. 有一个巨大的黑洞会不断扩大并吞噬 《The Spectre》和《AvM Ep.25》 a 根据您提供的歌词片段，这首歌是Alan Walker的《Ghost》。这首歌最初是作为电子游戏《死亡搁浅》（Death Stranding）的原声音乐之一而发布，并且后来出现在专辑《DEATH STRANDING: Timefall (Original Music from the World of Death Stranding)》中。 歌词完整部分包括： 123Hello, hello, can you hear me?There&#x27;s a ghost inside me... 很抱歉呀，目前我还没有掌握回答这个问题的技巧，我会不断学习，您也可以问我一些其他问题，我会努力给您解答。 【被截断了】【答出了AvM但不知道哪一集】 找歌0分，这首歌根本没有这两句 找视频5分，好歹答出了系列 b 您提到的这两句歌词来自于Alan Walker与Torine合作的歌曲《Hello World》。这首歌的歌词包含了您提到的部分，具体如下： 1234567Hello hello Sing hello world it feels so good to be home Hello hello hello world I open my eyes and say hello to the world Hello to the world Hello hello hello world I open my eyes and say hello to the world 这首歌的完整歌词可以在相关网站上查看，例如网易云音乐、哔哩哔哩以及其他歌词网站。 根据您提供的描述，您可能在寻找的是Alan Becker的火柴人系列视频中的一个特定视频。这个系列以其独特的火柴人角色和精彩的故事情节而闻名。然而，由于Alan Becker的作品非常多，且每个视频都具有独特的内容和情节，因此很难准确地确定您所指的是哪一个视频。为了帮助您找到这个视频，我建议您浏览Alan Becker在哔哩哔哩或其他视频平台上的官方频道。例如，哔哩哔哩上有一个Alan Becker全集（纯洁版）的视频合集。您也可以参考一些粉丝整理的时间线梳理，这些梳理可能会帮助您根据剧情和时间线找到您所寻找的视频。如果您能提供更多具体的细节，例如视频发布的大致时间或者视频中的一些独特特征，可能会更容易找到确切的视频。不过，根据您目前提供的信息，最有效的方法可能是直接浏览Alan Becker的视频合集，看是否能找到符合您描述的视频。 找歌0分，这首歌根本没有这两句 找视频1分，本来想零分的，但是下面这个…… c 这首歌曲的名字是《Alone, Pt. II》，由Alan Walker演唱。以下是完整的歌词：[Verse 1]Hello, hello, Can you hear meI’m lost inside my head, it’s so loudCan you hear me, out thereIt’s getting hard to breathe, oh[Pre-Chorus]I’m running in the dark and I’m bleedingI’m searching for something that I can believe inI’m looking for a way out[Chorus]There is a ghost inside meIt’s eating me alive, aliveI’m going nowhere slowlyI think I’m going insane, insane 【太长了】 根据您的描述，我无法直接找到对应的视频。但根据您的描述，这可能是一部类似于《我的世界》的游戏解说视频，也可能是基于该游戏的某个剧情或挑战解说。如果Alan Becker是著名的游戏博主，那么他的视频可能在各大视频平台上都有发布，您可以尝试在YouTube、Bilibili、抖音等平台上搜索他的名字，看看是否有符合您描述的视频。如果您能提供更多关于视频的细节，如视频标题、发布时间、或者某个特定的剧情或元素，我可能能更准确地帮您找到视频。 找歌0分，这首歌根本没有hello ghost等词，歌词也完全对不上 找视频0分，本来想-1分的，还《游戏解说视频》，连他都不认识 评分一道题10分，程序那两个问题一共算10分，找歌找视频各十分 通义千问：75 GLM4：56 蓝心小V：44 在这个测试中通义千问表现最好，GLM4快及格了，蓝心小V有待进步 其它根据他们的描述，通义千问实时更新（2月5日问得更新到2月5日），GLM4更新到2023年4月，蓝心小V更新到2023年4月 问了一下蓝心小V，他认识Alan……又问了一次，它让我问别人…… 测试文本","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"LLM","slug":"LLM","permalink":"https://for-the-zero.github.io/tags/LLM/"}],"author":"for_the_zero"},{"title":"相机算法对比：vivo vs Google","slug":"相机算法对比","date":"2024-02-05T03:52:00.000Z","updated":"2024-02-05T03:55:48.522Z","comments":true,"path":"2024/相机算法对比/","link":"","permalink":"https://for-the-zero.github.io/2024/%E7%9B%B8%E6%9C%BA%E7%AE%97%E6%B3%95%E5%AF%B9%E6%AF%94/","excerpt":"","text":"相机算法对比终于把旧手圾换掉了 是IQOO Neo9 既然整了个大的，不如看看相机怎么样 受伤没有可对比的，就看算法吧 一上手就装了个谷歌相机（酷安日文大佬的） 看看vivo的算法好还是谷歌的算法好 下面的图片都是普通&#x2F;标准模式&#x2F;徕卡鲜艳、夜景&#x2F;夜视仪&#x2F;夜景压光模式拍摄的 趁着一个外出的机会拍一拍（一年也没去过几次） 场景 原生相机 点评 谷歌相机 点评 总结 光照充足的田野 颜色比较淡 颜色鲜艳，很浓，主观上挺喜欢的 谷歌相机好，明显更鲜艳 光照较少 整个画面都亮了，石头清晰，细节较多 这个光影的效果不错 主观上谷歌相机 近距离拍几朵花 颜色中规中矩，但是虚化不错 颜色鲜艳，细节少，还有点糊 偏要说谁好的话，就原生的吧 很黑的夜晚（肉眼几乎看不到什么东西）+一盏白炽灯 后面的树是黑的，前面的东西还有点颜色。这灯泡跟画上去的太阳一样，感觉有点假。整体很亮 细节少， 更加黑，糊。灯泡的亮度倒是压下去了，但总体相对来说不行 原生完胜 很黑的夜晚（肉眼几乎看不到什么东西） 更模糊，更亮（惊人的4万ISO） 很模糊，但是天空的颜色和这种氛围感我挺喜欢的 谷歌相机更好吧 谷歌相机3：2原生相机 很难说谁好 更多看主观","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"拍照","slug":"拍照","permalink":"https://for-the-zero.github.io/tags/%E6%8B%8D%E7%85%A7/"}],"author":"for_the_zero"},{"title":"一个提取手机apk的玩意","slug":"一个提取手机apk的玩意","date":"2024-01-24T09:40:00.000Z","updated":"2024-01-24T09:41:46.128Z","comments":true,"path":"2024/一个提取手机apk的玩意/","link":"","permalink":"https://for-the-zero.github.io/2024/%E4%B8%80%E4%B8%AA%E6%8F%90%E5%8F%96%E6%89%8B%E6%9C%BAapk%E7%9A%84%E7%8E%A9%E6%84%8F/","excerpt":"","text":"apkget又是个Python+adb的项目 自己有需求&#x3D;&#x3D;&gt;立项&#x3D;&#x3D;&gt;开干 练练手，没什么不好 用了flet做ui（原本想用dpg的，那玩意有点问题，看上一篇文章，但是他的字体也有点问题），subprocess+os运行adb指令，re解析输出 长这样，默认窗口有点大（在我的电脑上），不知道咋调（文档里没找到） 只需要点一下刷新，稍等一会 这期间发生了什么呢 首先用adb获取所有应用的安装包链接 然后推送aapt-arm-pie到手机，用于解析apk 运行aapt，获取应用名和包名 竟然没有能够直接获取软件名的adb命令，只能这样了，这个过程会有点久，手机也会突然较高占用，不卡 然后删除aapt-arm-pie 点击更改导出路径，可以选择任意目录导出 先从手机拉取apk到电脑上，就会有一个base.apk文件 再重命名一下就行了 非常简单","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"发现bug，连甩两层锅","slug":"一定是Imgui干的！","date":"2024-01-23T08:39:00.000Z","updated":"2024-01-23T08:39:52.317Z","comments":true,"path":"2024/一定是Imgui干的！/","link":"","permalink":"https://for-the-zero.github.io/2024/%E4%B8%80%E5%AE%9A%E6%98%AFImgui%E5%B9%B2%E7%9A%84%EF%BC%81/","excerpt":"","text":"刚刚正在开发时突然出现一个问题 （图片中的已修复 使用文件&#x2F;目录选择窗口的时候无法使用中文字形，而相同配置的其它窗口没有这个问题 我排查了很久，自习看过了文档，尝试过各种方式，都不行 准备去Github看看，发现还真有一样遭遇的，开发者也回复了，还标注了高优先级，但依旧Open Chinese path support for select_directory_dialog · Issue #299 · hoffstadt&#x2F;DearPyGui 但事情没那么简单 程序的调用 1楼主很快找到了问题所在，不是我的错，不是DPG的错，是imgui的错 找是找到了，但不知道怎么改 hoffstadt: This appears to be an issue related to ImGuiFileDialog. Still looking into it more. 开发者：好像与ImGuiFileDialog有关，在进一步调查 hoffstadt: Should work in 0.7! 开发者：0.7应该就行了！ 至于我，更新一下这个包就行了，太久没更新过了 确实，像上面的图那样，成了 2 0.8又没了…… 至少MacOS上的韩文出了问题 这可难不倒！ 一个u8string就搞定了 u8应该是指utf-8吧。这么说，没有支持utf-8？怎么会这样 3完了？还没呢！ 测试的时候发现：中文文件夹打不开、选中直接卡死闪退，以前还是正常的 已经有人帮我问了，这是第二次重新Open了（有完没完 目前还没有回复，而它连接到了另一个issues Application crashes when file_dialog path encounters characters like æ ø å · Issue #2057 · hoffstadt&#x2F;DearPyGui 一个叫v-ein的贡献者分析了一下： It crashes in mvFileDialog::getInfoDict(), in the very first call to PyDict_SetItemString(), which extracts file name from ImGuiFileDialog and feeds it into ToPyString() (and consequently PyUnicode_FromString()): 1PyDict_SetItemString(dict, &quot;file_path_name&quot;, mvPyObject(ToPyString(_instance.GetFilePathName()))); The problem is, GetFilePathName() returns an ANSI-encoded (single-byte) string, whereas PyUnicode_FromString() expects a UTF-8 strings and treats it as such. I believe it goes overthe trailing zero or something like that. Or maybe it stumps upon anassertion of some kind and crashes. I’m not sure whether ANSI-encoded strings areWindows-specific behavior or they show up on all platforms (I’d bet onWindows-specific). The bad news are, the file dialog doesn’t even display such names correctly. That is, strings inside of file dialog must be UTF-8 rather than ANSI; it’s a bug in ImGuiFileDialog and not in DPG. Not sure if we can fix it in ImGuiFileDialog though because it’s a submodule repo - scratch that, even though it’s a third-party library, it’s committeddirectly into DPG. Technically we can fix it or even update ImGuiFileDialog from its source repo (if it works on old ImGui, that is). 简单总结一下：由于Windows先进的向(lì)下(shǐ)兼(yí)容(líu)，路径用的是ANSI编码，所以GetFilePathName()返回的是ANSI编码字符串，而PyUnicode_FromString()期望的是UTF-8字符串，可能就在这里出问题了（但是他用了“认为”“可能”“或许”，具体原因他也不清楚） AI烤肉： 这是ImGuiFileDialog中的错误，而不是DPG中的错误。不确定我们是否可以在ImGuiFileDialog中修复它，因为它是子模块仓库 - 打消这个念头，即使它是第三方库，但它直接提交到了DPG中。从技术上来说，我们可以修复它，甚至可以从ImGuiFileDialog的源仓库更新它（如果它在旧的ImGui上工作的话） 然后……然后就没了，现在都没有解决 为了把程序做出来，就不用它做界面了吧，决定用flet了","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"一个手机硬件状态监控的玩意","slug":"adb-python-状态监控","date":"2024-01-20T15:20:00.000Z","updated":"2024-01-20T15:28:59.751Z","comments":true,"path":"2024/adb-python-状态监控/","link":"","permalink":"https://for-the-zero.github.io/2024/adb-python-%E7%8A%B6%E6%80%81%E7%9B%91%E6%8E%A7/","excerpt":"","text":"Phone Info core.py感觉取这个名字不太合适 python+adb搞的 运行用了subprocess获取输出（为什么没有人做相关的解析库啊 用了re识别内容 内容不多 存储空间 总空间 已使用 占用率 电池 - 电量 CPU 核心数 使用率（总） 内存 - 同存储空间 输出就这样子： 123456&#123; &#x27;storge&#x27;: &#123;&#x27;total&#x27;: 51.42, &#x27;used&#x27;: 49.24, &#x27;use&#x27;: 96&#125;, &#x27;battery&#x27;: 100, &#x27;cpu&#x27;: &#123;&#x27;cores&#x27;: 8, &#x27;use&#x27;: 100.0&#125;, &#x27;mem&#x27;: &#123;&#x27;total&#x27;: 3.69, &#x27;used&#x27;: 1.8699999999999999, &#x27;use&#x27;: 50.68&#125;&#125; （什么垃圾手机，啥也没干就占用这么高）（麒麟659，据说甚至不如Nova11se，那没事了）（就要换机了，看看能不能说服）（电脑也是依托……）（总不能代码写错了吧） pinfo.py很简单的一个玩意，用Flask做了个api","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"AlanBecker视频列表：关注视频更新动态！","slug":"关注AB视频更新","date":"2024-01-20T15:19:00.000Z","updated":"2024-01-20T15:28:36.739Z","comments":true,"path":"2024/关注AB视频更新/","link":"","permalink":"https://for-the-zero.github.io/2024/%E5%85%B3%E6%B3%A8AB%E8%A7%86%E9%A2%91%E6%9B%B4%E6%96%B0/","excerpt":"","text":"ABVLGithub 起因怎么说呢，我是Alan Becker的粉丝，一直想等更新 但是呢，他最近的更新不太寻常 以前很长一段时间，都会在油管的社区里面发预告的，但是最近他不发了，而且突然更新有点快，我又不能没到那个时候就翻__看一下 那么就有了这么一个想法，做一个能够检测更新的程序，放在外国的免费服务器上（孩子没钱），时不时访问一下就不用每次都翻了 开发一开始我的想法是requests爬虫，结果怎么也爬不到，那就只能找api了 上网搜了一下，很快啊，Youtube API V3 Data！研究了一下调用，我要的数据都有了 我是用Postwoman测试api的，但是当我转移到python进行本地测试后，总是报错，因为那玩意要单独设置代理 本来还想搞直播检测的，结果要强制登陆账号，放弃了 那么前端呢？Flask！做了一个小小的网页模板，运用了mdbootstrap，稍微好看了点 最后就是服务器了，我放在了PythonAnywhere上，访问的时候一直不通过，结果是因为wsgi文件没有设置。上网抄了一段，还是不行，只在import语句报错，说是找不到文件。后来排查了很久，实在不行的时候我想把上面的路径删掉一个/，还真就行了，6 成果可以直连查看：链接、标题、发布时间","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"一段时间前做了一个DNA打结的东西","slug":"一段时间前做了一个DNA打结的东西","date":"2024-01-20T15:17:00.000Z","updated":"2024-01-20T15:28:22.155Z","comments":true,"path":"2024/一段时间前做了一个DNA打结的东西/","link":"","permalink":"https://for-the-zero.github.io/2024/%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%89%8D%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AADNA%E6%89%93%E7%BB%93%E7%9A%84%E4%B8%9C%E8%A5%BF/","excerpt":"","text":"DNA打结器一共两个 语文版：mixmem 化学版：tiedna 用的技术不一样 MixMem从网上忘了哪里把初中古诗词搞了过来，写了个已经删掉了的程序根据符号分段成了一行一句 话说那个崽是没有强迫症吗，大多数用，，少数用,，再加上古诗词本来就有的其他符号，给我增工作量呢，滚动条拖着拖着就发现有几行特别长，一看就是没有正确分句，就这个弄了一段时间 其他不难，随手做的，练习一下，顺便试试新东西——Flet 这是我找到的有一个GUI框架，是用Flutter显示的，API还算友好（感觉不如dpg），就喜欢这种，随手做了一下 效果解：如图所示 你可以选择仅五个字的诗句、仅七个字的、没有限制的 可以选择生成1~100个诗句 一句的话……还挺适合复习的 Come On一下，就能生成 就像这样： 你可以选中文本复制 有吏夜捉人。 如闻泣幽咽。 你会发现很多奇妙的组合 TieDNA这个就没那么复杂了，随便做的 （挺像那个乱用主谓宾的小游戏啊） 命令行显示 + msvcrt检测按键 运行时按不同的按键有不同的句式 （图中7个是1模式，7个是2模式，7个是3模式，7个是4模式，） 离谱就对了 （不会有人不知道n是名词v是动词吧） 你会发现很多奇怪的组合 用天平把化学实验室砸坏用化学老师把白磷被吃掉 我特意写了立即发生爆炸 化学实验室 化学老师 十分的有趣啊~","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"做了个叫PinCopy的玩意","slug":"做了个叫PinCopy的玩意","date":"2024-01-20T15:17:00.000Z","updated":"2024-01-20T15:28:07.258Z","comments":true,"path":"2024/做了个叫PinCopy的玩意/","link":"","permalink":"https://for-the-zero.github.io/2024/%E5%81%9A%E4%BA%86%E4%B8%AA%E5%8F%ABPinCopy%E7%9A%84%E7%8E%A9%E6%84%8F/","excerpt":"","text":"PinCopy自己做的一个小工具，但是没什么用，是一个简易剪贴板临时存储器 GitHub - for-the-zero&#x2F;pincopy 文件不多，字体和主程序 长这样 懒得裁了，直接放吧 用了pyperclip操控剪贴板，pyautogui搞一点特殊操作，dpg搞界面 可以获取剪贴板，把内容临时加到列表中（仅限文字），可以随时删除 复制指点击内容对应的按钮后复制到剪贴板，模式有两个，一个仅复制，一个在你按下之后快速地alt+tab再ctrl+v再alt+tab，就可以快速连续自动粘贴了，很聪明对吧 聪明个鬼 自动粘贴就是可以在你复制文本之后直接把内容粘贴到列表中，就不用回来手动点了 关掉程序，内容直接没了，懒得搞存储 不然怎么叫“临时”呢","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"一点危险的想法","slug":"批判","date":"2024-01-19T14:40:00.000Z","updated":"2025-04-05T11:49:20.936Z","comments":true,"path":"2024/批判/","link":"","permalink":"https://for-the-zero.github.io/2024/%E6%89%B9%E5%88%A4/","excerpt":"","text":"一点危险的想法 前言无论是经济、科技还是民生，医疗卫生还是人民福祉，我国都有很大成就 在中国共产党的领导下，人民的生活日益幸福，改革开放等都取得了较大成就，部分方面甚至领先与别国 一个国家并不是完美无缺的，无法消除缺点但可以尽量减少缺点，因此国家的发展需要合理的建议，才能不断改进自身，促进发展。如果只听从身边某一部分人，那么民主就会被削弱，也不利于国家发展 中国特色社会主义进入新时代，我国社会主要矛盾已经转化为人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾，党为人民服务，因广泛听取人民的建议 给出建议，批判性思维不可少，可能有些观点不太好，但也有值得采纳的观点 声明 作为中华人民共和国公民，我认可中国特色社会主义理论，坚持中国共产党领导，自觉遵守宪法和法律 本文仅表达个人观点，请勿恶意引申，本人观点可能有错误的地方，也请不要过分解读，但是也有合理的建议需要听取 尊重个人观点，如有不和之处，请辩证思考，有时候坚持你自己的看法也是对的 …… 本文内容本文就从 经济（科技发展、法律法规、对科技事业发展的激励程度） 政治（听取建议） 文化（教育、宣传） 社会（部分不公平现象、乡村发展建设及其方向） 几个方面讨论一下 经济我国经济发展迅猛，正转向高质量发展阶段 大公司（大型企业）和个人开发者的对于软件方面的贡献都不小 大公司的国内竞争和满足某种现状（仅指部分公司，并非全部） 首先，部分产品需要大量用户的支持才能发展起来，例如社交媒体平台，需要大量用户才能支撑起内容或留存住用户。也有部分产品需要投入大量精力才能实现“基础”的“标准&#x2F;要求”，一般只有大公司能做。以上两者容易形成垄断。当然，容易垄断的不知这么一点 但是当他们垄断了某个类别或者没有垄断但一段时间内难以被取代时，他们并不满足于这么一点钱，而是提供更多的“服务”和“福祉” 什么“服务”呢？与该服务无关的内容被强制加入服务中。有的音乐软件（据我所知，国内主流的音乐软件大多都是）在提供音乐服务之外还有社交、直播、边听边玩小游戏、K歌、短视频、购物、新闻等内容，部分还能理解，但是直播、短视频、购物、本应该放在单独的软件内为什么要放在音乐软件内，如果用户真的想要做这些的话，大概率会下载一个更知名的软件而不是一站式搞定，这样一定有利于用户体验吗？某款聊天软件为了一个附加功能（虽然也有社交属性，但不是人人都用）强制增加了一个大型游戏引擎，占用手机存储空间，也使程序运行更加卡顿（部分情况），不利于用户体验。手机负一屏，自带浏览器基本上都有资讯信息流，里面还有广告，据说有的家庭监控软件可以看短视频……对手机的压力高了就算了，用户既无法迁移到其他软件又要忍受无用功能的推广骚扰和无用的占用……不管一管吗？ “福祉”又是什么？推广和广告，至于为什么叫“福祉”，后面会有。这里的推广主要是指捆绑，某聊天软件在接收到某些文件后推荐下载他们家的浏览器使用浏览器的“服务”打开文件，还好不是强制的，某些厂商修改系统；在部分地方下载软件安装包后，可能会推荐你到应用市场安装，可能会让你下载一个应用市场再去里面安装，在打开应用市场或某些特殊的安装包后还会推荐安装软件，一不注意就安装了。还有广告，现在广告无处不在，但是广告的形式让人厌恶，“摇一摇打开广告”拥有极低的操作难度就能打开，甚至自己什么都没干就打开了，还有的公司因为员工开发了一种新的广告展现形式被公开表扬了，用户想看广告吗？在他们嘴中，似乎用户喜欢看广告，甚至恨不得多看一点，说到底还是钱。广告还有一点很重要，那就是隐私，为了精准投放，就要以隐私为代价，隐私政策不同意就用不了，我相信没几个人会看的，就这样在用户不知不觉的时候就把隐私偷走，换成客观的钱财……这也不管吗 根据卡巴斯基实验室和Google的发现，拼多多较早版本的App利用了系统软件漏洞CVE-2023-20963来安装后门，利用该漏洞可以提权，而且整个过程不需要用户交互，可以获得对用户数据和通知的未授权访问。这些恶意代码能够提升权限、下载和运行其他恶意模块，其中一些模块还获得了访问用户通知和文件的权限，在部分审核严格的渠道没有利用该漏洞，但是其他渠道就不得而知了。某些公司为了一点利益，不顾用户隐私和安全，恶意利用漏洞，你想想，这是什么意思 大公司，该管一管了 个人开发者服务器要实名，网站要备案，软件要备案……据说部分内容的严格和限制不小，某种程度上可以扼杀部分条件差的个人开发者了。走程序是好的，有监管是好的，但是要适度。这些限制可能会抑制创新（做出来了不能给别人提供，甚至会被请去喝茶，不如不做），对发展不一定好啊，我希望是达到一定规模的才强制实名和备案 李跳跳是一款小软件，利用用户授权的系统权限模拟手指点击屏幕帮用户点击开屏广告的跳过按钮，不涉及破解、修改、过滤等操作，是一个非盈利的单机应用。但是律师函来了，据称是“不正当竞争”“损害用户福祉”（这么说，用户很愿意看开屏广告了？开屏广告100%弹出&#x3D;100%用户愿意看&#x3D;100%用户喜欢开屏广告&#x3D;用户福祉），一下子激起民愤，但由于对方律师团队强大，制作方选择无限期停止更新，也无能为力。一个真正帮忙改善用户体验的软件，被所谓“福祉”打倒，这还怎么发展 还有前一段时间闹得沸沸扬扬的避暑山庄事件。一位居住在河北省承德市的程序员灵活就业，在GitHub为外企工作，编写代码、回答用户问题、参加视频会议等，并收取报酬，累计收入约105.8万元，结果被承德市公安局双桥分局传唤，被告知涉嫌“擅自使用非法定信道进行国际联网”，处以200元的行政罚款+没收全部收入。如此就业，值得学习和骄傲，却搞的人心惶惶，负责人似乎一点都不认识Github，Github是一个开源平台，几乎每个程序员必备的网站，虽然没被墙，但很多时候能不能连上得看运气，有时候用着用着突然连不上了，很难受，尤其是有急事的时候，为了能够稳定访问，肯定要使用一点工具，合不合法的都有，但他也没干什么其他事啊。这么处罚，真的好吗？ 对于避暑山庄事件，我引用一下： 这个事件的影响主要有两个方面：一是对中国IT行业的影响；二是对中国社会舆论的影响。这一事件是一个值得我们深思和反省的事件，它既是一个挑战，也是一个机遇。我们应该从中吸取教训，找到问题，寻求解决。我们应该以开放、包容、合作、创新的态度来看待互联网、程序员、法律等问题，从而推动中国IT行业的健康发展和社会进步 人才不一定流向大公司，但过多的规定会限制发挥，有着适得其反的效果，应进行合理控制和立法 开源开源，Open-Source，即开放源代码，将源代码公开，在遵守开发者的Licence(开源协议&#x2F;许可证)的前提下可进行修改、创新等操作，但是…… CEC-IDE这个工具基于微软开源的VSCode进行“换皮”、二次开发处理后宣称为自主研发，连界面都几乎一模一样 许多播放器使用了FFmpeg但不署名 中科院计算所发布了木兰编程语言，负责人接受采访时说道：“由我国科研人员完全自主设计开发”，实际上和Python没什么区别，Python的编译器也是开源的…… 还有汉芯事件，虽然不是开源，但影响恶劣，所谓国际领先国产自研芯片，是从国外进口别人的芯片，打磨掉标志再重新印上了自己的标志，骗了当时不少人 宣称国产自研浏览器的红芯，实际上基于开源的Chromium内核修改，文件(夹)的名字都不肯改…… 以上这些案例，不仅欺骗了大家、侮辱了开源，还骗了国家的科研费用，你愿意看到这种事再次发生吗？ 政治我国的人民代表大会制度可以广泛听取人民的建议，当时感觉没什么激励，不如看看《邹忌讽齐王纳谏》？ 有时大家会听取专家的建议，但是站得高看到的世界也不一样，处境好难以了解处境差的人的生活，一个有钱有势的名人怎能了解底层生活人民的感受呢，有时候某些专家偏要“替”他们“发声” 王福重：农民不要用收割机收麦子，会污染环境 黄有光：允许一妻多夫，低收入男人合娶一个老婆 这可不是很合理…… 除此之外，也可以听听业内人士，那些不同职业的没什么成就、普普通通的人，但是代表的更广泛也更真实，有时候比专家靠谱多了 另外，也不要忽略未成年人，未成年人不是少数人，未成年人不能缺席民主 文化教育应试教育（+学业压力重、作业多、违背初心的体育考试）、政策不到位执行（+监管漏洞） 应试教育最主要的病根就是应试教育了，似乎还有点像古代科举制 即使有一点点政策再弱化分数，但是家长师生的思想观念可不会轻易改变，约等于呼吁大家但听不听是另一回事 没有彻底的大改，很难解决这个问题，但是大改的风险太大了，确实是一个很难的抉择 在这样的观念下，成绩是唯一的评价标准，想要获得好生活&#x3D;&#x3D;&gt;要有高学位&#x3D;&#x3D;&gt;至少要上个好大学&#x3D;&#x3D;&gt;高考拼力&#x3D;&#x3D;&gt;高中学的好&#x3D;&#x3D;&gt;要上好高中&#x3D;&#x3D;&gt;中考分数高&#x3D;&#x3D;&gt;初中也要不赖&#x3D;&#x3D;&gt;…… “万般皆下品，唯有读书高”，学尽量多的考点，时间紧（指争取提前教完书）就灌输，没啥营养，不如提升学习兴趣，而且这全是理论，极少实践，较少时间和应用能力 想要提高成绩，就要学得多，不断复习巩固，挑灯夜读都是常事（睡眠时间不要了），学习压力、心理压力也不少 由于兴趣爱好对于考试没什么帮助，所以没必要学，因此我们的兴趣爱好受限 无论自己想不想学，父母老师要你学，那就学 据我所知，部分学校将教学质量与老师命运挂钩，教不好随时被辞退，老师也要有不少压力 …… 作业真的有少吗？住宿生：“那都是在学校生活，减少家庭作业关我们什么事，我们做的是学校作业”，我个人并没有感受到作业减少，并不觉得我是双减受益方。就这个寒假，每一科都布置了作业，有的是37天体格周期的作业，有的是每天都有作业，有的周末放假两天，有的周末不放假，第一天到最后一天都有作业，除了大年初一大年初三 我想，设立体育考试是想要让我们强身健体、增强体质、全面发展、纠正应试教育倾向吧，但真的做到了吗？它也是分数的一部分，应试教育的魔抓还是逃不掉的，体育训练肯定是多了，只不过目标是满分，能满分都满分，成绩可不能输了，顺便促进了体育训练机构的发展，这已经不是为了强身健体、增强体质，而且也受应试教育的侵蚀了，这怎么行？而且这还不分身体素质，直接统一标准，你知道对于身体部分功能有缺陷的人有多难吗，肺功能测试各项指标均低于应有的值的我每次跑步都觉得这是煎熬，简直是在玩命，猛一点就要进校医室……为什么不针对每个人制定不同的标准（甚至这句话都有一些应试教育的思想），体育考试还是你想的体育考试吗 政策执行不到位打字累了，说少点 “领导要来检查了，好好表现” 领导来的时候，拉上黑板，遮住屏幕上的课件，开始讲学校（或者是更上级）给的任务——安全教育 “同学，把这个课程表换上去”将真正的课程表换下来，换一张假的课程表给领导看。起床晚、课程少、上课晚、下课早、甚至还有其它课程（指不用考试的课程） 宣传如此好的党和国家，还有这博大精深的文化，为何不宣传，但是宣传要有度 一些综艺节目都变了样（现在不知道，现在不看了），主题要么是弘扬传统文化，要么是歌颂党和国家，但是它本身该有的趣味性却减少了许多，要是做的比较差，甚至有一点广告的感觉 歌颂党和国家，弘扬中华文化，是好的，但是宣传要选定位置，而不是硬生生地加进去 电视上经常会有抗日、内战、间谍等为题材的电视剧，都还不错，这就是正面案例，因为电视剧是剧，本身就适合有这种内容，但其它一些就不一定了，本该要让人悲或者欢的内容中融合了一点严肃…… 社会部分不公平现象教育不公平大家都知道，贫穷地区教育资源稀缺，我觉得可以发挥互联网优势，创新实现优质教师实时远程教学，志愿教室辅助教学，再运一点足够先进的设备满足需求……当然，这只是个小小的想象 有的地方收入高，有的地方收入低，有的职业收入高，有的职业收入低……但是这个差距并不小，有的人收入极高，享受着奢华生活，享受全方位保障；有的人却收入低支出多，生活要靠自己奋力打拼，部分保障还落不到自己头上。我生活所在的城市，四线收入一线消费，搞建设的钱都不知道干嘛用了 劳动者，应被尊敬；尊老爱幼，传统美德。但是并非整个社会所有人都认可，如果靠立法、靠呼吁是仅仅不够的，应该想想有没有别的更有效的办法，其中最重要的是固有观念 在社会大局下，国泰民安，但是如果细看某一处，可能会发现随处会有不太和谐的现象出现。偏见、误解、歧视、欺凌其实一直都在，一方面是思想观念，另一方面可能也是感觉到不平等吧。这点我觉得还是要从改变思想观念起步，但不要直接灌输（课堂、小册子、宣传活动等），最好是潜移默化的、不断影响着的 乡村发展建设及其方向乡村特色产业来来去去就那几个，农业、手工业、文化、旅游，重复率很高啊 “世外桃源”租房、景点创新、信息技术、大型自然风光游乐场、摄影等的比赛等都可以选择，重点要差异化，每家有每家的特色 结尾一不小心写了这么多，本来想着一晚上写1000字就行了，结果花了一天写越5000字 发现了吗，五位一体前四个都写了（生态文明建设不知道写什么），引申再引申，结合生活经历和新闻事件扩充，写出来这么多 希望祖国繁荣昌盛，改善民生，为人民谋幸福！","categories":[{"name":"其它","slug":"其它","permalink":"https://for-the-zero.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[],"author":"for_the_zero"},{"title":"胡思乱想：设定","slug":"胡思乱想：设定","date":"2023-11-05T07:44:00.000Z","updated":"2025-02-22T03:54:51.646Z","comments":true,"path":"2023/胡思乱想：设定/","link":"","permalink":"https://for-the-zero.github.io/2023/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3%EF%BC%9A%E8%AE%BE%E5%AE%9A/","excerpt":"","text":"这就是个胡思乱想、脑洞大开、不切(科学)实际的玩意，仅图一乐 点击查看","categories":[{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"}],"tags":[],"author":"for_the_zero"},{"title":"记一下自己写tttpro","slug":"tttpro","date":"2023-08-29T09:15:00.000Z","updated":"2024-01-20T15:27:38.591Z","comments":true,"path":"2023/tttpro/","link":"","permalink":"https://for-the-zero.github.io/2023/tttpro/","excerpt":"","text":"tttpro最近整了个玩意，较TicTacToePro（乱取的） Github 在线玩 设计 但是突然一想就搞了这么个项目 先把井字棋的所有结局和它的胜负平算出来 一起塞到sqlite，方便快速查找 玩的时候通过计算剩下可行的步骤，搜索数据库，找到最好的一步 当时的想象：一个完美的对手，从来不输，直接无敌，赢不了它 实际上：自己体会 工具的选用sqlite我只是添加和查找，没什么大的需求，而且它可以本地搞 完全够了 streamlit这个可以让它在web端搞界面，同类的还有pywebio，但我选了这个，因为更好看 我选web界面是因为可以部署，不然只能本地运行，你想想，发一个链接就能让大家玩，对于没电脑的或电脑小白来说不是很好吗 而且它自己也有个云，直接就可以部署了，很方便 AI求过chatGPT，用过AWS的代码填充，这里没用Github Copilot因为要钱了就再也没用过 对一些模块之类的还是很生疏 部分遇到过的Bug棋盘显示方式一开始想用按钮，结果不支持同名按钮 列表吧，空的会让它显示很奇怪，就加了两个点 （其实中间省略了很多） sqlite语句网上教程都不说的，我还在1=N，加了几个符号就行了 棋盘不显示不了解streamlit是怎样运行的，直接搞了个变量上去 机器人连着下两次棋我多打了个robot() 下不了棋在把棋局列表转换为md的时候，动到了原来的列表(?)，&#39;N&#39;全改为空了 刚好在下棋那里if #$%^&amp; == &#39;N&#39;:条件就不成立了，就直接下不了棋了 现在改成转换后替换字符串，解决了 部署首先，上传github 超时 再来 OpenSSL SSL_read: Connection was reset, errno 10054 不会了 找！ 还是解决不了 ipconfig /flushdns 成功 打开streamlit cloud，Github登录 访问超时 …… 搞好了，看看 报错：是模块引用 创建requirements.txt （sqlite和Random不需要） 修改~ 完成！！！ 性能（哭笑不得 生成结局和导入到数据库的时候花了很久 但是还出了bug，多搞了几次 下棋要等待3-4秒 知道我放到云端后 这么快‽","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}],"author":"for_the_zero"},{"title":"在scratch实现简单纯画笔排版","slug":"在scratch实现简单纯画笔排版","date":"2023-07-13T11:54:00.000Z","updated":"2024-01-20T15:27:18.512Z","comments":true,"path":"2023/在scratch实现简单纯画笔排版/","link":"","permalink":"https://for-the-zero.github.io/2023/%E5%9C%A8scratch%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%BA%AF%E7%94%BB%E7%AC%94%E6%8E%92%E7%89%88/","excerpt":"","text":"在scratch实现简单纯画笔排版在线玩 食用方法： 两个字符对应一个操作 如果\\开头，执行操作：\\n回车\\s空格(space) 其它（非强制要求） @开头 表示符号，后面跟符号参数 这里内置@?全字符大小@h半字符大小用于测试 其它 对应的字+-，如a-,1-,好-分别表示a,1,好 大写英文：对应的字+-，如a+表示A，主要是因为sc不支持识别大写 基于以前做的pfs修改，以前只能一个一个字显示，现在我可以直接搞一行字了！ 主要做了： 下一个字位置的计算 空格、回车 自动换行 超过区域不渲染 字距、行距 …… 具体自己看源码，很简单 很多bug，有的解决了但不知道为什么这样能解决，有的懒得搞了 屎山能运行就别动了…… 很大的缺点：字体要一个一个做（正在尝试用python生成，不知道能不能成功）","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[],"author":"for_the_zero"},{"title":"来交个友吧","slug":"来交个友吧","date":"2023-07-13T10:56:00.000Z","updated":"2025-05-03T09:04:05.498Z","comments":true,"path":"2023/来交个友吧/","link":"","permalink":"https://for-the-zero.github.io/2023/%E6%9D%A5%E4%BA%A4%E4%B8%AA%E5%8F%8B%E5%90%A7/","excerpt":"","text":"寻知音 为什么： 现实朋友少，虽然也不是很不堪 交友处处受挫(一方面经验不足，另一方面话题少) 他人不理解，慢慢疏远 不受人待见(有一个原本互不相识的，自我与他第一句话开始就看出很讨厌我，但与他人态度完全不同) 不如在网络世界试试 联系方式邮箱：forthezero@outlook.com QQ: 2678408650 更多：https://bento.me/ftz 关于我附下两个blog链接ab 会写代码，但不多（scratch&#x2F;python&#x2F;h5(html&#x2F;css&#x2F;js)） 使用哔哩哔哩、米游社、推特(X) 不喜欢短视频 才华多但不精（人话：会做很多事但一般都是入门级别 天天宅家玩 时不时有很多想法，有些不可能、有些没能力、有的正在做 学习忙碌（指有时间打游戏刷视频 玩原神、崩铁和phigros等 我不喜欢过于严格的条条框框，不喜欢一些繁琐而无用的礼仪 喜欢读课外书，但必读书目除外；喜欢学习，学校除外 不喜欢这种被迫的、无法选择的、日复一日且枯燥的学习 天天白日梦，现实……咳咳 管你男的女的，和的来就行 …… 想到就写的，后来会补充","categories":[{"name":"自己","slug":"自己","permalink":"https://for-the-zero.github.io/categories/%E8%87%AA%E5%B7%B1/"}],"tags":[],"author":"for_the_zero"},{"title":"如何在scratch简单实现拼音输入法","slug":"scil","date":"2023-07-02T06:42:00.000Z","updated":"2024-01-20T15:26:51.622Z","comments":true,"path":"2023/scil/","link":"","permalink":"https://for-the-zero.github.io/2023/scil/","excerpt":"","text":"先放点链接： 在线使用 最常见的100个汉字| 中国语言学院 字典生成 源码 操作说明 按键 说明 &#96; 切换输入法 | 退格(英文状态没写，中文在模式0为删除最后字符、1为清空) 大部分符号及英文状态的数字 输入 字母 输入 中文状态的数字 选择 实现起来不难1. 大体运行逻辑 （图上写得很清楚了，不写了） 2. 识别按键 利用循环遍历按键，逐个识别即可 3. 解决长按按键 如图 4. 找字 首先得出符合条件的拼音，一样使用遍历，包含输入的即可放到控制面板 根据拼音找字 5. 字典一个列表是拼音，一行一个 另一个是汉字，每一行互相对应，同拼音的放在同一行 这里使用了python中的xpinying模块获取拼音以及使用shot()排序 别的没什么好写了","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"}],"author":"for_the_zero"},{"title":"自述","slug":"自述","date":"2023-05-02T04:13:00.000Z","updated":"2025-05-03T09:09:48.430Z","comments":true,"path":"2023/自述/","link":"","permalink":"https://for-the-zero.github.io/2023/%E8%87%AA%E8%BF%B0/","excerpt":"","text":"自述说说我自己吧 小学前1. 玩玩具起冲突很小很小的时候，现在不记得多少事了，但我还记得这个。 外婆带我去邻居家和邻居小孩玩玩具，忘了发生什么了，起了冲突，打起来了，我们被外婆拉开，同时在哭闹。 突然，一辆玩具车重重地拍到我脸上，直接流了鼻血，很生气…… 2. 断鼻？忘了什么时候，记得父母说我的鼻梁断了，具体是为什么，我也不知道为什么断了，我怀疑可能是上面那件事 摸起来，我的鼻梁有一块突出，左右挤压时很软，可以压得很下去。 没什么感觉，就是（可能）后遗症多了点 3. 摔下楼梯爸爸去外面，妈妈洗澡，吃水果没事干，想起楼梯旁有个按钮不知道干嘛的，不够高，搬凳子上去，按了没反应，准备下去，结果凳子翻了，从楼上摔下来。第二天整个头都包扎了，现在摸起来感觉有一边头大了点。 小学1. 悬崖具体忘了是什么时候了，总之就是一次野炊，旁边有悬崖 我和小伙伴们在旁边玩棍子，有人发现悬崖边上不低处有一根很好的棍子，想要拿却够不到，大家都在讨论谁去 懵懂的我看着怎么没人去呢，然后亲自过去，试着沿悬崖爬下去够那个棍子 很快就被止住了，因为这太危险了，这悬崖大概有20层楼高，失足摔下去说不定得粉身碎骨 2. 被欺凌忘了几年级遇上一个zhī同桌，成了我小学半个遗憾。 它不是打架，而是言语欺凌，伤害是在心里的。 它取的外号有的是把我不可控制的缺点放大，但还有编的，还很低俗，甚至变态，90岁老奶奶都出来了…… 有三种解决方法，我使用的依次是： 但是我有种“人人平等，伤我一下还你一下”的观念，他说一句打它一下，它觉得它是对的，打回我，没完没了了，最终闹大叫家长。上课还好，下课我跑不过它。 有一次我决定找老师，希望和平解决，结果老师站它那边，“大事化小，小事化了”，说“很正常” “没什么大不了的” “管它干什么呢”……还是回归了第一种方法，但这也让他更得意了。 学校发了个废纸本（知识宣传小厕纸），有一本是关于校园欺凌的，我找到对应的类别照做了（不理他，让它失去欺负我的趣味，转移目标），结果真的成功了 3. 摔跤那天中午，大家在学校的空地里等家长，本来还是晴的，突然下起雨，而且还很大，变化得很快。 所有人都在往大厅跑，我也跟着跑了。 突然，我的脚被绊倒了，应该是被人绊倒的，本能保护自己，用膝盖和肘支撑。 这几个点都受了很大的伤，最重的是左膝，一大片都是血，脚无法直立……太痛了…… 4. 住院住一次院没什么的，但几年内一年一次呢？主要是肺炎和哮喘（新冠是后来的事） 5. 小学毕业朋友认识的不多，友情也不够深，后来甚至失去联系，挺想念的，这算是我小学另一半遗憾吧。 初中1. 撞破头初一时一不小心头往墙上窗户的拐角撞了上去，挺重的，瞬间耳鸣，流了一点血，后来缝了两针。 横向的伤口加上两条竖向的针口线好像一个艹啊 2. 血流满面血的教训！自行车别开太快！下坡路没刹住车，径直撞向铁栅栏，流了很多血，挺痛的，随后送医缝针，据说一块肉没了，而且编辑比较大，据说甚至宽度都大于手指一个关节（自己看不见，也没照镜子） 现在想想都后怕…… 我再也不敢了www…… 3. 被 歧视？我比较内向，也比较瘦小，但是成绩处于全级前列 这次的就称他（罪魁祸首）为C吧 糗事，要脸，别看 在七年级时在宿舍厕所上大号，刚上完老师就叫我出来，我按了一下马桶按键，听到了水声，但是粪便并没有完全冲走，而是留着其中一大块，纸巾倒是冲走了，但我并没有发现 C不久发现了，说我不冲水，还不用纸巾用手擦，我无论怎么辩解都不会听 后来我升上了尖子班，但是人际关系不怎么样，怀念旧的班级，所以我经常找旧班级的其他同学 有一次是体测的等待时间，C和周围的一群人无聊倒了一点水到地上，当时我在旁边围观，有几个人用手拨了一下水，蒸发快一点，他们没说什么，我也跟着做了，结果就嘲笑我“好玩吗”，那个语气跟逗小孩子一样，弄得我好不舒服，很快他们全都走开了 一次我在旧班级门前跟其他同学谈话，结果那个同学询问我的糗事，还有好几个熟悉的朋友都问了，可能是传开了。在和他们聊别的话题时，C突然过来：“你是哪班的”“这里不欢迎你”“走开”，据说另一个由这个班升上去的同学他是视之不理的。 就算我和朋友走开在没多远的地方谈话，他偏要过来，强制把我朋友拉走，我不愿意，我朋友也不愿意，他还说“不要和他说话”“你跟他说话干什么”“你给我走开”之类的话，还放下狠话 一次考试的时候，在走廊寻找考场，我没注意到它，它先注意到了我，直接玩我身上吐口水，还笑 高中被整别的懒得说，但是有一天晚上在宿舍拉屎 突然某个傻逼静悄悄地过来，然后一脚猛踹我的门（宿舍厕所门都没有锁），还在擦屎的我措手不及 但是他走开了，转身到宿舍造谣说我在里面玩屎 （这个傻逼逆天的事和思想还很多）","categories":[{"name":"自己","slug":"自己","permalink":"https://for-the-zero.github.io/categories/%E8%87%AA%E5%B7%B1/"}],"tags":[],"author":"for_the_zero"},{"title":"想法","slug":"talking","date":"2023-05-01T13:57:00.000Z","updated":"2025-04-05T11:49:37.212Z","comments":true,"path":"2023/talking/","link":"","permalink":"https://for-the-zero.github.io/2023/talking/","excerpt":"","text":"（个人想法，可能有错） 教育中有些不合理的地方扬短避长人各有所长，亦各有所短 我们应发扬自己的长处，将长处放大，让长处覆盖短处，而不是把更少的长处和更少的短处放在一起，要把所有科目变为长处，不就成了“六边形战士”了？ 只看到一个人的缺点就说他不行，只有看到更多项优点才行，这合理吗？ 我记得在某本语文练习册或试卷上有篇阅读，内容是扬长避短。他举了个例子（凭记忆，懒得搜）：一个木匠连自己的床都修不好，却声称能盖房子，收的钱更多，别人不信，后来在一处工地看到了他，他在指挥建房，指挥有当，及其擅长。 再拿我来说。我近几年经常患肺炎和哮喘，每次体测1000米跑完腿脚酸痛，呼吸不畅，还是远低于及格线（及格&#x3D;满分）一分多。在写作上，你说我文笔不好，确实，很多文章都挺烂的，你说我文笔好，也确实，一两个擅长类型的文章都挺好的…… 脱离社会天天在学校的笼子里，没见过外面的一些东西。 如果你是学生，回答一下：你附近的超市里牛肉一斤卖多少。应该很多人回答不上，至少包括我。 有一件事：物理试卷上有到送分的计算题，第一小问问限速多少，图片给出一个圆圈圈着80（限速80km&#x2F;h），有人空了整道题（后面两问需要第一问），说没给限速是多少，怎么算，还问那个标志是什么意思…… 成绩决定一切成绩是算所有科目总分的，从扬长避短的角度出发，也有些不合理 而且我见过这些人：一个上课认真，考试紧张、粗心、急，错了不少，成绩不怎么好；另一个上课打打闹闹，考试成绩优秀…… 我觉得应该评判不该是考试，而是随时随地，但也有很多问题，例如主观性、方式、故意表现。教育真的没那么简单","categories":[{"name":"其它","slug":"其它","permalink":"https://for-the-zero.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[],"author":"for_the_zero"},{"title":"一种迷宫的介绍","slug":"一个迷宫的介绍","date":"2023-01-15T06:39:00.000Z","updated":"2025-04-05T11:49:03.662Z","comments":true,"path":"2023/一个迷宫的介绍/","link":"","permalink":"https://for-the-zero.github.io/2023/%E4%B8%80%E4%B8%AA%E8%BF%B7%E5%AE%AB%E7%9A%84%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"一种迷宫的介绍这个迷宫不是简单的迷宫，我和同学加过很多内容 我为什么要做这个：我有一个同学，是我的好朋友，在无聊的时候我们会在纸上玩点东西，例如井字棋，后来我们玩起了迷宫，并且不断地增加东西使它更难更好玩。只可惜到后来我们到了不同的学校，从此再也没有联系过，我挺想念他的…… 这个迷宫的介绍分为这几个内容： 基础理念 模块 其他 其中模块分为： 常用模块&#x2F;不常用模块（根据后来的使用频率分类） 一般模块&#x2F;特殊模块（根据模块的外观类型分类） 基础理念 内容 图 首先，我们要把它现象为三维的很多桥，不可以跳上也不可以跳下 它可以分叉、重叠（但必须窄的在上）等，宽窄和高度可以变换 两侧可以合并 套娃不止可以套一点点 可以在路中像这样分离出来 起点和终点： 内容 图 圆圈加箭头，方向标示起点与终点 可以有多个起点与终点 一个并不一定只表示起点或终点，也可以都表示，如图 模块一般模块：圈里带着其他内容或类似的 这里以使用频率分类，再到类型： 常用模块 不常用模块 常用模块以类型分类： 常用一般模块 常用特殊模块 常用一般模块字母传送圈里只带着字母，大写A~Z，最多26对，一对只能有两个，可以传送到另一个同字母的字母传送点 飞机传送一个简笔画飞机图标(如图)，并带一条传送线到另一个相同的图标 传送线不可以交叉，但是传送线和路之间可以交叉，只不过在交叉时要把路在表面上断开，实际上还是连接着的 后来我发现一个较为类似的东西： 同标传送长这样，可以传送到任意一个相同标志的传送点 常用特殊模块网状线条传送将路的一头接上正方形的传送方块。传送方块可以接入路或传送线，一共最多4个，至少一个，不能重叠，只能在4面延展 由传送方块和传送线组成的传送网络中我们可以快速移动到这个传送网络中接入的任意一条路 传送线不可以交叉，但是传送线和路之间可以交叉，只不过在交叉时要把路在表面上断开，实际上还是连接着的 后来我发现一个较为类似的东西： 隧道顾名思义，就是路在地里 地里的路用虚线表示，用一跟长于路宽的直(的)线(段)截断 在复杂的情况下可能比较难辨认，所以不能重叠 单向门顾名思义，只能单向通过，如图 直线隔空传送 样式如图 传送端是胶囊状的，内侧是同心圆，外侧是方向指示，箭头方向可变 被传送端在路头有方向指示，箭头方向可变 在同迷宫中两个箭头能接上才能传送 中间什么都可以有 不常用模块以类型分类： 不常用一般模块 不常用特殊模块 不常用一般模块文字圆圈+字母”T”+编号（从1开始） 在一旁用虚线划出注释区，在里面用 “T”+编号+”:”+内容 写出你要写的 圈内传送（自己看吧 左边的：在圈内的路可以传送到中间 右边的：传送到任意一条在圈内的路 圈可以用浅颜色或超细的线表示 电池限时完成片段（默认5秒，可额外标记） 以一个满电电池图标开启并开始计时，没电电池图标关闭，插头图标重置时间 三角翻面&lt;—– 翻面图标：三角形，但是上面有断口 就想象重力颠倒。到了同一条路的另一面，起点终点只在正面 或者这样理解：定义变量a，起点时a为0，遇到一个就a = 1 - a(0变1 1变0)，到终点时a == 0才行 三角计算（列到一般模块有点勉强） 自己定义4个整数类型变量tc_up tc_down tc_lift tc_right 分别为上下左右，默认值为0，不能为负 上 下 左 右 + 1 - 1 终点对它没要求，但锁有 锁：当上面的满足所有条件时才能通过（通过后不会清零），由锁+编号组成， 到注释区标注 tips（朋友不会玩建议加的） &lt;—– 圈中”Tips” 可获得作者正确的提示 不常用特殊模块平行世界用不同颜色画，各自独立，可以当作两个独立的迷宫，可以重叠 但也可以转换：如图 水池可插入路，根据水池方向，只上不下（可以同高度） 二值（新什么冠！ 分别是阴和阳，又是一个变量，和三角翻面差不多但又有区别 描述 图 转阴 转羊 阴时不能通过转阴，阳时不能通过转阳 起点和终点都是阳 突变转换：跳过”阴不转阴，阳不转阳”的单向转换结构 会分出五条路，被浅分割线分割的，三个一边的是阴，两个一边的是阳 浅分割线用浅颜色或超细的线表示 其他如果是在本子上画，可以画出一些花样 把纸挖空一部分，盖上这页字和翻开这页字都走得通 画到纸的边缘，另一面接着 两张纸中间也可以续 使用向后传送门传送到纸张背后同一位置 折一下纸，让它无论是打开还是关闭、翻到左边还是右边都能接上 可以无解（不建议 ……","categories":[{"name":"其它","slug":"其它","permalink":"https://for-the-zero.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[]},{"title":"DearPyGui笔记","slug":"DearPyGui笔记","date":"2023-01-14T12:20:00.000Z","updated":"2024-01-20T15:25:36.083Z","comments":true,"path":"2023/DearPyGui笔记/","link":"","permalink":"https://for-the-zero.github.io/2023/DearPyGui%E7%AC%94%E8%AE%B0/","excerpt":"","text":"DearPyGui 笔记一个好用的 Python GUI模块 基于原文档总结出来的 没有的内容（原版文档看不懂的）Slots · Basic Example · Container Stack · Scene Graph · 3D Operations · querying · custom series · resizing · stretch · … 总体 基础主脚本必须始终 事件 代码 注释 导入 import dearpygui.dearpygui as dpg 创建上下文 dpg.create_context() 如果不是第一个 DPG不会启动&#x2F;崩溃 创建窗口 with dpg.window(label=&quot;标题&quot;): 组件 创建视区 dpg.create_viewport(title=&#39;大窗口标题&#39;, width=宽, height=高) 需要使用create_viewport创建该视区 并使用show_viewport显示 设置dearpygui dpg.setup_dearpygui() 显示该视口中 dpg.show_viewport() 启动dearpygui dpg.start_dearpygui() 清理环境 dpg.destroy_context() 创建窗口with dpg.window(label=&quot;标题&quot;, pos=位置（数组）):+组件 导入窗口 直接 间接 在create_context与create_viewport中间用from xxx import * 使用文件写入自定义 被导入文件内容（可能）只需要import dearpygui.dearpygui as dpg和窗口内容 使用文件写入自定义123with open(&#x27;./helper.py&#x27;,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as f: # healper.py 是用于帮助导入的文件 f.write(&#x27;from &#123;file&#125; import *&#x27;.format(file=&#x27;testing&#x27;)) # 写入（间接导入）from helper import * 主窗口（不必要）将填充该视口并始终绘制在其他窗口的后面且铺满视图，自动去除标题栏 123456with dpg.window(tag=&quot;Primary Window&quot;):...dpg.show_viewport()dpg.set_primary_window(&quot;Primary Window&quot;, True)dpg.start_dearpygui()... 图标1234567891011121314151617import dearpygui.dearpygui as dpgdpg.create_context()with dpg.window(label=&quot;Example Window&quot;, width=500, height=150): dpg.add_text(&quot;Hello, world&quot;)dpg.create_viewport(title=&#x27;Custom Title&#x27;, width=600, height=200) # create viewport takes in config options too!# must be called before showing viewportdpg.set_viewport_small_icon(&quot;path/to/icon.ico&quot;)dpg.set_viewport_large_icon(&quot;path/to/icon.ico&quot;)dpg.setup_dearpygui()dpg.show_viewport()dpg.start_dearpygui()dpg.destroy_context() dpg.set_viewport_large_icon()设置大图标 dpg.set_viewport_small_icon()设置小图标 组件：辅助标签系统（tag）12345678with dpg.window(label=&quot;Tutorial&quot;): b0 = dpg.add_button(label=&quot;button 0&quot;) b1 = dpg.add_button(tag=100, label=&quot;Button 1&quot;) dpg.add_button(tag=&quot;Btn2&quot;, label=&quot;Button 2&quot;)print(b0)print(b1)print(dpg.get_item_label(&quot;Btn2&quot;)) xxx = dpg.add_xxx(...) unique_tag = dpg.generate_uuid() # 在 create_context 前 dpg.add_xxx(... , tag=xxx) 可以赋值给变量 可以添加tag（dpg.get_item_label()调用） 所有项目都必须具有关联的唯一ID(UUID)，该ID可以是整数或字符串 创建项目时会自动生成标签，如果以后与组件交互，则存储此标签 dpg.last_ { item(组件) , container(容器) , root(根) } () 获取最新的对应项 容器12345678910with dpg.window(label=&quot;Tutorial&quot;): dpg.add_button(label=&quot;Button 1&quot;) dpg.add_button(label=&quot;Button 2&quot;) with dpg.group(): dpg.add_button(label=&quot;Button 3&quot;) dpg.add_button(label=&quot;Button 4&quot;) with dpg.group() as group1: passdpg.add_button(label=&quot;Button 6&quot;, parent=group1)dpg.add_button(label=&quot;Button 5&quot;, parent=group1) 在with dpg.group():内添加组件到组 也可以在外部dpg.add_…(…parent=容器名) 编辑属性123btn = dpg.add_button(label=&quot;Apply 2&quot;) #创建dpg.set_item_label(btn, &quot;Button 57&quot;) #修改label(标签)dpg.set_item_width(btn, 200) #修改高度 代码 功能 get_item_配置 控制其外观和行为的关键字(标签、回调、宽度、高度) get_item_状态 反映其交互的关键字(可见、悬停、点击等) get_item_信息 反映其信息的关键字(项目类型、子项、主题等) 回调12345678910def button_callback(sender, app_data, user_data): ...with dpg.window(label=&quot;Tutorial&quot;): # 按钮创建时创建回调 dpg.add_button(label=&quot;Apply&quot;, callback=button_callback, user_data=&quot;Some Data&quot;) # 按钮创建后创建回调 btn = dpg.add_button(label=&quot;Apply 2&quot;, ) dpg.set_item_callback(btn, button_callback) dpg.set_item_user_data(btn, &quot;Some Extra User Data&quot;) 用callback赋值函数创建 输入函数：同位置赋值 用dpg.set_item_callback链接 输入函数：set_item_赋值以链接 输入值 功能 sender 发送回调组件的id app_data 大多数为组件当前值 user_data （可选）传输自己的数据 dpg.add_xxx(…callback=…, user_data=…)dpg.set_item_user_data() 不在主线程上运行 1234567891011121314151617181920import dearpygui.dearpygui as dpgdpg.create_context()dpg.configure_app(manual_callback_management=True) #设置dpg.create_viewport()dpg.setup_dearpygui()def callback(sender, app_data, user_data): print(&quot;Called on the main thread!&quot;)with dpg.window(label=&quot;Tutorial&quot;): dpg.add_button(label=&quot;Press me&quot;, callback=callback) dpg.show_viewport()# 主循环while dpg.is_dearpygui_running(): jobs = dpg.get_callback_queue() # 获取 dpg.run_callbacks(jobs) # 运行 dpg.render_dearpygui_frame()dpg.destroy_context() 使用dpg.configure_app(manual_callback_management=True)设置 在主循环内用 xxx = dpg.get_callback_queue()获取 使用dpg.run_callbacks(xxx)运行 组件值123456789101112131415with dpg.window(width=300): input_txt = dpg.add_input_text( label=&quot;InputTxt&quot;, default_value=&quot;This is a default value!&quot;, # 默认值 ) slider_float = dpg.add_slider_float( label=&quot;SliderFloat&quot;, default_value=50.0, # 默认值 ) dpg.add_slider_int(default_value=15, tag=&quot;slider_int&quot;) # 获取值 print(dpg.get_value(input_txt)) print(dpg.get_value(slider_float)) dpg.set_value(&quot;slider_int&quot;, 40) # 设置值 添加默认值：default_value 获取值：get_value(赋值为组件的变量) 设置值：set_value(tag,值) 侦听与事件123456789101112def change_text(sender, app_data): if dpg.is_item_hovered(&quot;text item&quot;): #组件侦听 dpg.set_value(&quot;text item&quot;, f&quot;爬开!!&quot;) else: dpg.set_value(&quot;text item&quot;, f&quot;把鼠标放我上面!&quot;)with dpg.handler_registry(): dpg.add_mouse_move_handler(callback=change_text) #鼠标移动侦听with dpg.window(width=500, height=300): dpg.add_text(&quot;把鼠标放我上面!&quot;, tag=&quot;text item&quot;) # 添加文本 12345678def change_text(sender, app_data): dpg.set_value(&quot;text item&quot;, f&quot;Mouse Button ID: &#123;app_data&#125;&quot;)with dpg.window(width=500, height=300): dpg.add_text(&quot;Click me with any mouse button&quot;, tag=&quot;text item&quot;) with dpg.item_handler_registry(tag=&quot;widget handler&quot;) as handler: # 监听器设置 dpg.add_item_clicked_handler(callback=change_text) # 鼠标点击监听器并设置回调 dpg.bind_item_handler_registry(&quot;text item&quot;, &quot;widget handler&quot;) # 监听器绑定 设置监听器with dpg.item_handler_registry(tag=&quot;监听器名&quot;) as handler: 添加事件dpg.add_item_…_handler(callback=回调) 绑定监听器dpg.bind_item_handler_registry(&quot;组件tag&quot;, &quot;监听器tag&quot;) 组件事件： 名称 译意 Activated 激活 Active 活跃 Clicked 点击 Deactivated 停用 Deactivated After Edited 编辑后停用 Focus 聚焦 Hover 悬停 Resize 调整大小 Toggled 切换 Visible 可见 全局事件： 名称 译意 ——Keys—— ——以下为键盘的操作—— Down 按下 Press 按（Down+Release） Release 释放 ——Mouse—— ——以下为鼠标的操作—— Click 单击 Double Click 双击 Down 按下 Drag 拖动 Move 移动 Release 抬起 Wheel 滚轮 添加和删除组件 添加:回调dpg.add_xxx 删除：dpg.delete_item(&quot;tag&quot;) 注：删除容器时，默认情况下会删除该容器及其子项，除非delete_item中children_only设置为True时不会删除该容器 属性编辑123with dpg.window(width=500, height=300): dpg.add_button(enabled=True, label=&quot;Press me&quot;, tag=&quot;item&quot;) dpg.configure_item(&quot;item&quot;, enabled=False, label=&quot;New Label&quot;) dpg.configure_item编辑属性 dpg.get_item_configuration获取属性（字典类型） 值注册器12345678910with dpg.value_registry(): dpg.add_bool_value(default_value=True, tag=&quot;bool_value&quot;) dpg.add_string_value(default_value=&quot;Default string&quot;, tag=&quot;string_value&quot;)with dpg.window(label=&quot;Tutorial&quot;): dpg.add_checkbox(label=&quot;Radio Button1&quot;, source=&quot;bool_value&quot;) dpg.add_checkbox(label=&quot;Radio Button2&quot;, source=&quot;bool_value&quot;) dpg.add_input_text(label=&quot;Text Input 1&quot;, source=&quot;string_value&quot;) dpg.add_input_text(label=&quot;Text Input 2&quot;, source=&quot;string_value&quot;, password=True) 在with dpg.value_register():中定义 定义：dpg.add_类型{ bool(布尔) , string(字符串) }_value(default_value=默认值, tag=&quot;tag&quot;) 使用：dpg.add_xxx(… , source=&quot;对应的tag&quot;) 其他开发工具1234567891011121314151617import dearpygui.dearpygui as dpgdpg.create_context()# startdpg.show_documentation()dpg.show_style_editor()dpg.show_debug()dpg.show_about()dpg.show_metrics()dpg.show_font_manager()dpg.show_item_registry()# enddpg.create_viewport(title=&#x27;Custom Title&#x27;, width=800, height=600)dpg.setup_dearpygui()dpg.show_viewport()dpg.start_dearpygui()dpg.destroy_context() 其中几个： 代码 功能 dpg.show_style_editor() 样式编辑器 dpg.show_item_registry() 组件信息查看器 dpg.show_font_manager() 字体管理器 dpg.show_metrics() 性能监视器 渲染循环12345678910111213import dearpygui.dearpygui as dpgdpg.create_context()dpg.create_viewport(title=&#x27;Custom Title&#x27;, width=600, height=200)dpg.setup_dearpygui()with dpg.window(label=&quot;Example Window&quot;): dpg.add_text(&quot;Hello, world&quot;)dpg.show_viewport()# here ↓while dpg.is_dearpygui_running(): print(&quot;每一帧都会运行这里&quot;) dpg.render_dearpygui_frame()# here ↑dpg.destroy_context() dpg.is_dearpygui_running()判断 dpg 是否运行dpg.render_dearpygui_frame()让 dpg 渲染一帧 组件 简单组件 代码 功能 dpg.add_button(label=&quot;名称&quot;) 按钮 dpg.add_slider_int&#x2F;float(label=&quot;名称&quot;, width=限制) 滑块 dpg.add_text(&quot;xxx&quot;) 文本 dpg.add_input_text(label=&quot;xxx&quot;) 文本输入 dpg.add_checkbox(label=&quot;xx&quot;, callback=xxx) 复选框 dpg.add_color_picker(label=&quot;xxx&quot;, callback=xxx) 颜色选择 容器和上下文管理器 核心代码 上下文管理器 翻译 add_table with table(…): 表格 add_table_row with table_row(…): 表格_行 add_window with window(…): 窗口 add_menu_bar with menu_bar(…): 菜单栏 add_child with child(…): 子项 add_clipper with clipper(…): ？ add_collapsing_header with collapsing_header(…): ？ add_colormap_registry with colormap_registry(…): color map 注册表 ？ add_group with group(…): 组 add_node with node(…): 节点 ？ add_node_attribute with node_attribute(…): 节点属性 ？ add_node_editor with node_editor(…): 节点编辑器 ？ add_staging_container with staging_container(…): staging 容器 ？ add_tab_bar with tab_bar(…): 标签栏&#x2F;选项卡栏 add_tab with tab(…): 标签&#x2F;选项卡 add_tree_node with tree_node(…): 树状节点？ add_tooltip with tooltip(…): 工具提示 add_popup with popup(…): 弹出 add_drag_payload with payload(…): ？ add_drawlist with drawlist(…): 绘图列表 add_draw_layer with draw_layer(…): 绘图层 add_viewport_drawlist with viewport_drawlist(…): 视口绘图列表？&#96; add_file_dialog with file_dialog(…): 文件对话框 add_filter_set with filter_set(…): 筛选器 add_font with font(…): 字体 add_font_registry with font_registry(…): 字体注册 add_handler_registry with handler_registry(…): handler 注册器？ add_plot with plot(…): ？ add_subplots with subplots(…): 子plot？ add_texture_registry with texture_registry(…): 纹理注册器 add_value_registry with value_registry(…): 值注册器 add_theme with theme(…): 主题 add_item_pool with item_pool(…): 组件池？ add_template_registry with template_registry(…): 模板注册器 demo: 12345678910111213141516with dpg.window(label=&quot;Main&quot;): with dpg.menu_bar(): with dpg.menu(label=&quot;Themes&quot;): dpg.add_menu_item(label=&quot;Dark&quot;) dpg.add_menu_item(label=&quot;Light&quot;) dpg.add_menu_item(label=&quot;Classic&quot;) with dpg.menu(label=&quot;Other Themes&quot;): dpg.add_menu_item(label=&quot;Purple&quot;) dpg.add_menu_item(label=&quot;Gold&quot;) dpg.add_menu_item(label=&quot;Red&quot;) with dpg.menu(label=&quot;Tools&quot;): dpg.add_menu_item(label=&quot;Show Logger&quot;) dpg.add_menu_item(label=&quot;Show About&quot;) with dpg.menu(label=&quot;Oddities&quot;): dpg.add_button(label=&quot;A Button&quot;) dpg.add_simple_plot(label=&quot;Menu plot&quot;, default_value=(0.3, 0.9, 2.5, 8.9), height=80) 123456789101112131415w = dpg.add_window(label=&quot;Main&quot;)mb = dpg.add_menu_bar(parent=w)themes = dpg.add_menu(label=&quot;Themes&quot;, parent=mb)dpg.add_menu_item(label=&quot;Dark&quot;, parent=themes)dpg.add_menu_item(label=&quot;Light&quot;, parent=themes)other_themes = dpg.add_menu(label=&quot;Other Themes&quot;, parent=themes)dpg.add_menu_item(label=&quot;Purple&quot;, parent=other_themes)dpg.add_menu_item(label=&quot;Gold&quot;, parent=other_themes)dpg.add_menu_item(label=&quot;Red&quot;, parent=other_themes)tools = dpg.add_menu(label=&quot;Tools&quot;, parent=mb)dpg.add_menu_item(label=&quot;Show Logger&quot;, parent=tools)dpg.add_menu_item(label=&quot;Show About&quot;, parent=tools)oddities = dpg.add_menu(label=&quot;Oddities&quot;, parent=mb)dpg.add_button(label=&quot;A Button&quot;, parent=oddities)dpg.add_simple_plot(label=&quot;A menu plot&quot;, default_value=(0.3, 0.9, 2.5, 8.9), height=80, parent=oddities) 123456789101112131415dpg.add_window(label=&quot;Main&quot;, tag=&quot;w&quot;)dpg.add_menu_bar(parent=&quot;w&quot;, tag=&quot;mb&quot;)dpg.add_menu(label=&quot;Themes&quot;, parent=&quot;mb&quot;, tag=&quot;themes&quot;)dpg.add_menu_item(label=&quot;Dark&quot;, parent=&quot;themes&quot;)dpg.add_menu_item(label=&quot;Light&quot;, parent=&quot;themes&quot;)dpg.add_menu(label=&quot;Other Themes&quot;, parent=&quot;themes&quot;, tag=&quot;other_themes&quot;)dpg.add_menu_item(label=&quot;Purple&quot;, parent=&quot;other_themes&quot;)dpg.add_menu_item(label=&quot;Gold&quot;, parent=&quot;other_themes&quot;)dpg.add_menu_item(label=&quot;Red&quot;, parent=&quot;other_themes&quot;)dpg.add_menu(label=&quot;Tools&quot;, parent=&quot;mb&quot;, tag=&quot;tools&quot;)dpg.add_menu_item(label=&quot;Show Logger&quot;, parent=&quot;tools&quot;)dpg.add_menu_item(label=&quot;Show About&quot;, parent=&quot;tools&quot;)dpg.add_menu(label=&quot;Oddities&quot;, parent=&quot;mb&quot;, tag=&quot;Oddities&quot;)dpg.add_button(label=&quot;A Button&quot;, parent=&quot;Oddities&quot;)dpg.add_simple_plot(label=&quot;A menu plot&quot;, default_value=(0.3, 0.9, 2.5, 8.9), height=80, parent=&quot;Oddities&quot;) 123456789101112131415dpg.push_container_stack(dpg.add_window(label=&quot;Main&quot;))dpg.push_container_stack(dpg.add_menu_bar())dpg.push_container_stack(dpg.add_menu(label=&quot;Themes&quot;))dpg.add_menu_item(label=&quot;Dark&quot;)dpg.add_menu_item(label=&quot;Light&quot;)dpg.pop_container_stack()dpg.push_container_stack(dpg.add_menu(label=&quot;Tools&quot;))dpg.add_menu_item(label=&quot;Show Logger&quot;)dpg.add_menu_item(label=&quot;Show About&quot;)dpg.pop_container_stack()# remove menu_bar from container stackdpg.pop_container_stack()# remove window from container stackdpg.pop_container_stack()&lt;/details&gt; 容器槽 代码 功能 is_item_container 检查是否为容器类型 get_item_slot 返回项目的槽 get_item_parent 返回项目的父UUID get_item_children 返回项的子项 reorder_items 在一次调用中重新排序子项 move_item_up 将组件在其槽内上移 move_item_down 将组件在其槽内下移 move_item 在容器之间移动组件 set_item_children 将一个舞台移到一个组件的子槽中 绘图API 绘图命令可以添加到DrawList、VIEPORT_DrawList或窗口等容器中 创建一个绘图列表项 add_drawlist ，可以调用绘制命令来添加项 坐标系是右手坐标系，原点位于左上角，x轴指向左侧，y轴指向下方，z轴指向屏幕 123with dpg.window(label=&quot;xxx&quot;): with dpg.drawlist(width=xxx, height=xxx): ... 图层 在with dpg.draw_layer():中添加内容 dpg.draw_layer():内可添加tag 图像 可以显示PNG、JPEG或BMP类型的图像 使用DRAW_IMAGE添加图像。 使用 pmin 和 pmax 我们可以定义矩形的左上角和右下角区域 图像将缩放以适合指定区域。 使用 uv_min 和 uv_max 我们可以指定规格化的纹理坐标，以仅使用图像上区域的一部分。默认为uv_min= [0,0] 和UV_max= [1,1]将在UV_MIN=[0,0]时显示整个图像,UV_max= [0.5,0.5]将仅显示绘图的第一个四分之一。 123456789101112# 加载图片width, height, channels, data = dpg.load_image(&#x27;xxx.png&#x27;) # 0: width, 1: height, 2: channels, 3: data#注册图片with dpg.texture_registry(): dpg.add_static_texture(width, height, data, tag=&quot;image_id&quot;)with dpg.window(label=&quot;Tutorial&quot;): with dpg.drawlist(width=700, height=700): # 绘制*3 dpg.draw_image(&quot;image_id&quot;, (0, 400), (200, 600), uv_min=(0, 0), uv_max=(1, 1)) dpg.draw_image(&quot;image_id&quot;, (400, 300), (600, 500), uv_min=(0, 0), uv_max=(0.5, 0.5)) dpg.draw_image(&quot;image_id&quot;, (0, 0), (300, 300), uv_min=(0, 0), uv_max=(2.5, 2.5)) 加载图片：四个变量 = dpg.load_image(&#39;图片路径&#39;) 注册图片：with dpg.texture_registry():\\n dpg.add_static_texture(前面四个变量, tag=&quot;图片id&quot;) 使用图片： dpg.draw_image(&quot;图片id&quot;,左上、右下位置，uv规格化) 窗口与视口123456789with dpg.viewport_drawlist(): dpg.draw_circle((100, 100), 25, color=(255, 255, 255, 255)) # 置顶 dpg.add_viewport_drawlist(front=False, tag=&quot;viewport_back&quot;)dpg.draw_circle((200, 200), 25, color=(255, 255, 255, 255), parent=&quot;viewport_back&quot;) # 置底with dpg.window(label=&quot;Tutorial&quot;, width=300, height=300): dpg.add_text(&quot;Move the window over the drawings to see the effects.&quot;, wrap=300) dpg.draw_circle((100, 100), 25, color=(255, 255, 255, 255)) # 窗口内 窗口内：跟随窗口 一般dpg.viewport_drawlist内：置顶 带有viewport_backtag的dpg.viewport_drawlist内：置底 文件和目录选择器(dpg内部) 可用于选择单个文件、多个文件或目录，当用户单击 Ok 按钮，则运行对话框的回调。 信息通过APP_DATA参数传递，例如：文件路径 文件名 当前路径 当前过滤器(文件类型过滤器) 12345678def callback(sender, app_data): print(&quot;Sender: &quot;, sender) print(&quot;App Data: &quot;, app_data)dpg.add_file_dialog(directory_selector=True, show=False, callback=callback, tag=&quot;file_dialog_id&quot;)with dpg.window(label=&quot;Tutorial&quot;, width=800, height=300): dpg.add_button(label=&quot;Directory Selector&quot;, callback=lambda: dpg.show_item(&quot;file_dialog_id&quot;)) Sender: xxx App Data: {‘file_path_name’: ‘xxx’, —文件路径 ‘file_name’: ‘xxx’, —文件名 ‘current_path’: ‘xxx’, —当前路径 ‘current_filter’: ‘xxx’, —当前过滤器 ‘min_size’: [xxx, xxx], —最大大小 ‘max_size’: [xxx, xxx], —最小大小 ‘selections’: {‘xxx’: ‘xxx’}} —选择该文件&#x2F;目录的相对路径和绝对路径 callback=lambda: dpg.show_item(&quot;file_dialog_id&quot;) 扩展名123456with dpg.file_dialog(directory_selector=False, show=False, callback=callback, id=&quot;file_dialog_id&quot;): dpg.add_file_extension(&quot;.*&quot;) dpg.add_file_extension(&quot;&quot;, color=(150, 255, 150, 255)) dpg.add_file_extension(&quot;Source files (*.cpp *.h *.hpp)&#123;.cpp,.h,.hpp&#125;&quot;, color=(0, 255, 255, 255)) dpg.add_file_extension(&quot;.h&quot;, color=(255, 0, 255, 255), custom_text=&quot;[header]&quot;) dpg.add_file_extension(&quot;.py&quot;, color=(0, 255, 0, 255), custom_text=&quot;[Python]&quot;) 懒得写了，自己看 :D 加点别的1234567891011121314151617181920212223242526272829import dearpygui.dearpygui as dpgdpg.create_context()def callback(sender, app_data): print(&quot;Sender: &quot;, sender) print(&quot;App Data: &quot;, app_data)with dpg.file_dialog(directory_selector=False, show=False, callback=callback, tag=&quot;file_dialog_tag&quot;): dpg.add_file_extension(&quot;.*&quot;) dpg.add_file_extension(&quot;&quot;, color=(150, 255, 150, 255)) dpg.add_file_extension(&quot;.cpp&quot;, color=(255, 255, 0, 255)) dpg.add_file_extension(&quot;.h&quot;, color=(255, 0, 255, 255)) dpg.add_file_extension(&quot;.py&quot;, color=(0, 255, 0, 255)) with dpg.group(horizontal=True): dpg.add_button(label=&quot;fancy file dialog&quot;) dpg.add_button(label=&quot;file&quot;) dpg.add_button(label=&quot;dialog&quot;) dpg.add_date_picker() with dpg.child_window(height=100): dpg.add_selectable(label=&quot;bookmark 1&quot;) dpg.add_selectable(label=&quot;bookmark 2&quot;) dpg.add_selectable(label=&quot;bookmark 3&quot;)with dpg.window(label=&quot;Tutorial&quot;, width=800, height=300): dpg.add_button(label=&quot;File Selector&quot;, callback=lambda: dpg.show_item(&quot;file_dialog_tag&quot;))dpg.create_viewport(title=&#x27;Custom Title&#x27;, width=800, height=600)dpg.setup_dearpygui()dpg.show_viewport()dpg.start_dearpygui()dpg.destroy_context() 在里面加组或子窗口 选择多个文件通过在dpg.file_dialog设置file_count（数量限制）关键字来选择多个文件 Ctrl&#x2F;Shift 选择 过滤器&#x2F;搜寻1234567891011121314def callback(sender, filter_string): dpg.set_value(&quot;filter_id&quot;, filter_string)with dpg.window(label=&quot;about&quot;, width =500, height=300): dpg.add_input_text(label=&quot;Filter (inc, -exc)&quot;, callback=callback) with dpg.filter_set(id=&quot;filter_id&quot;): dpg.add_text(&quot;aaa1.c&quot;, filter_key=&quot;aaa1.c&quot;, bullet=True) dpg.add_text(&quot;bbb1.c&quot;, filter_key=&quot;bbb1.c&quot;, bullet=True) dpg.add_text(&quot;ccc1.c&quot;, filter_key=&quot;ccc1.c&quot;, bullet=True) dpg.add_text(&quot;aaa2.cpp&quot;, filter_key=&quot;aaa2.cpp&quot;, bullet=True) dpg.add_text(&quot;bbb2.cpp&quot;, filter_key=&quot;bbb2.cpp&quot;, bullet=True) dpg.add_text(&quot;ccc2.cpp&quot;, filter_key=&quot;ccc2.cpp&quot;, bullet=True) dpg.add_text(&quot;abc.h&quot;, filter_key=&quot;abc.h&quot;, bullet=True) dpg.add_text(&quot;hello, world&quot;, filter_key=&quot;hello, world&quot;, bullet=True) 设置： with dpg.filter_set(id=&quot;id&quot;): dpg.add_xxx(…, filter_key=&quot;xxx&quot;, bullet=True) 使用： dpg.add_input_text(…, callback=xxx) callback: def xxx(…,filter_string): dpg.set_value(&quot;id&quot;, filter_string) 字体默认字体：ProggyClean.ttf 12345678910111213# 注册字体with dpg.font_registry(): # .ttf or .otf file default_font = dpg.add_font(&quot;xxx.otf&quot;, 20) second_font = dpg.add_font(&quot;xxx.otf&quot;, 10)with dpg.window(label=&quot;Font Example&quot;, height=200, width=200): dpg.add_button(label=&quot;Default font&quot;) b2 = dpg.add_button(label=&quot;Secondary font&quot;) dpg.add_button(label=&quot;default&quot;) dpg.bind_font(default_font) # 设为默认 dpg.bind_item_font(b2, second_font) # 专门指定 注册： 默认情况下，仅添加基本拉丁语和拉丁语补充字形(0x0020-0x00FF) with dpg.font_registry(): xxx = dpg.add_font(&quot;path&quot;, pixel[px]) 添加其他字形： 123456789101112131415161718192021with dpg.font(&quot;xxx.otf&quot;, 20) as font: # 添加默认字形 dpg.add_font_range_hint(dpg.mvFontRangeHint_Default) # 其他字形 # mvFontRangeHint_Japanese # mvFontRangeHint_Korean # mvFontRangeHint_Chinese_Full # mvFontRangeHint_Chinese_Simplified_Common # mvFontRangeHint_Cyrillic # mvFontRangeHint_Thai # mvFontRangeHint_Vietnamese dpg.add_font_range_hint(dpg.mvFontRangeHint_Japanese) # 添加区间字形 dpg.add_font_range(0x3100, 0x3ff0) # 添加指定字形 dpg.add_font_chars([0x3105, 0x3107, 0x3108]) # 刷新区间字形 dpg.add_char_remap(0x3084, 0x0025) 设置： 设为默认：dpg.bind_font(xxx) 专门指定：dpg.bind_item_font(item, xxx) 附：Unicode Characters 菜单栏视口菜单栏：with dpg.viewport_menu_bar(): 窗口菜单栏：with dpg.menu_bar(): 里面的内容： with dpg.menu(label=&quot;xxx&quot;): dpg.add_menu_item 其他组件也可以 dpg.add_menu_item(label=&quot;xxx&quot;, callback=xxx) node 编辑器它有4个主要组成部分 node编辑器:node所在的区域 node:包含属性的自由浮动“窗口” 属性:带有Pins的小部件集合，用于创建指向&#x2F;来自的链接，可以是输入、输出或静态 链接:属性之间的连接 属性可以包含任何UI项。当用户单击并拖动node的属性时，将运行编辑器的回调。DPG将属性的标记通过 app_data 回调参数 12345678910111213141516171819202122232425# 连接属性时运行回调def link_callback(sender, app_data): # app_data -&gt; (link_id1, link_id2) dpg.add_node_link(app_data[0], app_data[1], parent=sender)# 断开属性时运行回调def delink_callback(sender, app_data): # app_data -&gt; link_id dpg.delete_item(app_data)with dpg.window(label=&quot;Tutorial&quot;, width=400, height=400): with dpg.node_editor(callback=link_callback, delink_callback=delink_callback): with dpg.node(label=&quot;Node 1&quot;): with dpg.node_attribute(label=&quot;Node A1&quot;): dpg.add_input_float(label=&quot;F1&quot;, width=150) with dpg.node_attribute(label=&quot;Node A2&quot;, attribute_type=dpg.mvNode_Attr_Output): dpg.add_input_float(label=&quot;F2&quot;, width=150) with dpg.node(label=&quot;Node 2&quot;): with dpg.node_attribute(label=&quot;Node A3&quot;): dpg.add_input_float(label=&quot;F3&quot;, width=200) with dpg.node_attribute(label=&quot;Node A4&quot;, attribute_type=dpg.mvNode_Attr_Output): dpg.add_input_float(label=&quot;F4&quot;, width=200) 在with dpg.node_editor(callback=link_callback, delink_callback=delink_callback):内添加内容在with dpg.node(label=&quot;xxx&quot;):内添加node在with dpg.node_attribute(label=&quot;xxx&quot;):内添加属性 选择查询检索选定的node和链接(并使用以下命令清除此选择) 1234dpg.get_selected_nodes(editor_id)dpg.get_selected_links(editor_id)dpg.clear_selected_nodes(editor_id)dpg.clear_selected_links(editor_id) 属性类型以下常量可用于 attribute_type 属性的参数 123mvNode_Attr_Input # (默认)mvNode_Attr_OutputmvNode_Attr_Static 属性形状以下常量可用于shape节点属性的参数 123456mvNode_PinShape_CirclemvNode_PinShape_CircleFilled #(默认)mvNode_PinShape_TrianglemvNode_PinShape_TriangleFilledmvNode_PinShape_QuadmvNode_PinShape_QuadFilled 绘制图表地块由多个组件组成。 Y轴：这是一个容器，是添加到绘图中的所有数据系列的父级。打印一次可以有多个Y轴(最多3个)。 X轴：这是x数据刻度(只允许1个x轴)。 系列：要显示的数据的容器。需要将数据系列添加为要在绘图上显示的Y轴的子项。有许多不同类型的数据系列可用。系列还可以包含当右键单击图例中的系列标签作为上下文菜单时将显示的UI项 图例(可选)： 这是一个普通的图例，ALOS允许用户切换哪些数据序列是可见的。 绘图具有一些内置功能： 切换数据系列：单击所需数据系列的图例名称进行切换设置：双击鼠标右键平移绘图：在绘图上单击并拖动平移轴：在轴上单击并拖动缩放：滚动鼠标滚轮缩放轴：悬停轴和滚动鼠标滚轮缩放区域：单击鼠标右键并拖动最大化显示：双击缩放轴区域：按住Shift键并单击鼠标右键并拖动 添加数据12345sindatax = []sindatay = []for i in range(0, 500): sindatax.append(i / 1000) sindatay.append(0.5 + 0.5 * sin(50 * i / 1000)) 使用.append() 创建视图：with dpg.plot(label=&quot;xxx&quot;, height=xxx, width=xxx): 可选择创建图例：dpg.add_plot_legend() 创建x、y轴：dpg.add_plot_axis(dpg.mvXAxis, label=&quot;x&quot;)和dpg.add_plot_axis(dpg.mvYAxis, label=&quot;y&quot;, tag=&quot;y_axis&quot;) 添加系列（内容，可添加多个）：dpg.add_line_series(数据（前面的sindatax和sindatay）, label=&quot;x&quot;, parent=&quot;y&quot;) 更新数据 dpg.add_line_series中添加tag dpg.set_value(&#39;tag&#39;, [x和y]) dpg.set_item_label(&#39;tag&#39;, &quot;值&quot;) 轴限制以下命令可用于控制地块轴限制 1234set_axis_limits(...)get_axis_limits(...)set_axis_limits_auto(...)fit_axis_data(...) 例子： 12345678910111213141516171819202122232425with dpg.window(label=&quot;Tutorial&quot;, width=400, height=400): with dpg.group(horizontal=True): dpg.add_button(label=&quot;fit y&quot;, callback=lambda: dpg.fit_axis_data(&quot;y_axis&quot;)) dpg.add_button(label=&quot;unlock x limits&quot;, callback=lambda: dpg.set_axis_limits_auto(&quot;x_axis&quot;)) dpg.add_button(label=&quot;unlock y limits&quot;, callback=lambda: dpg.set_axis_limits_auto(&quot;y_axis&quot;)) dpg.add_button(label=&quot;print limits x&quot;, callback=lambda: print(dpg.get_axis_limits(&quot;x_axis&quot;))) dpg.add_button(label=&quot;print limits y&quot;, callback=lambda: print(dpg.get_axis_limits(&quot;y_axis&quot;))) with dpg.plot(label=&quot;Bar Series&quot;, height=-1, width=-1): dpg.add_plot_legend() # create x axis dpg.add_plot_axis(dpg.mvXAxis, label=&quot;Student&quot;, no_gridlines=True, tag=&quot;x_axis&quot;) dpg.set_axis_limits(dpg.last_item(), 9, 33) dpg.set_axis_ticks(dpg.last_item(), ((&quot;S1&quot;, 11), (&quot;S2&quot;, 21), (&quot;S3&quot;, 31))) # create y axis dpg.add_plot_axis(dpg.mvYAxis, label=&quot;Score&quot;, tag=&quot;y_axis&quot;) dpg.set_axis_limits(&quot;y_axis&quot;, 0, 110) # add series to y axis dpg.add_bar_series([10, 20, 30], [100, 75, 90], label=&quot;Final Exam&quot;, weight=1, parent=&quot;y_axis&quot;) dpg.add_bar_series([11, 21, 31], [83, 75, 72], label=&quot;Midterm Exam&quot;, weight=1, parent=&quot;y_axis&quot;) dpg.add_bar_series([12, 22, 32], [42, 68, 23], label=&quot;Course Grade&quot;, weight=1, parent=&quot;y_axis&quot;)dpg.create_viewport(title=&#x27;Custom Title&#x27;, width=800, height=600)dpg.setup_dearpygui()dpg.show_viewport()dpg.start_dearpygui()dpg.destroy_context() 自定义轴标签可以使用设置轴标签set_axis_ticks，可以使用reset_axis_ticks重置它们 1234567891011# create x axisdpg.add_plot_axis(dpg.mvXAxis, label=&quot;Student&quot;, no_gridlines=True)dpg.set_axis_ticks(dpg.last_item(), ((&quot;S1&quot;, 11), (&quot;S2&quot;, 21), (&quot;S3&quot;, 31)))# create y axisdpg.add_plot_axis(dpg.mvYAxis, label=&quot;Score&quot;, tag=&quot;yaxis_tag&quot;)# add series to y axisdpg.add_bar_series([10, 20, 30], [100, 75, 90], label=&quot;Final Exam&quot;, weight=1, parent=&quot;yaxis_tag&quot;)dpg.add_bar_series([11, 21, 31], [83, 75, 72], label=&quot;Midterm Exam&quot;, weight=1, parent=&quot;yaxis_tag&quot;)dpg.add_bar_series([12, 22, 32], [42, 68, 23], label=&quot;Course Grade&quot;, weight=1, parent=&quot;yaxis_tag&quot;) 多个y轴（最多3个y轴） 123456789# create y axis 1dpg.add_plot_axis(dpg.mvYAxis, label=&quot;y1&quot;)dpg.add_line_series(sindatax, sindatay, label=&quot;y1 lines&quot;, parent=dpg.last_item())# create y axis 2dpg.add_plot_axis(dpg.mvYAxis, label=&quot;y2&quot;)dpg.add_stem_series(sindatax, sindatay, label=&quot;y2 stem&quot;, parent=dpg.last_item())# create y axis 3dpg.add_plot_axis(dpg.mvYAxis, label=&quot;y3 scatter&quot;)dpg.add_scatter_series(sindatax, sindatay, label=&quot;y3&quot;, parent=dpg.last_item()) 注释使用dpg.add_plot_annotation()标记 内容： label：里面的文字 default_value=(x, y)：默认值 offset=(x, y)：偏移，离指向的位置，用直线指出，可省略 color=[rgba]：标记的颜色 clamped：固定（当视角不包含该点时标签在边缘显示），可省略（默认True） 可拖动的点和线 点：dpg.add_drag_point()（用元组表示坐标） 线：dpg.add_drag_line()（用浮点数表示坐标） 内容： label：里面的文字 color=[rgba]：标记的颜色 default_value：默认值 callback：回调（获取：dpg.get_value(sender)） vertical：（线）纵向，默认True 自定义右键菜单 右击图例中对应项时弹出的菜单 在dpg.add_line_series后添加组件，并parent=指向其 例子： 123dpg.add_line_series(sindatax, sindatay, label=&quot;series 1&quot;, parent=&quot;yaxis&quot;, tag=&quot;series_1&quot;)dpg.add_button(label=&quot;Delete Series 1&quot;, parent=dpg.last_item(), callback=lambda: dpg.delete_item(&quot;series_1&quot;)) 主题详见下面的## 主题 在前面加with dpg.theme(tag=&quot;xxx&quot;): 添加主题的对象with dpg.theme_component(dpg.mvStemSeries&#x2F;dpg.mvScatterSeries&#x2F;…): 主题的内容 在图标里用dpg.bind_item_theme(&quot;图表系列tag&quot;, &quot;主题tag&quot;)应用 主题的内容： 颜色：dpg.add_theme_color(dpg.mvPlotCol_Line, (rgb), category=dpg.mvThemeCat_Plots) 点的形状：dpg.add_theme_style(dpg.mvPlotStyleVar_Marker, dpg.mvPlotMarker_Diamond&#x2F;Square&#x2F;…, category=dpg.mvThemeCat_Plots) 点的大小：dpg.add_theme_style(dpg.mvPlotStyleVar_MarkerSize, int, category=dpg.mvThemeCat_Plots) 弹出窗口 右键菜单：在with dpg.popup(链接到组件（例如dpg.last_item()）) 全屏警示框：设置modal=True（默认False） 按键：mousebutton=添加 dpg.mvMouseButton_Left左键 dpg.mvMouseButton_right右键（默认） _mvMouseButton_Middle_中键 _mvMouseButton_X1_X1 _mvMouseButton_X2_X2 将窗口作为弹出窗口： 创建：with dpg.window(label=&quot;xxx&quot;, modal=True, show=False, tag=&quot;tag&quot;, no_title_bar=True): 调用：callback=lambda: dpg.configure_item(&quot;tag&quot;, show=True) 简易图表添加：dpg.add_simple_plot(label=&quot;xxx&quot;, default_value=(int&#x2F;float), height=xxx) 参数： 柱状（默认线状）：histogram=True&quot; 覆盖在图表顶部的文字：overlay=&quot;xxx&quot; 更新数值： dpg.set_value(&quot;tag&quot;, 更新后列表) 暂存12345678910def stage_items(): # 存入 with dpg.stage(tag=&quot;stage1&quot;): dpg.add_text(&quot;hello, i was added from a stage&quot;, tag=&quot;text_tag&quot;)def present_stage_items(): # 导出 dpg.move_item(&quot;text_tag&quot;, parent=&quot;main_win&quot;)with dpg.window(label=&quot;Tutorial&quot;, tag=&quot;main_win&quot;): dpg.add_button(label=&quot;stage items&quot;, callback=stage_items) dpg.add_button(label=&quot;present stages items&quot;, callback=present_stage_items) 存储：在dpg.stage():内添加有tag的组件 清理：使用dpg.unstage(&quot;tag&quot;)和dpg.pop_container_stack() 使用类(class)包装项示例： 123456789101112131415161718192021222324class Window: def __init__(self, label): self._children = [] with dpg.stage() as stage: self.id = dpg.add_window(label=label) self.stage = stage def add_child(self, child): dpg.move_item(child.id, parent=self.id) def submit(self): dpg.unstage(self.stage)class Button: def __init__(self, label): with dpg.stage(): self.id = dpg.add_button(label=label) def set_callback(self, callback): dpg.set_item_callback(self.id, callback)my_button = Button(&quot;Press me&quot;)my_button.set_callback(lambda: print(&quot;I&#x27;ve been pressed!&quot;))my_window = Window(&quot;Tutorial&quot;)my_window.add_child(my_button)my_window.submit() 123456789101112131415161718192021class Button: def __init__(self, label): with dpg.stage() as self._staging_container_id: self._id = dpg.add_button(label=label) def set_callback(self, callback): dpg.set_item_callback(self._id, callback) def get_label(self): return dpg.get_item_label(self._id) def submit(self, parent): dpg.push_container_stack(parent) dpg.unstage(self._staging_container_id) dpg.pop_container_stack()my_button = Button(&quot;Press me&quot;)my_button.set_callback(lambda: print(&quot;I&#x27;ve been pressed!&quot;))print(my_button.get_label())with dpg.window(label=&quot;Tutorial&quot;, tag=&quot;main_win&quot;): dpg.add_text(&quot;hello world&quot;)my_button.submit(&quot;main_win&quot;) 表格基础工作 创建：with dpg.table(): 添加列：dpg.add_table_column(label)（最多64） 添加行内容：with dpg.table_row():（添加组件） 添加单元格：with dpg.table_cell():（行和列内）（相当于在这一行这一列里&lt;br/&gt;） 边框&#x2F;背景在dpg.table(加上以下内容) 关键字 解释 borders_innerH 内边框H borders_innerV 内边框V borders_outerH 外边框H borders_outerV 外边框V row_background 每一行颜色交错 （H：横向，V：竖向） 列标题在dpg.table(中把header_row设置为True ) 将显示dpg.add_table_column()的label 列选项 关键字 默认值 描述 init_width_or_weight 0.0 设置列的起始宽度(固定策略)或比例(拉伸) default_hide False 默认为隐藏&#x2F;禁用列 default_sort False 默认为排序列 width_stretch False 列将被拉伸。最好是禁用水平滚动（如果表格的尺寸是_SizingStretchSame或_SizingStretchProp则默认）。 width_fixed False 列将不会被拉伸。最好是启用水平滚动（如果表的尺寸是_SizingFixedFit且表可调整大小，则默认） no_resize False 禁用手动调整大小 no_reorder False 禁用此列的手动重新排序，这也将防止其他列与此列交叉 no_hide False 禁用隐藏&#x2F;禁用此列的功能 no_clip False 禁用此列的剪裁 no_sort False 禁用此列的排序 no_sort_ascending False 禁用按升序排序的功能 no_sort_descending False 禁用按降序排序的功能 no_header_width False 禁用页眉文本宽度对自动列宽的影响 prefer_sort_ascending True 在此列上首次排序时将初始排序方向设置为升序(默认) prefer_sort_descending False 在此列上首次排序时，将初始排序方向设置为降序 indent_enabled False 输入单元格时使用当前缩进值(第0列默认) indent_disable False 输入单元格时忽略当前的缩进值（默认为列&gt;0）。在单元格内的缩进变化仍将被尊重(?) ###列排序 在dpg.table添加属性sortable=True和callback 不要排序的列添加属性no_sort=True（默认False） 自定义排序 排序回调示例： 12345678910111213141516171819202122232425262728293031323334def sort_callback(sender, sort_specs): # sort_specs scenarios: # 1. no sorting -&gt; sort_specs == None # 2. single sorting -&gt; sort_specs == [[column_id, direction]] # 3. multi sorting -&gt; sort_specs == [[column_id, direction], [column_id, direction], ...] # # notes: # 1. direction is ascending if == 1 # 2. direction is ascending if == -1 # no sorting case if sort_specs is None: return rows = dpg.get_item_children(sender, 1) # create a list that can be sorted based on first cell # value, keeping track of row and value used to sort sortable_list = [] for row in rows: first_cell = dpg.get_item_children(row, 1)[0] sortable_list.append([row, dpg.get_value(first_cell)]) def _sorter(e): return e[1] sortable_list.sort(key=_sorter, reverse=sort_specs[0][1] &lt; 0) # create list of just sorted row ids new_order = [] for pair in sortable_list: new_order.append(pair[0]) dpg.reorder_items(sender, 1, new_order) 裁剪优化性能 123456789101112131415def clipper_toggle(sender): dpg.configure_item(&quot;table_clip&quot;, clipper=dpg.get_value(sender))with dpg.window(label=&quot;Tutorial&quot;): dpg.add_checkbox(label=&quot;clipper&quot;, callback=clipper_toggle, default_value=True) with dpg.table(header_row=False, tag=&quot;table_clip&quot;, clipper=True): for i in range(5): dpg.add_table_column() for i in range(30000): with dpg.table_row(): for j in range(5): dpg.add_text(f&quot;Row&#123;i&#125; Column&#123;j&#125;&quot;) dpg.table添加属性clipper=True 添加dpg.configure_item(&quot;tag&quot;, clipper=True) 纹理提供3种类型的纹理：静态的、原始纹理、动态的 可以在以下组件中使用纹理：mvDrawImage、mvImage、mvImageButton、mvImageSeries 它们总是一维列表或数组 使用关键字Show将打开纹理注册表 静态纹理用于不经常更改的图像，通常在启动时加载 如果需要更新它们，您可以删除并重新创建它们。它们可以是列表、元组、NumPy数组，以及支持具有连续数据的Python缓冲区协议的任何类型 例子： 123456789101112texture_data = []for i in range(0, 100 * 100): texture_data.append(255 / 255) texture_data.append(0) texture_data.append(255 / 255) texture_data.append(255 / 255)with dpg.texture_registry(show=True): dpg.add_static_texture(width=100, height=100, default_value=texture_data, tag=&quot;texture_tag&quot;)with dpg.window(label=&quot;Tutorial&quot;): dpg.add_image(&quot;texture_tag&quot;) 动态纹理用于每帧可以更改的中小型纹理 可以使用set_value更新这些选项，但宽度和高度必须与第一次创建纹理时相同 除了执行安全检查和转化外，这些纹理与原始纹理相似 例子： 123456789101112131415161718192021222324252627282930texture_data = []for i in range(0, 100 * 100): texture_data.append(255 / 255) texture_data.append(0) texture_data.append(255 / 255) texture_data.append(255 / 255)with dpg.texture_registry(show=True): dpg.add_dynamic_texture(width=100, height=100, default_value=texture_data, tag=&quot;texture_tag&quot;)def _update_dynamic_textures(sender, app_data, user_data): new_color = dpg.get_value(sender) new_color[0] = new_color[0] / 255 new_color[1] = new_color[1] / 255 new_color[2] = new_color[2] / 255 new_color[3] = new_color[3] / 255 new_texture_data = [] for i in range(0, 100 * 100): new_texture_data.append(new_color[0]) new_texture_data.append(new_color[1]) new_texture_data.append(new_color[2]) new_texture_data.append(new_color[3]) dpg.set_value(&quot;texture_tag&quot;, new_texture_data)with dpg.window(label=&quot;Tutorial&quot;): dpg.add_image(&quot;texture_tag&quot;) dpg.add_color_picker((255, 0, 255, 255), label=&quot;Texture&quot;, no_side_preview=True, alpha_bar=True, width=200, callback=_update_dynamic_textures) 原始纹理使用方式与动态纹理相同，但只接受数组(NumPy、PYTHON等)且不执行任何安全检查。 这些纹理用于需要每帧更新大型纹理的高性能应用程序 123456789101112131415161718192021222324252627import arraytexture_data = []for i in range(0, 100 * 100): texture_data.append(255 / 255) texture_data.append(0) texture_data.append(255 / 255) texture_data.append(255 / 255)raw_data = array.array(&#x27;f&#x27;, texture_data)with dpg.texture_registry(show=True): dpg.add_raw_texture(width=100, height=100, default_value=raw_data, format=dpg.mvFormat_Float_rgba, tag=&quot;texture_tag&quot;)def update_dynamic_texture(sender, app_data, user_data): new_color = dpg.get_value(sender) new_color[0] = new_color[0] / 255 new_color[1] = new_color[1] / 255 new_color[2] = new_color[2] / 255 new_color[3] = new_color[3] / 255 for i in range(0, 100 * 100 * 4): raw_data[i] = new_color[i % 4]with dpg.window(label=&quot;Tutorial&quot;): dpg.add_image(&quot;texture_tag&quot;) dpg.add_color_picker((255, 0, 255, 255), label=&quot;Texture&quot;, no_side_preview=True, alpha_bar=True, width=200, callback=update_dynamic_texture) 格式支持： 格式化 静态纹理 动态纹理 原始纹理 mvFormat_Float_rgba ✅ ✅ ✅ mvFormat_Float_rgb ✅ mvFormat_Int_rgba mvFormat_Int_rgba 加载图像使用load_image文件加载图像数据 此函数返回一个元组，其中 0-&gt;宽度 1-&gt;高度 2-&gt;途径 3-&gt;DATA(一维数组，mvBuffer) 如果失败，则返回 None 。 接受的文件类型包括： JPEG(无12位&#x2F;通道JPEG或采用算术编码的JPEG) PNG BMP PSD GIF HDR PIC PPM PGM 例子： 1234567width, height, channels, data = dpg.load_image(&quot;xxx.png&quot;)with dpg.texture_registry(show=True): dpg.add_static_texture(width=width, height=height, default_value=data, tag=&quot;texture_tag&quot;)with dpg.window(label=&quot;Tutorial&quot;): dpg.add_image(&quot;texture_tag&quot;) 保存图像使用save_image将图像数据保存到文件。 该图像是从左到右、从上到下存储的像素的矩形。每个像素最多包含4个数据分量，每个通道8位交织，顺序如下：1&#x3D;Y、2&#x3D;YA、3&#x3D;RGB、4&#x3D;RGBA（y表示单色） PNG创建的输出文件具有与输入相同数量的组件，BMP格式将文件格式中的Y扩展为RGB且不输出Alpha。 接受的文件类型包括： PNG JPG BMP TGA HDR 文件类型由扩展名决定。必须为小写(PNG、JPG、BMP、TGA、HDR)。 例子： 1234567891011121314width, height = 255, 255data = []for i in range(width*height): data.append(255) data.append(255) data.append(0)with dpg.window(label=&quot;Tutorial&quot;): dpg.add_button(label=&quot;Save Image&quot;, callback=lambda:dpg.save_image(file=&quot;newImage.png&quot;, width=width, height=height, data=data, components=3))dpg.show_viewport()while dpg.is_dearpygui_running(): dpg.render_dearpygui_frame() 主题主题是由以下内容组成的容器： 主题组件：是主题中的容器，可以指定主题颜色&#x2F;样式的目标项目类型 主题颜色：添加到主题组件并设置颜色的项 主题样式：添加到主题组件并设置样式的项目 主题可以： 绑定为默认主题。这将在所有窗口中产生全局效果 绑定到一个容器。如果适用的主题组件在该主题中，将应用到它的子项 如果主题中有适用的主题组件，则绑定到项类型、项容器或特定项 主题组件必须具有指定的项目类型。这可以是MvAll适用于所有组件或特定组件类型。 样式和颜色项目有一个命名的常量，并将该常量应用于其组件的命名项目类型。风格和颜色项目必须有一个命名的类别，常量在名称中包含其类别 主题颜色和样式分为以下类别： mvThemeCat_Plots ：与绘图关联的项目。标识的样式&#x2F;颜色常量： mvPlotCol_*或mvPlotStyle_* mvThemeCat_Nodes ：与bode关联的项。标识的样式&#x2F;颜色常量： mvNodeCol_*或mvNodeStyle_* mvThemeCat_Core ：所有其他在dearpygui内组件。标识的样式&#x2F;颜色常量 ：mvThemeCol_*或mvThemeStyle_* 可参考dpg.show_style_editor() 默认主题(全局)将在所有窗口中全局应用该主题，并适用于子窗口 1234567891011with dpg.theme() as global_theme: with dpg.theme_component(dpg.mvAll): dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (255, 140, 23), category=dpg.mvThemeCat_Core) dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, 5, category=dpg.mvThemeCat_Core) with dpg.theme_component(dpg.mvInputInt): dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (140, 255, 23), category=dpg.mvThemeCat_Core) dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, 5, category=dpg.mvThemeCat_Core)dpg.bind_theme(global_theme) 只特定于组件将主题应用于特定组件，将覆盖该指定项之前的任何主题 123456789with dpg.window(label=&quot;Tutorial&quot;, pos=(20, 50), width=275, height=225) as win1: t = dpg.add_input_text(default_value=&quot;some text&quot;) with dpg.theme() as item_theme: with dpg.theme_component(dpg.mvAll): dpg.add_theme_color(dpg.mvThemeCol_FrameBg, (200, 200, 100), category=dpg.mvThemeCat_Core) dpg.add_theme_style(dpg.mvStyleVar_FrameRounding, 0, category=dpg.mvThemeCat_Core)dpg.bind_item_theme(t, item_theme) 主题的优先顺序应用的主题的优先顺序按以下顺序排列: 具体组件 继承的容器 全局 禁用组件的主题每个组件都有单独的禁用主题，在禁用时会使用该主题 如果未设置禁用主题，则将使用默认禁用主题 组件加enabled=False with dpg.theme_xxx():添加参数enabled_state=False 标记图表图形 参数 意 mvPlotMarker_None 无 mvPlotMarker_Circle 圆圈 mvPlotMarker_Square 方形 mvPlotMarker_Diamond 钻石形 mvPlotMarker_Up 上 mvPlotMarker_Down 下 mvPlotMarker_Left 左 mvPlotMarker_Right 右 mvPlotMarker_Cross 叉号 mvPlotMarker_Plus 加号 mvPlotMarker_Asterisk 星号 支持颜色的 参数 意 mvThemeCol_Text 文本 mvThemeCol_TabActive 激活Tab mvThemeCol_SliderGrabActive 滑块抓取活动 mvThemeCol_TextDisabled 已禁用的文本 mvThemeCol_TabUnfocused 未聚焦Tab mvThemeCol_Button 按钮 mvThemeCol_WindowBg 窗口背景 mvThemeCol_TabUnfocusedActive 激活未聚焦Tab mvThemeCol_ButtonHovered 被鼠标悬停的按钮 mvThemeCol_ChildBg 子背景 mvThemeCol_DockingPreview ？ mvThemeCol_ButtonActiv 被点击的按钮 mvThemeCol_Border 边缘 mvThemeCol_DockingEmptyBg ？ mvThemeCol_Header 标题 mvThemeCol_PopupBg ？ mvThemeCol_PlotLines 图表的线 mvThemeCol_HeaderHovered 被悬停的标题 mvThemeCol_BorderShadow 边缘阴影 mvThemeCol_PlotLinesHovered 被悬停的图表的线 mvThemeCol_HeaderActive 激活的标题？ mvThemeCol_FrameBg ？ mvThemeCol_PlotHistogram 图表直方图 mvThemeCol_Separator 分隔符 mvThemeCol_FrameBgHovered ？ mvThemeCol_PlotHistogramHovered 被悬停的图表直方图 mvThemeCol_SeparatorHovered 被悬停的分隔符 mvThemeCol_FrameBgActive ？ mvThemeCol_TableHeaderBg 表头背景 mvThemeCol_SeparatorActive 激活的分隔符？ mvThemeCol_TitleBg 标题背景 mvThemeCol_SeparatorTableBorderStrong ？ mvThemeCol_ResizeGrip ？ mvThemeCol_TitleBgActive 激活的标题背景？ mvThemeCol_TableBorderLight ？ mvThemeCol_ResizeGripHovered ？ mvThemeCol_TitleBgCollapsed 崩溃的标题背景？ mvThemeCol_TableRowBg 表格行背景 mvThemeCol_ResizeGripActive ？ mvThemeCol_MenuBarBg 菜单栏背景 mvThemeCol_TableRowBgAlt 表格行背景符号？ mvThemeCol_Tab Tab mvThemeCol_ScrollbarBg 滚动栏背景 mvThemeCol_TextSelectedBg 文本选择背景 mvThemeCol_TabHovered 被悬停的Tab mvThemeCol_ScrollbarGrab ？ mvThemeCol_DragDropTarget 拖动目标 mvThemeCol_ScrollbarGrabHovered ？ mvThemeCol_NavHighlight 导航栏高亮 mvThemeCol_ScrollbarGrabActive ？ mvThemeCol_NavWindowingHighlight 导航栏窗口高亮？ mvThemeCol_CheckMark 打勾？ mvThemeCol_NavWindowingDimBg ？ mvThemeCol_SliderGrab ？ mvThemeCol_ModalWindowDimBg ？ 图表颜色 参数 意 mvPlotCol_Line 线 mvPlotCol_LegendBg 图例背景 mvPlotCol_YAxisGrid Y轴网格 mvPlotCol_Fill 填充 mvPlotCol_LegendBorder 图例边框 mvPlotCol_YAxis2 Y轴2 mvPlotCol_MarkerOutline ？ mvPlotCol_LegendText ？ mvPlotCol_YAxisGrid2 Y轴网格2 mvPlotCol_MarkerFill 标记填充 mvPlotCol_TitleText 标题文本 mvPlotCol_YAxis3 Y轴3 mvPlotCol_ErrorBar 错误栏 mvPlotCol_InlayText ？ mvPlotCol_YAxisGrid3 Y轴网格3 mvPlotCol_FrameBg ？ mvPlotCol_XAxis X轴 mvPlotCol_Selection 选择器 mvPlotCol_PlotBg 图表背景 mvPlotCol_XAxisGrid X轴网格 mvPlotCol_Query 查询 mvPlotCol_PlotBorder 图表边框 mvPlotCol_YAxis Y轴 mvPlotCol_Crosshairs 十字线（坐标） node颜色 参数 意 mvNodeCol_NodeBackground Node背景 mvNodeCol_TitleBarSelected 已选择标题栏 mvNodeCol_BoxSelector 盒子选择器 mvNodeCol_NodeBackgroundHovered 被悬停的Node背景 mvNodeCol_Link 链接 mvNodeCol_BoxSelectorOutline ？ mvNodeCol_NodeBackgroundSelected 已选择Note背景 mvNodeCol_LinkHovered 被悬停的链接 mvNodeCol_GridBackground 网格背景 mvNodeCol_NodeOutline ？ mvNodeCol_LinkSelected 已选择背景 mvNodeCol_GridLine 网格线 mvNodeCol_TitleBar 标题栏 mvNodeCol_Pin 钉 mvNodeCol_PinHovered 已悬停的钉 mvNodeCol_TitleBarHovered 已悬停的标题栏 核心样式 参数 组件 意 mvStyleVar_Alpha 1 透明度 mvStyleVar_WindowPadding 2 窗口填充 mvStyleVar_WindowRounding 1 窗口圆角 mvStyleVar_WindowBorderSize 1 窗口边缘大小 mvStyleVar_WindowMinSize 2 窗口最小大小 mvStyleVar_WindowTitleAlign 2 窗口标题对齐 mvStyleVar_ChildRounding 1 子边距 mvStyleVar_ChildBorderSize 1 子边缘大小 mvStyleVar_PopupRounding 1 ？ mvStyleVar_PopupBorderSize 1 ？ mvStyleVar_FramePadding 2 ？ mvStyleVar_FrameRounding 1 ？ mvStyleVar_FrameBorderSize 1 ？ mvStyleVar_ItemSpacing 2 组件间隔 mvStyleVar_ItemInnerSpacing 2 组件内间隔 mvStyleVar_IndentSpacing 1 缩进间隔 mvStyleVar_CellPadding 2 ？ mvStyleVar_ScrollbarSize 1 滚动条大小 mvStyleVar_ScrollbarRounding 1 滚动条圆角 mvStyleVar_GrabMinSize 1 ？ mvStyleVar_GrabRounding 1 ？ mvStyleVar_TabRounding 1 Tab圆角 mvStyleVar_ButtonTextAlign 2 按钮文本对齐 mvStyleVar_SelectableTextAlign 2 可选文本对齐 打印样式 参数 组件 意 mvPlotStyleVar_LineWeight 1 线宽 mvPlotStyleVar_Marker 1 标记 mvPlotStyleVar_MarkerSize 1 标记大小 mvPlotStyleVar_MarkerWeight 1 标记宽 mvPlotStyleVar_FillAlpha 1 填充透明度 mvPlotStyleVar_ErrorBarSize 1 错误栏大小 mvPlotStyleVar_ErrorBarWeight 1 错误栏宽度 mvPlotStyleVar_DigitalBitHeight 1 ？ mvPlotStyleVar_DigitalBitGap 1 ？ mvPlotStyleVar_PlotBorderSize 1 图表边框大小 mvPlotStyleVar_MinorAlpha 1 ？ mvPlotStyleVar_MajorTickLen 2 ？ mvPlotStyleVar_MinorTickLen 2 ？ mvPlotStyleVar_MajorTickSize 2 ？ mvPlotStyleVar_MinorTickSize 2 ？ mvPlotStyleVar_MajorGridSize 2 ？ mvPlotStyleVar_MinorGridSize 2 ？ mvPlotStyleVar_PlotPadding 2 图表填充 mvPlotStyleVar_LabelPadding 2 标签填充 mvPlotStyleVar_LegendPadding 2 图例填充 mvPlotStyleVar_LegendInnerPadding 2 内图例填充 mvPlotStyleVar_LegendSpacing 2 图例边距 mvPlotStyleVar_MousePosPadding 2 鼠标位置填充 mvPlotStyleVar_AnnotationPadding 2 注释填充 mvPlotStyleVar_FitPadding 2 ？ mvPlotStyleVar_PlotDefaultSize 2 图表默认大小 mvPlotStyleVar_PlotMinSize 2 图表最小大小 Node样式 参数 组件 意 mvNodeStyleVar_GridSpacing 1 网格间距 mvNodeStyleVar_NodeCornerRounding 1 Node边角圆角 mvNodeStyleVar_NodePaddingHorizontal 1 Node横向填充 mvNodeStyleVar_NodePaddingVertical 1 Node竖向填充 mvNodeStyleVar_NodeBorderThickness 1 边缘大小 mvNodeStyleVar_LinkThickness 1 链接厚度 mvNodeStyleVar_LinkLineSegmentsPerLength 1 链接线长 mvNodeStyleVar_LinkHoverDistance 1 链接悬停距离 mvNodeStyleVar_PinCircleRadius 1 钉 圆半径 mvNodeStyleVar_PinQuadSideLength 1 钉 四边形长 mvNodeStyleVar_PinTriangleSideLength 1 钉 三角形边长 mvNodeStyleVar_PinLineThickness 1 钉 线条厚度 mvNodeStyleVar_PinHoverRadius 1 钉 悬停半径 mvNodeStyleVar_PinOffset 1 钉 偏移 工具提示是当项目悬停时显示的窗口，可以保存任何其他组件的容器，必须具有父参数 123dpg.add_text(&quot;Hover me&quot;, tag=&quot;tooltip_parent&quot;)with dpg.tooltip(&quot;tooltip_parent&quot;): dpg.add_text(&quot;A tooltip&quot;)","categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"}]},{"title":"关于","slug":"关于","date":"2023-01-14T06:46:00.000Z","updated":"2025-05-03T09:02:08.147Z","comments":true,"path":"2023/关于/","link":"","permalink":"https://for-the-zero.github.io/2023/%E5%85%B3%E4%BA%8E/","excerpt":"","text":"for_the_zero我，站长一只高中畜生 我的各个平台入口：https://bento.me/ftz 就……凭兴趣搞的 但是要是内容有更新，我不一定会改例如上面那行 我不太会搞 写过:scratch(不想搞了)python和h5(边写边学) 偶尔写几篇文章文笔不好，但文章重要的是内容 内容啥都有 内容可能是→ 自己感兴趣的教程问题解决乱发的…… 评论区：issues 博客： Github Pages Netlify Vercel link link link 较慢 国内推荐 国外推荐（国内被墙） 网盘（已经弃用了）： Github Pages Vercel link link 其他看上一篇和这篇","categories":[{"name":"站点","slug":"站点","permalink":"https://for-the-zero.github.io/categories/%E7%AB%99%E7%82%B9/"}],"tags":[],"author":"for_the_zero"},{"title":"终于搭好了","slug":"Test-1","date":"2023-01-12T13:13:00.000Z","updated":"2025-02-22T03:28:18.121Z","comments":true,"path":"2023/Test-1/","link":"","permalink":"https://for-the-zero.github.io/2023/Test-1/","excerpt":"","text":"终于把这玩意搭建好了使用了Hexo和Github Pages 主题是fluid","categories":[{"name":"站点","slug":"站点","permalink":"https://for-the-zero.github.io/categories/%E7%AB%99%E7%82%B9/"}],"tags":[],"author":"for_the_zero"}],"categories":[{"name":"技术","slug":"技术","permalink":"https://for-the-zero.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"文笔","slug":"文笔","permalink":"https://for-the-zero.github.io/categories/%E6%96%87%E7%AC%94/"},{"name":"其它","slug":"其它","permalink":"https://for-the-zero.github.io/categories/%E5%85%B6%E5%AE%83/"},{"name":"自己","slug":"自己","permalink":"https://for-the-zero.github.io/categories/%E8%87%AA%E5%B7%B1/"},{"name":"站点","slug":"站点","permalink":"https://for-the-zero.github.io/categories/%E7%AB%99%E7%82%B9/"}],"tags":[{"name":"Dev","slug":"Dev","permalink":"https://for-the-zero.github.io/tags/Dev/"},{"name":"LLM","slug":"LLM","permalink":"https://for-the-zero.github.io/tags/LLM/"},{"name":"H5","slug":"H5","permalink":"https://for-the-zero.github.io/tags/H5/"},{"name":"Python","slug":"Python","permalink":"https://for-the-zero.github.io/tags/Python/"},{"name":"拍照","slug":"拍照","permalink":"https://for-the-zero.github.io/tags/%E6%8B%8D%E7%85%A7/"}]}